{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/ini/ini.js","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/crc-32/crc32.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/iniConverter.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/faceParser.js","webpack:///./node_modules/lua-json/index.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue","webpack:///./node_modules/@jx3box/jx3box-facedat/src/fixOldData.js","webpack:///node_modules/@jx3box/jx3box-facedat/src/Facedat.vue","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?e0f2","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?ad63","webpack:///./node_modules/lua-json/node_modules/luaparse/luaparse.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?0604"],"names":["this","b","a","autoBom","console","warn","test","type","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","$","$entries","entries","stat","O","hasOwnProperty","eol","process","platform","encode","obj","opt","children","out","section","whitespace","create","separator","keys","val","item","safe","nk","dotSplit","join","child","str","split","map","part","decode","p","re","lines","line","match","undefined","unsafe","keyRaw","slice","key","valueRaw","JSON","parse","remove","parts","pop","nl","del","isQuoted","charAt","trim","stringify","doUnesc","esc","unesc","indexOf","substr","_","DESCRIPTORS","uncurryThis","objectKeys","toIndexedObject","$propertyIsEnumerable","propertyIsEnumerable","createMethod","TO_ENTRIES","it","values","factory","DO_NOT_EXPORT_CRC","CRC32","signed_crc_table","table","n","Int32Array","version","T0","slice_by_16_tables","T","v","subarray","TT","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","crc32_bstr","bstr","seed","C","L","charCodeAt","crc32_buf","B","crc32_str","buf","getFaceProperty","ini","defaultValue","parseInt","getDecalSection","sectionName","content","parseFloat","convertIni","parseFace","rawData","ignoreHeaderError","gbkDecoder","TextDecoder","sig","Uint8Array","log","hashFlag","compressFlag","Error","hash","DataView","getInt32","length1","length2","remainingLen","byteLength","payload","payloadHash","luaData","dumpFace","gbkEncoder","TextEncoder","payloadBuf","crc32","output","Buffer","alloc","write","writeUInt32LE","isNull","isBoolean","isNumber","isString","isObject","isEmpty","fromPairs","repeat","parseLua","formatLuaString","string","singleQuote","valueKeys","false","true","null","formatLuaKey","format","options","spaces","rec","toString","spacesEnd","luaAstToJson","ast","includes","operator","argument","__internal_table_key","fields","object","field","init","arguments","comments","render","_vm","_c","_self","ready","staticClass","attrs","tab_type","model","active","callback","$$v","expression","_l","group","_v","dict","facedata","bone_range","body_type","lock","$set","cleandata","directives","rawName","clean","checkdecal_prop","getDecalIcon","getDecalName","showDecalFree","showDecalPrice","getDecorationIcon","getDecorationName","showDecorationPrice","total_coin","ref","on","$event","buildData","staticRenderFns","fixOldData","olddata","newdata","tBone","tDecal","nRoleType","misc","decal","forEach","nShowID","props","data","decal_group","decalMap","decorationMap","computed","_cleandata","cloneDeep","nDecorationID","CanUseInCreate","decal_default","client","_this$facedata","_nMajorVersion","nMajorVersion","output_std","amendVersion","amendBone","output_origin","prop","decal_prop","sum","_Object$entries","_Object$entries$_i","watch","deep","handler","$forceUpdate","immediate","fetchDecal","fetchDecoration","methods","$notify","message","get","iconid","__iconPath","_this$decalMap","_this$decalMap$this$b","_this$decalMap$this$b2","_this$decalMap$this$b3","_dict$key","_this$decalMap2","_this$decalMap2$this$","_this$decalMap2$this$2","_this$decalMap2$this$3","_dict$key2","CoinPrice","id","outputWithHeader","blob","Date","now","versions","nVersion","_bone","bone_default","_fixbone","assign","amendDecal","fetchWithLocalStorage","url","onFetch","localData","sessionStorage","getItem","axios","then","res","setItem","_this","concat","__ossMirror","_this2","mounted","component","root","objectTypes","freeExports","nodeType","freeModule","freeGlobal","moduleExports","input","defaultOptions","wait","scope","locations","ranges","onCreateNode","onCreateScope","onDestroyScope","EOF","StringLiteral","Keyword","Identifier","NumericLiteral","Punctuator","BooleanLiteral","NilLiteral","VarargLiteral","tokenTypes","errors","unexpected","expected","expectedToken","unfinishedString","malformedNumber","invalidVar","labelStatement","label","breakStatement","gotoStatement","returnStatement","args","ifStatement","clauses","ifClause","condition","elseifClause","elseClause","whileStatement","doStatement","repeatStatement","localStatement","variables","assignmentStatement","callStatement","functionStatement","identifier","parameters","isLocal","forNumericStatement","variable","start","end","step","forGenericStatement","iterators","chunk","literal","raw","tableKey","tableKeyString","tableValue","tableConstructorExpression","binaryExpression","left","right","unaryExpression","memberExpression","base","indexer","indexExpression","index","callExpression","tableCallExpression","stringCallExpression","comment","finishNode","node","trackLocations","complete","loc","range","token","previousToken","lookahead","tokenStart","lineStart","scopes","scopeDepth","globals","array","element","indexOfObject","property","sprintf","extend","src","dest","raise","col","apply","SyntaxError","column","raiseUnexpectedToken","found","near","lex","skipWhiteSpace","scanComment","charCode","isIdentifierStart","scanIdentifierOrKeyword","scanStringLiteral","scanNumericLiteral","isDecDigit","scanVarargLiteral","scanPunctuator","scanLongStringLiteral","consumeEOL","peekCharCode","isLineTerminator","isWhiteSpace","isIdentifierPart","isKeyword","delimiter","stringStart","readEscapeSequence","String","fromCharCode","readLongString","character","readHexLiteral","readDecLiteral","digit","fractionStart","exponentStart","digitStart","fraction","binaryExponent","binarySign","isHexDigit","Math","pow","sequenceStart","isLong","commentStart","lineStartComment","lineComment","level","terminator","consume","expect","isUnary","isCallExpression","isBlockFollow","createScope","destroyScope","scopeIdentifierName","scopeIdentifier","attachScope","scopeHasName","createLocationMarker","Marker","markLocation","pushLocation","marker","parseChunk","parseBlock","statement","block","parseStatement","parseLocalStatement","parseIfStatement","parseReturnStatement","parseFunctionName","parseFunctionDeclaration","parseWhileStatement","parseForStatement","parseRepeatStatement","parseBreakStatement","parseDoStatement","parseGotoStatement","parseLabelStatement","parseAssignmentOrCallStatement","parseIdentifier","parseExpectedExpression","expressions","parseExpression","validateVar","inParens","previous","parsePrefixExpression","exp","parameter","parsePrimaryExpression","parseTableConstructor","parseSubExpression","binaryPrecedence","minPrecedence","precedence","parseCallExpression","literals","_input","_options"],"mappings":"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","file":"js/chunk-1872fa79.244bb1a3.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","const { hasOwnProperty } = Object.prototype\n\nconst eol = typeof process !== 'undefined' &&\n  process.platform === 'win32' ? '\\r\\n' : '\\n'\n\nconst encode = (obj, opt) => {\n  const children = []\n  let out = ''\n\n  if (typeof opt === 'string') {\n    opt = {\n      section: opt,\n      whitespace: false,\n    }\n  } else {\n    opt = opt || Object.create(null)\n    opt.whitespace = opt.whitespace === true\n  }\n\n  const separator = opt.whitespace ? ' = ' : '='\n\n  for (const k of Object.keys(obj)) {\n    const val = obj[k]\n    if (val && Array.isArray(val)) {\n      for (const item of val)\n        out += safe(k + '[]') + separator + safe(item) + '\\n'\n    } else if (val && typeof val === 'object')\n      children.push(k)\n    else\n      out += safe(k) + separator + safe(val) + eol\n  }\n\n  if (opt.section && out.length)\n    out = '[' + safe(opt.section) + ']' + eol + out\n\n  for (const k of children) {\n    const nk = dotSplit(k).join('\\\\.')\n    const section = (opt.section ? opt.section + '.' : '') + nk\n    const { whitespace } = opt\n    const child = encode(obj[k], {\n      section,\n      whitespace,\n    })\n    if (out.length && child.length)\n      out += eol\n\n    out += child\n  }\n\n  return out\n}\n\nconst dotSplit = str =>\n  str.replace(/\\1/g, '\\u0002LITERAL\\\\1LITERAL\\u0002')\n    .replace(/\\\\\\./g, '\\u0001')\n    .split(/\\./)\n    .map(part =>\n      part.replace(/\\1/g, '\\\\.')\n        .replace(/\\2LITERAL\\\\1LITERAL\\2/g, '\\u0001'))\n\nconst decode = str => {\n  const out = Object.create(null)\n  let p = out\n  let section = null\n  //          section     |key      = value\n  const re = /^\\[([^\\]]*)\\]$|^([^=]+)(=(.*))?$/i\n  const lines = str.split(/[\\r\\n]+/g)\n\n  for (const line of lines) {\n    if (!line || line.match(/^\\s*[;#]/))\n      continue\n    const match = line.match(re)\n    if (!match)\n      continue\n    if (match[1] !== undefined) {\n      section = unsafe(match[1])\n      if (section === '__proto__') {\n        // not allowed\n        // keep parsing the section, but don't attach it.\n        p = Object.create(null)\n        continue\n      }\n      p = out[section] = out[section] || Object.create(null)\n      continue\n    }\n    const keyRaw = unsafe(match[2])\n    const isArray = keyRaw.length > 2 && keyRaw.slice(-2) === '[]'\n    const key = isArray ? keyRaw.slice(0, -2) : keyRaw\n    if (key === '__proto__')\n      continue\n    const valueRaw = match[3] ? unsafe(match[4]) : true\n    const value = valueRaw === 'true' ||\n      valueRaw === 'false' ||\n      valueRaw === 'null' ? JSON.parse(valueRaw)\n      : valueRaw\n\n    // Convert keys with '[]' suffix to an array\n    if (isArray) {\n      if (!hasOwnProperty.call(p, key))\n        p[key] = []\n      else if (!Array.isArray(p[key]))\n        p[key] = [p[key]]\n    }\n\n    // safeguard against resetting a previously defined\n    // array by accidentally forgetting the brackets\n    if (Array.isArray(p[key]))\n      p[key].push(value)\n    else\n      p[key] = value\n  }\n\n  // {a:{y:1},\"a.b\":{x:2}} --> {a:{y:1,b:{x:2}}}\n  // use a filter to return the keys that have to be deleted.\n  const remove = []\n  for (const k of Object.keys(out)) {\n    if (!hasOwnProperty.call(out, k) ||\n        typeof out[k] !== 'object' ||\n        Array.isArray(out[k]))\n      continue\n\n    // see if the parent section is also an object.\n    // if so, add it to that, and mark this one for deletion\n    const parts = dotSplit(k)\n    let p = out\n    const l = parts.pop()\n    const nl = l.replace(/\\\\\\./g, '.')\n    for (const part of parts) {\n      if (part === '__proto__')\n        continue\n      if (!hasOwnProperty.call(p, part) || typeof p[part] !== 'object')\n        p[part] = Object.create(null)\n      p = p[part]\n    }\n    if (p === out && nl === l)\n      continue\n\n    p[nl] = out[k]\n    remove.push(k)\n  }\n  for (const del of remove)\n    delete out[del]\n\n  return out\n}\n\nconst isQuoted = val =>\n  (val.charAt(0) === '\"' && val.slice(-1) === '\"') ||\n    (val.charAt(0) === \"'\" && val.slice(-1) === \"'\")\n\nconst safe = val =>\n  (typeof val !== 'string' ||\n    val.match(/[=\\r\\n]/) ||\n    val.match(/^\\[/) ||\n    (val.length > 1 &&\n     isQuoted(val)) ||\n    val !== val.trim())\n    ? JSON.stringify(val)\n    : val.replace(/;/g, '\\\\;').replace(/#/g, '\\\\#')\n\nconst unsafe = (val, doUnesc) => {\n  val = (val || '').trim()\n  if (isQuoted(val)) {\n    // remove the single quotes before calling JSON.parse\n    if (val.charAt(0) === \"'\")\n      val = val.substr(1, val.length - 2)\n\n    try {\n      val = JSON.parse(val)\n    } catch (_) {}\n  } else {\n    // walk the val to find the first not-escaped ; character\n    let esc = false\n    let unesc = ''\n    for (let i = 0, l = val.length; i < l; i++) {\n      const c = val.charAt(i)\n      if (esc) {\n        if ('\\\\;#'.indexOf(c) !== -1)\n          unesc += c\n        else\n          unesc += '\\\\' + c\n\n        esc = false\n      } else if (';#'.indexOf(c) !== -1)\n        break\n      else if (c === '\\\\')\n        esc = true\n      else\n        unesc += c\n    }\n    if (esc)\n      unesc += '\\\\'\n\n    return unesc.trim()\n  }\n  return val\n}\n\nmodule.exports = {\n  parse: decode,\n  decode,\n  stringify: encode,\n  encode,\n  safe,\n  unsafe,\n}\n","var DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","/* INI 格式捏脸转 LuaTable 格式 */\n\n// 读 Face 节下指定键的数值\nfunction getFaceProperty(ini, key, defaultValue=0) {\n    return parseInt(ini[\"Face\"][key]) || defaultValue;\n}\n\n// 读指定键的 Decal 数值组\nfunction getDecalSection(ini, sectionName) {\n    let content = {\n        \"bUse\": !!parseInt(ini[\"CustomDetail\"][sectionName + \"_valueEnable\"]),\n        \"nShowID\": parseInt(ini[\"Decal\"][sectionName]) || 0,\n        \"nColorID\": parseInt(ini[\"Decal\"][sectionName + \"_color\"]) || 0,\n        \"fValue1\": -1,\n        \"fValue2\": -1,\n        \"fValue3\": -1\n    };\n    if(content[\"bUse\"]) {\n        content[\"fValue1\"] = parseFloat(ini[\"CustomDetail\"][sectionName + \"_value1\"]) || 0;\n        content[\"fValue2\"] = parseFloat(ini[\"CustomDetail\"][sectionName + \"_value2\"]) || 0;\n        content[\"fValue3\"] = parseFloat(ini[\"CustomDetail\"][sectionName + \"_value3\"]) || 0;\n    }\n    return content;\n}\n\n// INI 格式转 LuaTable 格式\nexport function convertIni(ini) {\n    return {\n        \"nRoleType\": parseInt(ini[\"Base\"][\"RoleType\"]),\n        \"nDecorationID\": parseInt(ini[\"Base\"][\"DecorationID\"]),\n        \"tDecal\": {\n            \"BASE\": getDecalSection(ini, \"FaceBaseTexture\"),\n            \"BROW\": getDecalSection(ini, \"Brow\"),\n            \"EYE_LIGHT\": getDecalSection(ini, \"EyeLight\"),\n            \"EYE_LINE\": getDecalSection(ini, \"EyeLine\"),\n            \"EYE_SHADOW\": getDecalSection(ini, \"EyeShadow\"),\n            \"EYE_SHADOW1\": getDecalSection(ini, \"EyeShadow1\"),\n            \"EYE_SHADOW2\": getDecalSection(ini, \"EyeShadow2\"),\n            \"EYE_SHADOW3\": getDecalSection(ini, \"EyeShadow3\"),\n            \"EYE_SHADOW4\": getDecalSection(ini, \"EyeShadow4\"),\n            \"EYE_SHADOW_FLASH1\": getDecalSection(ini, \"EyeShadowFlash1\"),\n            \"EYE_SHADOW_FLASH2\": getDecalSection(ini, \"EyeShadowFlash2\"),\n            \"EYE_SHADOW_FLASH3\": getDecalSection(ini, \"EyeShadowFlash3\"),\n            \"EYE_SHADOW_FLASH4\": getDecalSection(ini, \"EyeShadowFlash4\"),\n            \"LIP_LIGHT\": getDecalSection(ini, \"LipLight\"),\n            \"LIP_FLASH\": getDecalSection(ini, \"LipFlash\"),\n            \"LIP_GLOSS\": getDecalSection(ini, \"LipGloss\"),\n            \"LIP_OVERLAP\":getDecalSection(ini, \"LipOverlap\"),\n            \"IRIS_LEFT\": getDecalSection(ini, \"IrisLeft\"),\n            \"IRIS_RIGHT\": getDecalSection(ini, \"IrisRight\"),\n            \"BLUSHER_MOUSTACHE\": getDecalSection(ini, \"BlusherMoustache\"),\n            \"DECAL\": getDecalSection(ini, \"Decal\")\n        },\n        \"tBone\": {\n            \"NOSE_SIZE\": getFaceProperty(ini, \"noseSize\"),\n            \"UP_LIP_OUT\": getFaceProperty(ini, \"upLipOut\"),\n            \"NOSEBOW_WIDTH\": getFaceProperty(ini, \"nosebowWidth\"),\n            \"MOUTH_OPEN\": getFaceProperty(ini, \"mouthOpen\"),\n            \"CHEEK_Y\": getFaceProperty(ini, \"cheekY\"),\n            \"EYE_OPEN\": getFaceProperty(ini, \"eyeOpen\"),\n            \"FACE_Y\": getFaceProperty(ini, \"faceY\"),\n            \"MOUTH_END_L\": getFaceProperty(ini, \"mouthEndL\"),\n            \"JAW_LENGTH\": getFaceProperty(ini, \"jawLength\"),\n            \"UP_LIP\": getFaceProperty(ini, \"upLip\"),\n            \"EYE_DIST\": getFaceProperty(ini, \"eyeDist\"),\n            \"NOSETOP_POS_Y\": getFaceProperty(ini, \"nosetopPosY\"),\n            \"EYE_DIRC\": getFaceProperty(ini, \"eyeDirc\"),\n            \"EYEBOW_OUT\": getFaceProperty(ini, \"eyebowOut\"),\n            \"MOUTH_OUT\": getFaceProperty(ini, \"mouthOut\"),\n            \"RIDGE_Y\": getFaceProperty(ini, \"ridgeY\"),\n            \"MOUTH_END\": getFaceProperty(ini, \"mouthEnd\"),\n            \"NOSEBOW_BEND\": getFaceProperty(ini, \"nosebowBend\"),\n            \"JAW_WIDTH\": getFaceProperty(ini, \"jawWidth\"),\n            \"LOW_LIP_POS\": getFaceProperty(ini, \"lowLipPos\"),\n            \"PUPIL_DIRC\": getFaceProperty(ini, \"pupilDirc\"),\n            \"NOSETOP_POS_Z\": getFaceProperty(ini, \"nosetopPosZ\"),\n            \"MOUTH_POS\": getFaceProperty(ini, \"mouthPos\"),\n            \"MOUTH_SIZE\": getFaceProperty(ini, \"mouthSize\"),\n            \"LOW_LIP\": getFaceProperty(ini, \"lowLip\"),\n            \"FACE_Z\": getFaceProperty(ini, \"faceZ\"),\n            \"NOSETOP_WIDTH\": getFaceProperty(ini, \"nosetopWidth\"),\n            \"UP_FACE\": getFaceProperty(ini, \"upFace\"),\n            \"UP_LID_POS\": getFaceProperty(ini, \"upLidPos\"),\n            \"EYEBOW_POS\": getFaceProperty(ini, \"eyebowPos\"),\n            \"EYEBOW_DIRC\": getFaceProperty(ini, \"eyebowDirc\"),\n            \"UP_LIP_POS\": getFaceProperty(ini, \"upLipPos\"),\n            \"LOW_LIP_OUT\": getFaceProperty(ini, \"lowLipOut\"),\n            \"MOUTH_ROT\": getFaceProperty(ini, \"mouthRot\"),\n            \"EYE_SIZE\": getFaceProperty(ini, \"eyeSize\"),\n            \"EYE_POS\": getFaceProperty(ini, \"eyePos\"),\n            \"JAW_ROT\": getFaceProperty(ini, \"jawRot\"),\n            \"JAW_END\": getFaceProperty(ini, \"jawEnd\"),\n            \"EYECROW_Y\": getFaceProperty(ini, \"eyecrowY\"),\n            \"NOSETOP_UP\": getFaceProperty(ini, \"nosetopUp\"),\n            \"MOUTH_END_R\": getFaceProperty(ini, \"mouthEndR\"),\n            \"OUT\": getFaceProperty(ini, \"out\"),\n            \"JAW_POS\": getFaceProperty(ini, \"jawPos\"),\n            \"LOW_FACE\": getFaceProperty(ini, \"lowFace\"),\n            \"CHEEK_Z\": getFaceProperty(ini, \"cheekZ\"),\n            \"PUPIL_SIZE\": getFaceProperty(ini, \"pupilSize\"),\n            \"FACE_SCALE\": getFaceProperty(ini, \"faceScale\"),\n            \"NOSE_HEIGHT\": getFaceProperty(ini, \"noseHeight\"),\n            \"LOW_LID_POS\": getFaceProperty(ini, \"lowLidPos\")\n        }\n    };\n}\n","import { parse as luaParse } from \"lua-json\";\nimport { parse as iniParse } from \"ini\";\nimport { buf as CRC32 } from \"crc-32\";\nimport { convertIni } from \"./iniConverter.js\";\n\n// 输入一个 buffer，输出解析的脸型数据 object\nexport function parseFace(rawData, ignoreHeaderError = false) {\n    const gbkDecoder = new TextDecoder(\"gbk\");\n    const sig = new Uint8Array(rawData, 2, 2);\n    /* KD header */\n    if (sig[0] == 0x44 && sig[1] == 0x4B) { // \"DK\"\n        console.log(\"数据类型为带 KD 头的 jx3dat\");\n        const hashFlag = new Uint8Array(rawData, 0, 1)[0];\n        const compressFlag = new Uint8Array(rawData, 1, 1)[0];\n        if (compressFlag != 0x4E) { // \"N\"\n            console.log(\"暂不支持压缩的数据: \" + compressFlag);\n            throw new Error(\"暂不支持压缩的数据\");\n        }\n        const hash = new DataView(rawData).getInt32(4, true);\n        const length1 = new DataView(rawData).getInt32(8, true);\n        const length2 = new DataView(rawData).getInt32(12, true);\n        const remainingLen = rawData.byteLength - 16;\n        if (length1 != length2 || remainingLen != length1 || remainingLen != length2) {\n            if(ignoreHeaderError)\n                console.log(\"数据长度有误，将继续尝试解析: L1=\" + length1 + \" L2=\" + length2 + \" Actual=\" + remainingLen + \" 将继续尝试解析\");\n            else\n                throw new Error(\"数据长度有误: L1=\" + length1 + \" L2=\" + length2 + \" Actual=\" + remainingLen);\n        }\n        let payload = new Uint8Array(rawData, 16, remainingLen);\n        if (hashFlag != 0x4E) { // \"N\", has hashing\n            let payloadHash = null;\n            if (hashFlag == 0x43) {  // \"C\"\n                payloadHash = CRC32(payload);\n            }\n            // Compare hash\n            if (hash != payloadHash) {\n                if(ignoreHeaderError)\n                    console.log(\"数据校验有误: \" + hash + \" Actual=\" + payloadHash + \" 将继续尝试解析\");\n                else\n                    throw new Error(\"数据校验有误: \" + hash + \" Actual=\" + payloadHash);\n            }\n        }\n        payload = gbkDecoder.decode(payload);\n        return luaParse(\"return\" + payload.slice(payload.indexOf(\"{\")));\n    }\n    /* without header */\n    else {\n        console.log(\"未检测到 KD 头\");\n        const payload = gbkDecoder.decode(rawData);\n        const luaData = luaParse(\"return\" + payload.slice(payload.indexOf(\"{\")));\n        if (luaData.length != 0) {\n            console.log(\"数据类型为不带 KD 头的 jx3dat\");\n            return luaData;\n        }\n        else {\n            console.log(\"数据类型为 INI\");\n            return convertIni(iniParse(payload));\n        }\n    }\n}\n\n// 输入一个 buffer，加上合法的 KD 头\nexport function dumpFace(payload) {\n    const gbkEncoder = new TextEncoder(\"gbk\");\n    let payloadBuf = gbkEncoder.encode(payload);\n    let length = payloadBuf.length;\n    let crc32 = CRC32(payloadBuf) >>> 0; // Convert to unsigned\n    let output = Buffer.alloc(length + 16);\n    output.write(\"CNDK\", 0);\n    output.writeUInt32LE(crc32, 4);\n    output.writeUInt32LE(length, 8);\n    output.writeUInt32LE(length, 12);\n    output.write(payload, 16);\n    return output;\n}\n","const { isNull, isBoolean, isNumber, isString, isArray, isObject, isEmpty, fromPairs, keys, map, repeat } = require('lodash')\nconst { parse: parseLua } = require('luaparse')\n\nconst formatLuaString = (string, singleQuote) => (singleQuote ? `'${string.replace(/'/g, \"\\\\'\")}'` : `\"${string.replace(/\"/g, '\\\\\"')}\"`)\n\nconst valueKeys = { false: 'false', true: 'true', null: 'nil' }\n\nconst formatLuaKey = (string, singleQuote) =>\n  valueKeys[string] ? `[${valueKeys[string]}]` : string.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/) ? string : `[${formatLuaString(string, singleQuote)}]`\n\nconst format = (value, options = { eol: '\\n', singleQuote: true, spaces: 2 }) => {\n  options = options || {}\n  const eol = (options.eol = isString(options.eol) ? options.eol : '\\n')\n  options.singleQuote = isBoolean(options.singleQuote) ? options.singleQuote : true\n  options.spaces = isNull(options.spaces) || isNumber(options.spaces) || isString(options.spaces) ? options.spaces : 2\n\n  const rec = (value, i = 0) => {\n    if (isNull(value)) {\n      return 'nil'\n    }\n    if (isBoolean(value) || isNumber(value)) {\n      return value.toString()\n    }\n    if (isString(value)) {\n      return formatLuaString(value, options.singleQuote)\n    }\n    if (isArray(value)) {\n      if (isEmpty(value)) {\n        return '{}'\n      }\n      if (options.spaces) {\n        const spaces = isNumber(options.spaces) ? repeat(' ', options.spaces * (i + 1)) : repeat(options.spaces, i + 1)\n        const spacesEnd = isNumber(options.spaces) ? repeat(' ', options.spaces * i) : repeat(options.spaces, i)\n        return `{${eol}${value.map(e => `${spaces}${rec(e, i + 1)},`).join(eol)}${eol}${spacesEnd}}`\n      }\n      return `{${value.map(e => `${rec(e, i + 1)},`).join('')}}`\n    }\n    if (isObject(value)) {\n      if (isEmpty(value)) {\n        return '{}'\n      }\n      if (options.spaces) {\n        const spaces = isNumber(options.spaces) ? repeat(' ', options.spaces * (i + 1)) : repeat(options.spaces, i + 1)\n        const spacesEnd = isNumber(options.spaces) ? repeat(' ', options.spaces * i) : repeat(options.spaces, i)\n        return `{${eol}${keys(value)\n          .map(key => `${spaces}${formatLuaKey(key, options.singleQuote)} = ${rec(value[key], i + 1)},`)\n          .join(eol)}${eol}${spacesEnd}}`\n      }\n      return `{${keys(value)\n        .map(key => `${formatLuaKey(key, options.singleQuote)}=${rec(value[key], i + 1)},`)\n        .join('')}}`\n    }\n    throw new Error(`can't format ${typeof value}`)\n  }\n\n  return `return${options.spaces ? ' ' : ''}${rec(value)}`\n}\n\nconst luaAstToJson = ast => {\n  // literals\n  if (['NilLiteral', 'BooleanLiteral', 'NumericLiteral', 'StringLiteral'].includes(ast.type)) {\n    return ast.value\n  }\n  // basic expressions\n  if (ast.type === 'UnaryExpression' && ast.operator === '-') {\n    return -luaAstToJson(ast.argument)\n  }\n  if (ast.type === 'Identifier') {\n    return ast.name\n  }\n  // tables\n  if (['TableKey', 'TableKeyString'].includes(ast.type)) {\n    return { __internal_table_key: true, key: luaAstToJson(ast.key), value: luaAstToJson(ast.value) }\n  }\n  if (ast.type === 'TableValue') {\n    return luaAstToJson(ast.value)\n  }\n  if (ast.type === 'TableConstructorExpression') {\n    if (ast.fields[0] && ast.fields[0].key) {\n      const object = fromPairs(\n        map(ast.fields, field => {\n          const { key, value } = luaAstToJson(field)\n          return [key, value]\n        }),\n      )\n      return isEmpty(object) ? [] : object\n    }\n    return map(ast.fields, field => {\n      const value = luaAstToJson(field)\n      return value.__internal_table_key ? [value.key, value.value] : value\n    })\n  }\n  // top-level statements, only looking at the first statement, either return or local\n  // todo: filter until return or local?\n  if (ast.type === 'LocalStatement') {\n    const values = ast.init.map(luaAstToJson)\n    return values.length === 1 ? values[0] : values\n  }\n  if (ast.type === 'ReturnStatement') {\n    const values = ast.arguments.map(luaAstToJson)\n    return values.length === 1 ? values[0] : values\n  }\n  if (ast.type === 'Chunk') {\n    return luaAstToJson(ast.body[0])\n  }\n  throw new Error(`can't parse ${ast.type}`)\n}\n\nconst parse = value => luaAstToJson(parseLua(value, { comments: false }))\n\nmodule.exports = {\n  format,\n  parse,\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.ready)?_c('div',{staticClass:\"c-facedat\"},[_c('el-tabs',{staticClass:\"c-facedat-preivew\",attrs:{\"type\":_vm.tab_type},model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},[_c('el-tab-pane',{attrs:{\"label\":\"眼部轮廓\",\"name\":\"eye\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['eye']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"嘴部轮廓\",\"name\":\"mouth\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['mouth']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"鼻子轮廓\",\"name\":\"nose\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['nose']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"脸部轮廓\",\"name\":\"face\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['face']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"贴花\",\"name\":\"decal\"}},[_c('div',{staticClass:\"m-facedat-decals\",attrs:{\"id\":\"decals\"}},[_vm._l((_vm.group['decal']),function(key,i){return _c('div',{key:key + i,staticClass:\"c-facedat-group\"},[(_vm.cleandata['tDecal'][key])?[_c('ul',{staticClass:\"u-decals\"},[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.clean || _vm.checkdecal_prop(key)),expression:\"!clean || checkdecal_prop(key)\"}]},[_c('div',{staticClass:\"u-title\"},[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('img',{staticClass:\"u-pic\",attrs:{\"src\":_vm.getDecalIcon(key, _vm.cleandata['tDecal'][key]['nShowID'])}}),_c('span',{staticClass:\"u-dname\"},[_vm._v(_vm._s(_vm.getDecalName(key, _vm.cleandata[\"tDecal\"][key][\"nShowID\"])))]),_c('span',{staticClass:\"u-dcolor\"},[_vm._v(\"(颜色:\"+_vm._s(_vm.cleandata[\"tDecal\"][key][\"nColorID\"])+\")\")]),(_vm.showDecalFree(key, _vm.cleandata['tDecal'][key]['nShowID']))?_c('span',{staticClass:\"u-free\"},[_c('i',{staticClass:\"el-icon-success\"}),_vm._v(\" 新建角色可用 \")]):_vm._e(),(_vm.showDecalPrice(key, _vm.cleandata['tDecal'][key]['nShowID']))?_c('span',{staticClass:\"u-price\"},[_c('i',{staticClass:\"el-icon-coin\"}),_vm._v(\" \"+_vm._s(_vm.showDecalPrice(key, _vm.cleandata[\"tDecal\"][key][\"nShowID\"]))+\" 通宝 \")]):_vm._e()])])]:_vm._e()],2)}),_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-decals\"},[_c('div',{staticClass:\"u-title\"},[_vm._v(\"装饰物\")]),_c('img',{staticClass:\"u-pic\",attrs:{\"src\":_vm.getDecorationIcon(_vm.cleandata['nDecorationID'])}}),_c('span',{staticClass:\"u-dname\"},[_vm._v(_vm._s(_vm.getDecorationName(_vm.cleandata['nDecorationID'])))]),(_vm.showDecorationPrice(_vm.cleandata['nDecorationID']))?_c('span',{staticClass:\"u-price\"},[_c('i',{staticClass:\"el-icon-coin\"}),_vm._v(\" \"+_vm._s(_vm.showDecorationPrice(_vm.cleandata['nDecorationID']))+\" 通宝 \")]):_vm._e()])]),_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-decals\"},[_c('div',{staticClass:\"u-title\"},[_vm._v(\"总计\")]),_c('span',{staticClass:\"u-total u-price\"},[_c('i',{staticClass:\"el-icon-coin\"}),_vm._v(\" \"),_c('b',[_vm._v(_vm._s(_vm.total_coin))]),_vm._v(\" 通宝\")])])])],2)])],1),_c('div',{staticClass:\"c-facedat-setting\"},[_c('el-form',{ref:\"form\",staticClass:\"c-facedat-setting-form\",attrs:{\"label-width\":\"80px\",\"label-position\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"高级\"}},[_c('el-checkbox',{model:{value:(_vm.clean),callback:function ($$v) {_vm.clean=$$v},expression:\"clean\"}},[_vm._v(\"清洗模式\")]),_c('span',{staticClass:\"u-warning\"},[_c('i',{staticClass:\"el-icon-warning-outline\"}),_vm._v(\" 仅保留创建新角色时可用项，如提示非法数据也请尝试开启该模式 \")])],1)],1)],1),_c('div',{staticClass:\"c-facedata-btns\"},[_c('el-button',{staticClass:\"u-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-receiving\"},on:{\"click\":function($event){return _vm.buildData('std')}}},[_vm._v(\"导出正式服\")]),_c('el-button',{staticClass:\"u-btn\",attrs:{\"type\":\"warning\",\"icon\":\"el-icon-receiving\"},on:{\"click\":function($event){return _vm.buildData('origin')}}},[_vm._v(\"导出怀旧服\")])],1)],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// 将早期数据统一成当前格式\nfunction fixOldData(olddata) {\n    let newdata = {\n        tBone: {},\n        tDecal: {},\n        nRoleType: ~~olddata.misc[0].value,\n    };\n\n    olddata.decal.forEach((decal) => {\n        newdata.tDecal[decal.name] = {\n            nShowID : ~~decal.value\n        }\n    })\n\n    let arr = ['eye','mouth','nose','face']\n    arr.forEach((key) => {\n        olddata[key].forEach((item) => {\n            newdata.tBone[item.name] = ~~item.value\n        })\n    })\n\n    return newdata\n}\n\nexport default fixOldData;\n","<template>\n    <div class=\"c-facedat\" v-if=\"ready\">\n        <el-tabs class=\"c-facedat-preivew\" v-model=\"active\" :type=\"tab_type\">\n            <el-tab-pane label=\"眼部轮廓\" name=\"eye\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['eye']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"嘴部轮廓\" name=\"mouth\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['mouth']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"鼻子轮廓\" name=\"nose\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['nose']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"脸部轮廓\" name=\"face\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['face']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"贴花\" name=\"decal\">\n                <div class=\"m-facedat-decals\" id=\"decals\">\n                    <div class=\"c-facedat-group\" v-for=\"(key, i) in group['decal']\" :key=\"key + i\">\n                        <template v-if=\"cleandata['tDecal'][key]\">\n                            <ul class=\"u-decals\">\n                                <li v-show=\"!clean || checkdecal_prop(key)\">\n                                    <div class=\"u-title\">{{ dict[key][\"desc\"] }}</div>\n                                    <img class=\"u-pic\" :src=\"getDecalIcon(key, cleandata['tDecal'][key]['nShowID'])\" />\n                                    <span class=\"u-dname\">{{ getDecalName(key, cleandata[\"tDecal\"][key][\"nShowID\"]) }}</span>\n                                    <span class=\"u-dcolor\">(颜色:{{ cleandata[\"tDecal\"][key][\"nColorID\"] }})</span>\n                                    <span class=\"u-free\" v-if=\"showDecalFree(key, cleandata['tDecal'][key]['nShowID'])\"> <i class=\"el-icon-success\"></i> 新建角色可用 </span>\n                                    <span class=\"u-price\" v-if=\"showDecalPrice(key, cleandata['tDecal'][key]['nShowID'])\">\n                                        <i class=\"el-icon-coin\"></i>\n                                        {{ showDecalPrice(key, cleandata[\"tDecal\"][key][\"nShowID\"]) }} 通宝\n                                    </span>\n                                </li>\n                            </ul>\n                        </template>\n                    </div>\n                    <div class=\"c-facedat-group\">\n                        <ul class=\"u-decals\">\n                            <div class=\"u-title\">装饰物</div>\n                                    <img class=\"u-pic\" :src=\"getDecorationIcon(cleandata['nDecorationID'])\" />\n                                    <span class=\"u-dname\">{{ getDecorationName(cleandata['nDecorationID']) }}</span>\n                                    <span class=\"u-price\" v-if=\"showDecorationPrice(cleandata['nDecorationID'])\">\n                                        <i class=\"el-icon-coin\"></i>\n                                        {{ showDecorationPrice(cleandata['nDecorationID']) }} 通宝\n                                    </span>\n                        </ul>\n                    </div>\n                    <div class=\"c-facedat-group\">\n                        <ul class=\"u-decals\">\n                            <div class=\"u-title\">总计</div>\n                            <span class=\"u-total u-price\"><i class=\"el-icon-coin\"></i> <b>{{ total_coin }}</b> 通宝</span>\n                        </ul>\n                    </div>\n                </div>\n            </el-tab-pane>\n        </el-tabs>\n        <div class=\"c-facedat-setting\">\n            <el-form class=\"c-facedat-setting-form\" ref=\"form\" label-width=\"80px\" label-position=\"left\">\n                <el-form-item label=\"高级\">\n                    <el-checkbox v-model=\"clean\">清洗模式</el-checkbox>\n                    <span class=\"u-warning\"> <i class=\"el-icon-warning-outline\"></i> 仅保留创建新角色时可用项，如提示非法数据也请尝试开启该模式 </span>\n                </el-form-item>\n            </el-form>\n        </div>\n        <div class=\"c-facedata-btns\">\n            <el-button class=\"u-btn\" type=\"primary\" @click=\"buildData('std')\" icon=\"el-icon-receiving\">导出正式服</el-button>\n            <el-button class=\"u-btn\" type=\"warning\" @click=\"buildData('origin')\" icon=\"el-icon-receiving\">导出怀旧服</el-button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport _ from \"lodash\";\nimport axios from \"axios\";\nimport {\n    __ossMirror,\n    __iconPath,\n    __ossRoot,\n} from \"@jx3box/jx3box-common/data/jx3box.json\";\nimport fixOldData from \"./fixOldData.js\";\n\nimport group from \"../assets/data/group.json\";\nimport dict from \"../assets/data/dict.json\";\nimport decal_group from \"../assets/data/decal_group.json\";\nimport decal_origin from \"../assets/data/decal_origin.json\";\nimport decal_std from \"../assets/data/decal_std.json\";\nimport decal_prop from \"../assets/data/decal_prop.json\";\nimport bone_range from \"../assets/data/bone_range.json\";\nimport bone_default from \"../assets/data/bone_default.json\";\nimport decal_default from \"../assets/data/decal_default.json\";\nimport versions from \"../assets/data/version.json\";\n\nimport { format } from \"lua-json\";\nimport { saveAs } from \"file-saver\";\nimport { dumpFace } from \"./faceParser.js\";\n\nexport default {\n    name: \"Facedat\",\n    props: [\"data\", \"lock\",\"tab_type\"],\n    data: function() {\n        return {\n            active: \"eye\",\n\n            // 数据\n            body_type: \"\",\n            facedata: \"\",\n\n            // 骨骼\n            group,\n            dict,\n            bone_range,\n\n            // 妆容\n            decal_group,\n\n            // 导出设置\n            clean: false,\n            version: \"std\",\n\n            decalMap: '',\n            decorationMap: '',\n\n            // test\n            // data : JSON.stringify(olddata)\n        };\n    },\n    computed: {\n        ready: function() {\n            return !!(this.facedata && this.decalMap && this.decorationMap);\n        },\n        cleandata: function() {\n            if (this.clean && this.facedata) {\n                let _cleandata = _.cloneDeep(this.facedata);\n                _cleandata.nDecorationID = 0;\n                for (let key in _cleandata.tDecal) {\n                    let CanUseInCreate = this.showDecalFree(key, _cleandata?.tDecal[key][\"nShowID\"]);\n                    if (!CanUseInCreate) {\n                        _cleandata.tDecal[key][\"nShowID\"] = decal_default[key][\"nShowID\"];\n                    }\n                }\n                return _cleandata;\n            } else {\n                return this.facedata;\n            }\n        },\n        // 自动检测数据版本\n        client: function() {\n            let _nMajorVersion = this.facedata?.nMajorVersion;\n            if (_nMajorVersion == 1 || !_nMajorVersion) {\n                return \"std\";\n            } else {\n                return \"origin\";\n            }\n        },\n        /* decalmap: function() {\n            if (this.client == \"std\" || !this.client) {\n                return decal_std;\n            } else {\n                return decal_origin;\n            }\n        }, */\n        output_std: function() {\n            // 1.默认需要修订版本号与客户端版本\n            let data = this.amendVersion(\"std\");\n            // 2.补全骨骼缺失数据\n            data.tBone = this.amendBone(data.tBone);\n            // 3.补全完整数据结构\n            // 如果没有开启清洗也需要对数据结构进行补充，以防上传的是古老的数据（缺失部分后加的属性）\n            // 同时部分古老数据即使存在该属性，但部分2级属性也是缺失的\n            // data.tDecal = this.amendDecal(data.tDecal)\n\n            // 废弃：如果开启了清洗直接回档整体默认贴花部分\n            // 正式服数据包含全部属性（shadow1~4），且有额外属性值（fValue1~3）\n            // 直接取一个demo数据，以防上传的是怀旧服数据缺失部分属性\n            if (this.clean) {\n                data.tDecal = _.cloneDeep(decal_default);\n            }\n\n            // 废弃：如果是清洗模式，还需要仅保留新建角色时存在的属性（移除shadow1~4等）\n            // if (this.clean){\n            //     for(let key in data.tDecal){\n            //         if (!decal_group.origin.includes(key)) {\n            //             delete data.tDecal[key];\n            //         }\n            //     }\n            // }\n            return data;\n        },\n        output_origin: function() {\n            // 1.默认需要修订版本号与客户端版本\n            let data = this.amendVersion(\"origin\");\n            // 2.补全骨骼缺失数据\n            data.tBone = this.amendBone(data.tBone);\n\n            // 3.贴花数据全部复位（怀旧服商城暂未上线）\n            for (let key in data.tDecal) {\n                if (decal_group.origin.includes(key)) {\n                    // 3.2重置color和show_id\n                    data.tDecal[key][\"nColorID\"] = decal_default[key][\"nColorID\"];\n                    data.tDecal[key][\"nShowID\"] = decal_default[key][\"nShowID\"];\n                    // 3.3移除正式服特有属性（fValue1~3）\n                    for (let prop in data.tDecal[key]) {\n                        if (!decal_prop.origin.includes(prop)) {\n                            delete data.tDecal[key][prop];\n                        }\n                    }\n                    // 3.1首先移除正式服特有的部分属性（shadow1~4）\n                } else {\n                    delete data.tDecal[key];\n                }\n            }\n            return data;\n        },\n        output: function() {\n            let table = {};\n            let data = this.version == \"origin\" ? this.output_origin : this.output_std;\n            try {\n                table = \"return \" + format(data, { eol: \"\", spaces: 0 }).slice(6);\n            } catch (e) {\n                console.log(\"导出转换失败\");\n                console.log(e);\n            }\n            return table;\n        },\n        total_coin: function() {\n            let sum = 0;\n            for (const [_, key] of Object.entries(this.group[\"decal\"])) \n                if (this.cleandata[\"tDecal\"][key]) \n                    sum += this.showDecalPrice(key, this.cleandata[\"tDecal\"][key][\"nShowID\"]);\n            if(this.cleandata[\"nDecorationID\"])\n                sum += this.showDecorationPrice(this.cleandata[\"nDecorationID\"]);\n            return sum;\n        },\n    },\n    watch: {\n        data: {\n            deep: true,\n            handler: function(newdata) {\n                this.render();\n            },\n        },\n        cleandata: {\n            deep: true,\n            handler: function() {\n                this.$forceUpdate();\n            },\n        },\n        client: {\n            immediate: true,\n            handler: function(val) {\n                this.fetchDecal();\n                this.fetchDecoration();\n            },\n        },\n    },\n    methods: {\n        // 数据构建\n        render: function() {\n            // 是否为空\n            if (!this.data) {\n                return \"\";\n            }\n\n            // json 转为 object\n            try {\n                let facedata = JSON.parse(this.data);\n                // 旧版数据\n                if (facedata.status) {\n                    this.body_type = facedata.misc[0][\"value\"];\n                    this.facedata = fixOldData(facedata);\n                } else {\n                    this.body_type = facedata.nRoleType;\n                    this.facedata = facedata;\n                }\n            } catch (e) {\n                this.facedata = \"\";\n                console.log(e);\n                this.$notify.error({\n                    title: \"错误\",\n                    message: \"脸型数据无法解析\",\n                });\n            }\n        },\n\n        // 贴花\n        getDecalName: function(key, val) {\n            return _.get(this.decalMap[this.body_type][dict[key][\"type\"]][val], \"name\") || \"无\";\n        },\n        getDecalIcon: function(key, val) {\n            let iconid = _.get(this.decalMap[this.body_type][dict[key][\"type\"]][val], \"iconid\");\n            if (iconid) {\n                return __iconPath + \"icon/\" + iconid + \".png\";\n            } else {\n                return __iconPath + \"icon/\" + \"undefined\" + \".png\";\n            }\n        },\n        showDecalFree: function(key, val) {\n            return ~~this.decalMap?.[this.body_type]?.[dict[key]?.type]?.[val]?.CanUseInCreate;\n        },\n        showDecalPrice: function(key, val) {\n            return ~~this.decalMap?.[this.body_type]?.[dict[key]?.type]?.[val]?.CoinPrice;\n        },\n        checkdecal_prop: function(key) {\n            return decal_group.origin.includes(key);\n        },\n\n        // 装饰物\n        getDecorationName: function(id) {\n            return _.get(this.decorationMap[this.body_type][id], \"Name\") || \"无\";\n        },\n        getDecorationIcon: function(id) {\n            let iconid = _.get(this.decorationMap[this.body_type][id], \"IconID\");\n            if (iconid) {\n                return __iconPath + \"icon/\" + iconid + \".png\";\n            } else {\n                return __iconPath + \"icon/\" + \"undefined\" + \".png\";\n            }\n        },\n        showDecorationPrice: function(id) {\n            return ~~(_.get(this.decorationMap[this.body_type][id], \"CoinPrice\") || \"0\");\n        },\n\n        // 按钮\n        buildData: function(v) {\n            this.version = v;\n            let outputWithHeader = dumpFace(this.output);\n            let blob = new Blob([outputWithHeader], {\n                type: \"application/dat;charset=utf-8\",\n            });\n            saveAs(blob, Date.now() + \".dat\");\n        },\n\n        // 数据修正\n        amendVersion: function(v) {\n            let data = _.cloneDeep(this.cleandata);\n            data.nDecorationID = v === \"origin\" ? 0 : data.nDecorationID;\n            data.nMajorVersion = versions[v][\"nMajorVersion\"];\n            data.nVersion = versions[v][\"nVersion\"];\n            return data;\n        },\n        amendBone: function(data) {\n            let _bone = _.cloneDeep(bone_default);\n            let _fixbone = Object.assign(_bone, data);\n            return _fixbone;\n        },\n        amendDecal: function(data) {\n            let _decal = _.cloneDeep(decal_default);\n            for (let key in decal_default) {\n                // 不存在补全属性\n                if (!data[key]) {\n                    data[key] = _.cloneDeep(decal_default[key]);\n                    // 存在则补全子属性\n                } else {\n                    data[key] = Object.assign(decal_default[key], data[key]);\n                }\n            }\n            return data;\n        },\n        fetchWithLocalStorage: function(url, key, onFetch) {\n            const localData = JSON.parse(sessionStorage.getItem(key));\n            if (localData) {\n                if(onFetch)\n                    onFetch(localData);\n                return;\n            } else {\n                axios.get(url).then((res) => {\n                    sessionStorage.setItem(key, JSON.stringify(res.data));\n                    if(onFetch)\n                        onFetch(res.data);\n                });\n            }\n        },\n        fetchDecal: function (client = 'std') {\n            try {\n                const url = client === 'std' ? `${__ossMirror}data/face/decal_std.json` : `${__ossMirror}data/face/decal_origin.json`;\n                const key = `decal_${client}`;\n                this.fetchWithLocalStorage(url, key, (data) => {\n                    this.decalMap = data;\n                });\n            } catch (e) {\n                this.decalMap = '';\n                console.log(e);\n            }\n        },\n        fetchDecoration: function(client = \"std\") {\n            try {\n                const url = client === 'std' ? `${__ossMirror}data/face/decoration_std.json` : `${__ossMirror}data/face/decoration_origin.json`;\n                const key = `decoration_${client}`;\n                this.fetchWithLocalStorage(url, key, (data) => {\n                    this.decorationMap = data;\n                });\n            } catch (e) {\n                this.decorationMap = '';\n                console.log(e);\n            }\n        },\n    },\n    mounted: function() {\n        this.render();\n    },\n};\n</script>\n\n<style lang=\"less\">\n@import \"../assets/css/facedat.less\";\n</style>\n\n\n","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Facedat.vue?vue&type=template&id=40ba69ee&\"\nimport script from \"./Facedat.vue?vue&type=script&lang=js&\"\nexport * from \"./Facedat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Facedat.vue?vue&type=style&index=0&id=40ba69ee&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* global exports:true, module:true, require:true, define:true, global:true */\n\n(function (root, name, factory) {\n  /* jshint eqeqeq:false */\n  'use strict';\n\n  // Used to determine if values are of the language type `Object`\n  var objectTypes = {\n        'function': true\n      , 'object': true\n    }\n    // Detect free variable `exports`\n    , freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports\n    // Detect free variable `module`\n    , freeModule = objectTypes[typeof module] && module && !module.nodeType && module\n    // Detect free variable `global`, from Node.js or Browserified code, and\n    // use it as `window`\n    , freeGlobal = freeExports && freeModule && typeof global == 'object' && global\n    // Detect the popular CommonJS extension `module.exports`\n    , moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Some AMD build optimizers, like r.js, check for specific condition\n  // patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // defined as an anonymous module.\n    define(['exports'], factory);\n    // In case the source has been processed and wrapped in a define module use\n    // the supplied `exports` object.\n    if (freeExports && moduleExports) factory(freeModule.exports);\n  }\n  // check for `exports` after `define` in case a build optimizer adds an\n  // `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS v0.8.0+\n    if (moduleExports) factory(freeModule.exports);\n    // in Narwhal or RingoJS v0.7.0-\n    else factory(freeExports);\n  }\n  // in a browser or Rhino\n  else {\n    factory((root[name] = {}));\n  }\n}(this, 'luaparse', function (exports) {\n  'use strict';\n\n  exports.version = '0.2.1';\n\n  var input, options, length;\n\n  // Options can be set either globally on the parser object through\n  // defaultOptions, or during the parse call.\n  var defaultOptions = exports.defaultOptions = {\n    // Explicitly tell the parser when the input ends.\n      wait: false\n    // Store comments as an array in the chunk object.\n    , comments: true\n    // Track identifier scopes by adding an isLocal attribute to each\n    // identifier-node.\n    , scope: false\n    // Store location information on each syntax node as\n    // `loc: { start: { line, column }, end: { line, column } }`.\n    , locations: false\n    // Store the start and end character locations on each syntax node as\n    // `range: [start, end]`.\n    , ranges: false\n    // A callback which will be invoked when a syntax node has been completed.\n    // The node which has been created will be passed as the only parameter.\n    , onCreateNode: null\n    // A callback which will be invoked when a new scope is created.\n    , onCreateScope: null\n    // A callback which will be invoked when the current scope is destroyed.\n    , onDestroyScope: null\n  };\n\n  // The available tokens expressed as enum flags so they can be checked with\n  // bitwise operations.\n\n  var EOF = 1, StringLiteral = 2, Keyword = 4, Identifier = 8\n    , NumericLiteral = 16, Punctuator = 32, BooleanLiteral = 64\n    , NilLiteral = 128, VarargLiteral = 256;\n\n  exports.tokenTypes = { EOF: EOF, StringLiteral: StringLiteral\n    , Keyword: Keyword, Identifier: Identifier, NumericLiteral: NumericLiteral\n    , Punctuator: Punctuator, BooleanLiteral: BooleanLiteral\n    , NilLiteral: NilLiteral, VarargLiteral: VarargLiteral\n  };\n\n  // As this parser is a bit different from luas own, the error messages\n  // will be different in some situations.\n\n  var errors = exports.errors = {\n      unexpected: 'unexpected %1 \\'%2\\' near \\'%3\\''\n    , expected: '\\'%1\\' expected near \\'%2\\''\n    , expectedToken: '%1 expected near \\'%2\\''\n    , unfinishedString: 'unfinished string near \\'%1\\''\n    , malformedNumber: 'malformed number near \\'%1\\''\n    , invalidVar: 'invalid left-hand side of assignment near \\'%1\\''\n  };\n\n  // ### Abstract Syntax Tree\n  //\n  // The default AST structure is inspired by the Mozilla Parser API but can\n  // easily be customized by overriding these functions.\n\n  var ast = exports.ast = {\n      labelStatement: function(label) {\n      return {\n          type: 'LabelStatement'\n        , label: label\n      };\n    }\n\n    , breakStatement: function() {\n      return {\n          type: 'BreakStatement'\n      };\n    }\n\n    , gotoStatement: function(label) {\n      return {\n          type: 'GotoStatement'\n        , label: label\n      };\n    }\n\n    , returnStatement: function(args) {\n      return {\n          type: 'ReturnStatement'\n        , 'arguments': args\n      };\n    }\n\n    , ifStatement: function(clauses) {\n      return {\n          type: 'IfStatement'\n        , clauses: clauses\n      };\n    }\n    , ifClause: function(condition, body) {\n      return {\n          type: 'IfClause'\n        , condition: condition\n        , body: body\n      };\n    }\n    , elseifClause: function(condition, body) {\n      return {\n          type: 'ElseifClause'\n        , condition: condition\n        , body: body\n      };\n    }\n    , elseClause: function(body) {\n      return {\n          type: 'ElseClause'\n        , body: body\n      };\n    }\n\n    , whileStatement: function(condition, body) {\n      return {\n          type: 'WhileStatement'\n        , condition: condition\n        , body: body\n      };\n    }\n\n    , doStatement: function(body) {\n      return {\n          type: 'DoStatement'\n        , body: body\n      };\n    }\n\n    , repeatStatement: function(condition, body) {\n      return {\n          type: 'RepeatStatement'\n        , condition: condition\n        , body: body\n      };\n    }\n\n    , localStatement: function(variables, init) {\n      return {\n          type: 'LocalStatement'\n        , variables: variables\n        , init: init\n      };\n    }\n\n    , assignmentStatement: function(variables, init) {\n      return {\n          type: 'AssignmentStatement'\n        , variables: variables\n        , init: init\n      };\n    }\n\n    , callStatement: function(expression) {\n      return {\n          type: 'CallStatement'\n        , expression: expression\n      };\n    }\n\n    , functionStatement: function(identifier, parameters, isLocal, body) {\n      return {\n          type: 'FunctionDeclaration'\n        , identifier: identifier\n        , isLocal: isLocal\n        , parameters: parameters\n        , body: body\n      };\n    }\n\n    , forNumericStatement: function(variable, start, end, step, body) {\n      return {\n          type: 'ForNumericStatement'\n        , variable: variable\n        , start: start\n        , end: end\n        , step: step\n        , body: body\n      };\n    }\n\n    , forGenericStatement: function(variables, iterators, body) {\n      return {\n          type: 'ForGenericStatement'\n        , variables: variables\n        , iterators: iterators\n        , body: body\n      };\n    }\n\n    , chunk: function(body) {\n      return {\n          type: 'Chunk'\n        , body: body\n      };\n    }\n\n    , identifier: function(name) {\n      return {\n          type: 'Identifier'\n        , name: name\n      };\n    }\n\n    , literal: function(type, value, raw) {\n      type = (type === StringLiteral) ? 'StringLiteral'\n        : (type === NumericLiteral) ? 'NumericLiteral'\n        : (type === BooleanLiteral) ? 'BooleanLiteral'\n        : (type === NilLiteral) ? 'NilLiteral'\n        : 'VarargLiteral';\n\n      return {\n          type: type\n        , value: value\n        , raw: raw\n      };\n    }\n\n    , tableKey: function(key, value) {\n      return {\n          type: 'TableKey'\n        , key: key\n        , value: value\n      };\n    }\n    , tableKeyString: function(key, value) {\n      return {\n          type: 'TableKeyString'\n        , key: key\n        , value: value\n      };\n    }\n    , tableValue: function(value) {\n      return {\n          type: 'TableValue'\n        , value: value\n      };\n    }\n\n\n    , tableConstructorExpression: function(fields) {\n      return {\n          type: 'TableConstructorExpression'\n        , fields: fields\n      };\n    }\n    , binaryExpression: function(operator, left, right) {\n      var type = ('and' === operator || 'or' === operator) ?\n        'LogicalExpression' :\n        'BinaryExpression';\n\n      return {\n          type: type\n        , operator: operator\n        , left: left\n        , right: right\n      };\n    }\n    , unaryExpression: function(operator, argument) {\n      return {\n          type: 'UnaryExpression'\n        , operator: operator\n        , argument: argument\n      };\n    }\n    , memberExpression: function(base, indexer, identifier) {\n      return {\n          type: 'MemberExpression'\n        , indexer: indexer\n        , identifier: identifier\n        , base: base\n      };\n    }\n\n    , indexExpression: function(base, index) {\n      return {\n          type: 'IndexExpression'\n        , base: base\n        , index: index\n      };\n    }\n\n    , callExpression: function(base, args) {\n      return {\n          type: 'CallExpression'\n        , base: base\n        , 'arguments': args\n      };\n    }\n\n    , tableCallExpression: function(base, args) {\n      return {\n          type: 'TableCallExpression'\n        , base: base\n        , 'arguments': args\n      };\n    }\n\n    , stringCallExpression: function(base, argument) {\n      return {\n          type: 'StringCallExpression'\n        , base: base\n        , argument: argument\n      };\n    }\n\n    , comment: function(value, raw) {\n      return {\n          type: 'Comment'\n        , value: value\n        , raw: raw\n      };\n    }\n  };\n\n  // Wrap up the node object.\n\n  function finishNode(node) {\n    // Pop a `Marker` off the location-array and attach its location data.\n    if (trackLocations) {\n      var location = locations.pop();\n      location.complete();\n      if (options.locations) node.loc = location.loc;\n      if (options.ranges) node.range = location.range;\n    }\n    if (options.onCreateNode) options.onCreateNode(node);\n    return node;\n  }\n\n\n  // Helpers\n  // -------\n\n  var slice = Array.prototype.slice\n    , toString = Object.prototype.toString\n    , indexOf = function indexOf(array, element) {\n      for (var i = 0, length = array.length; i < length; i++) {\n        if (array[i] === element) return i;\n      }\n      return -1;\n    };\n\n  // Iterate through an array of objects and return the index of an object\n  // with a matching property.\n\n  function indexOfObject(array, property, element) {\n    for (var i = 0, length = array.length; i < length; i++) {\n      if (array[i][property] === element) return i;\n    }\n    return -1;\n  }\n\n  // A sprintf implementation using %index (beginning at 1) to input\n  // arguments in the format string.\n  //\n  // Example:\n  //\n  //     // Unexpected function in token\n  //     sprintf('Unexpected %2 in %1.', 'token', 'function');\n\n  function sprintf(format) {\n    var args = slice.call(arguments, 1);\n    format = format.replace(/%(\\d)/g, function (match, index) {\n      return '' + args[index - 1] || '';\n    });\n    return format;\n  }\n\n  // Returns a new object with the properties from all objectes passed as\n  // arguments. Last argument takes precedence.\n  //\n  // Example:\n  //\n  //     this.options = extend(options, { output: false });\n\n  function extend() {\n    var args = slice.call(arguments)\n      , dest = {}\n      , src, prop;\n\n    for (var i = 0, length = args.length; i < length; i++) {\n      src = args[i];\n      for (prop in src) if (src.hasOwnProperty(prop)) {\n        dest[prop] = src[prop];\n      }\n    }\n    return dest;\n  }\n\n  // ### Error functions\n\n  // #### Raise an exception.\n  //\n  // Raise an exception by passing a token, a string format and its paramters.\n  //\n  // The passed tokens location will automatically be added to the error\n  // message if it exists, if not it will default to the lexers current\n  // position.\n  //\n  // Example:\n  //\n  //     // [1:0] expected [ near (\n  //     raise(token, \"expected %1 near %2\", '[', token.value);\n\n  function raise(token) {\n    var message = sprintf.apply(null, slice.call(arguments, 1))\n      , error, col;\n\n    if ('undefined' !== typeof token.line) {\n      col = token.range[0] - token.lineStart;\n      error = new SyntaxError(sprintf('[%1:%2] %3', token.line, col, message));\n      error.line = token.line;\n      error.index = token.range[0];\n      error.column = col;\n    } else {\n      col = index - lineStart + 1;\n      error = new SyntaxError(sprintf('[%1:%2] %3', line, col, message));\n      error.index = index;\n      error.line = line;\n      error.column = col;\n    }\n    throw error;\n  }\n\n  // #### Raise an unexpected token error.\n  //\n  // Example:\n  //\n  //     // expected <name> near '0'\n  //     raiseUnexpectedToken('<name>', token);\n\n  function raiseUnexpectedToken(type, token) {\n    raise(token, errors.expectedToken, type, token.value);\n  }\n\n  // #### Raise a general unexpected error\n  //\n  // Usage should pass either a token object or a symbol string which was\n  // expected. We can also specify a nearby token such as <eof>, this will\n  // default to the currently active token.\n  //\n  // Example:\n  //\n  //     // Unexpected symbol 'end' near '<eof>'\n  //     unexpected(token);\n  //\n  // If there's no token in the buffer it means we have reached <eof>.\n\n  function unexpected(found, near) {\n    if ('undefined' === typeof near) near = lookahead.value;\n    if ('undefined' !== typeof found.type) {\n      var type;\n      switch (found.type) {\n        case StringLiteral:   type = 'string';      break;\n        case Keyword:         type = 'keyword';     break;\n        case Identifier:      type = 'identifier';  break;\n        case NumericLiteral:  type = 'number';      break;\n        case Punctuator:      type = 'symbol';      break;\n        case BooleanLiteral:  type = 'boolean';     break;\n        case NilLiteral:\n          return raise(found, errors.unexpected, 'symbol', 'nil', near);\n      }\n      return raise(found, errors.unexpected, type, found.value, near);\n    }\n    return raise(found, errors.unexpected, 'symbol', found, near);\n  }\n\n  // Lexer\n  // -----\n  //\n  // The lexer, or the tokenizer reads the input string character by character\n  // and derives a token left-right. To be as efficient as possible the lexer\n  // prioritizes the common cases such as identifiers. It also works with\n  // character codes instead of characters as string comparisons was the\n  // biggest bottleneck of the parser.\n  //\n  // If `options.comments` is enabled, all comments encountered will be stored\n  // in an array which later will be appended to the chunk object. If disabled,\n  // they will simply be disregarded.\n  //\n  // When the lexer has derived a valid token, it will be returned as an object\n  // containing its value and as well as its position in the input string (this\n  // is always enabled to provide proper debug messages).\n  //\n  // `lex()` starts lexing and returns the following token in the stream.\n\n  var index\n    , token\n    , previousToken\n    , lookahead\n    , comments\n    , tokenStart\n    , line\n    , lineStart;\n\n  exports.lex = lex;\n\n  function lex() {\n    skipWhiteSpace();\n\n    // Skip comments beginning with --\n    while (45 === input.charCodeAt(index) &&\n           45 === input.charCodeAt(index + 1)) {\n      scanComment();\n      skipWhiteSpace();\n    }\n    if (index >= length) return {\n        type : EOF\n      , value: '<eof>'\n      , line: line\n      , lineStart: lineStart\n      , range: [index, index]\n    };\n\n    var charCode = input.charCodeAt(index)\n      , next = input.charCodeAt(index + 1);\n\n    // Memorize the range index where the token begins.\n    tokenStart = index;\n    if (isIdentifierStart(charCode)) return scanIdentifierOrKeyword();\n\n    switch (charCode) {\n      case 39: case 34: // '\"\n        return scanStringLiteral();\n\n      // 0-9\n      case 48: case 49: case 50: case 51: case 52: case 53:\n      case 54: case 55: case 56: case 57:\n        return scanNumericLiteral();\n\n      case 46: // .\n        // If the dot is followed by a digit it's a float.\n        if (isDecDigit(next)) return scanNumericLiteral();\n        if (46 === next) {\n          if (46 === input.charCodeAt(index + 2)) return scanVarargLiteral();\n          return scanPunctuator('..');\n        }\n        return scanPunctuator('.');\n\n      case 61: // =\n        if (61 === next) return scanPunctuator('==');\n        return scanPunctuator('=');\n\n      case 62: // >\n        if (61 === next) return scanPunctuator('>=');\n        if (62 === next) return scanPunctuator('>>');\n        return scanPunctuator('>');\n\n      case 60: // <\n        if (60 === next) return scanPunctuator('<<');\n        if (61 === next) return scanPunctuator('<=');\n        return scanPunctuator('<');\n\n      case 126: // ~\n        if (61 === next) return scanPunctuator('~=');\n        return scanPunctuator('~');\n\n      case 58: // :\n        if (58 === next) return scanPunctuator('::');\n        return scanPunctuator(':');\n\n      case 91: // [\n        // Check for a multiline string, they begin with [= or [[\n        if (91 === next || 61 === next) return scanLongStringLiteral();\n        return scanPunctuator('[');\n\n      case 47: // /\n        // Check for integer division op (//)\n        if (47 === next) return scanPunctuator('//');\n        return scanPunctuator('/');\n\n      // * ^ % , { } ] ( ) ; & # - + |\n      case 42: case 94: case 37: case 44: case 123: case 124: case 125:\n      case 93: case 40: case 41: case 59: case 38: case 35: case 45: case 43:\n        return scanPunctuator(input.charAt(index));\n    }\n\n    return unexpected(input.charAt(index));\n  }\n\n  // Whitespace has no semantic meaning in lua so simply skip ahead while\n  // tracking the encounted newlines. Any kind of eol sequence is counted as a\n  // single line.\n\n  function consumeEOL() {\n    var charCode = input.charCodeAt(index)\n      , peekCharCode = input.charCodeAt(index + 1);\n\n    if (isLineTerminator(charCode)) {\n      // Count \\n\\r and \\r\\n as one newline.\n      if (10 === charCode && 13 === peekCharCode) index++;\n      if (13 === charCode && 10 === peekCharCode) index++;\n      line++;\n      lineStart = ++index;\n\n      return true;\n    }\n    return false;\n  }\n\n  function skipWhiteSpace() {\n    while (index < length) {\n      var charCode = input.charCodeAt(index);\n      if (isWhiteSpace(charCode)) {\n        index++;\n      } else if (!consumeEOL()) {\n        break;\n      }\n    }\n  }\n\n  // Identifiers, keywords, booleans and nil all look the same syntax wise. We\n  // simply go through them one by one and defaulting to an identifier if no\n  // previous case matched.\n\n  function scanIdentifierOrKeyword() {\n    var value, type;\n\n    // Slicing the input string is prefered before string concatenation in a\n    // loop for performance reasons.\n    while (isIdentifierPart(input.charCodeAt(++index)));\n    value = input.slice(tokenStart, index);\n\n    // Decide on the token type and possibly cast the value.\n    if (isKeyword(value)) {\n      type = Keyword;\n    } else if ('true' === value || 'false' === value) {\n      type = BooleanLiteral;\n      value = ('true' === value);\n    } else if ('nil' === value) {\n      type = NilLiteral;\n      value = null;\n    } else {\n      type = Identifier;\n    }\n\n    return {\n        type: type\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Once a punctuator reaches this function it should already have been\n  // validated so we simply return it as a token.\n\n  function scanPunctuator(value) {\n    index += value.length;\n    return {\n        type: Punctuator\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // A vararg literal consists of three dots.\n\n  function scanVarargLiteral() {\n    index += 3;\n    return {\n        type: VarargLiteral\n      , value: '...'\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Find the string literal by matching the delimiter marks used.\n\n  function scanStringLiteral() {\n    var delimiter = input.charCodeAt(index++)\n      , stringStart = index\n      , string = ''\n      , charCode;\n\n    while (index < length) {\n      charCode = input.charCodeAt(index++);\n      if (delimiter === charCode) break;\n      if (92 === charCode) { // \\\n        string += input.slice(stringStart, index - 1) + readEscapeSequence();\n        stringStart = index;\n      }\n      // EOF or `\\n` terminates a string literal. If we haven't found the\n      // ending delimiter by now, raise an exception.\n      else if (index >= length || isLineTerminator(charCode)) {\n        string += input.slice(stringStart, index - 1);\n        raise({}, errors.unfinishedString, string + String.fromCharCode(charCode));\n      }\n    }\n    string += input.slice(stringStart, index - 1);\n\n    return {\n        type: StringLiteral\n      , value: string\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Expect a multiline string literal and return it as a regular string\n  // literal, if it doesn't validate into a valid multiline string, throw an\n  // exception.\n\n  function scanLongStringLiteral() {\n    var string = readLongString();\n    // Fail if it's not a multiline literal.\n    if (false === string) raise(token, errors.expected, '[', token.value);\n\n    return {\n        type: StringLiteral\n      , value: string\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Numeric literals will be returned as floating-point numbers instead of\n  // strings. The raw value should be retrieved from slicing the input string\n  // later on in the process.\n  //\n  // If a hexadecimal number is encountered, it will be converted.\n\n  function scanNumericLiteral() {\n    var character = input.charAt(index)\n      , next = input.charAt(index + 1);\n\n    var value = ('0' === character && 'xX'.indexOf(next || null) >= 0) ?\n      readHexLiteral() : readDecLiteral();\n\n    return {\n        type: NumericLiteral\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Lua hexadecimals have an optional fraction part and an optional binary\n  // exoponent part. These are not included in JavaScript so we will compute\n  // all three parts separately and then sum them up at the end of the function\n  // with the following algorithm.\n  //\n  //     Digit := toDec(digit)\n  //     Fraction := toDec(fraction) / 16 ^ fractionCount\n  //     BinaryExp := 2 ^ binaryExp\n  //     Number := ( Digit + Fraction ) * BinaryExp\n\n  function readHexLiteral() {\n    var fraction = 0 // defaults to 0 as it gets summed\n      , binaryExponent = 1 // defaults to 1 as it gets multiplied\n      , binarySign = 1 // positive\n      , digit, fractionStart, exponentStart, digitStart;\n\n    digitStart = index += 2; // Skip 0x part\n\n    // A minimum of one hex digit is required.\n    if (!isHexDigit(input.charCodeAt(index)))\n      raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n    while (isHexDigit(input.charCodeAt(index))) index++;\n    // Convert the hexadecimal digit to base 10.\n    digit = parseInt(input.slice(digitStart, index), 16);\n\n    // Fraction part i optional.\n    if ('.' === input.charAt(index)) {\n      fractionStart = ++index;\n\n      while (isHexDigit(input.charCodeAt(index))) index++;\n      fraction = input.slice(fractionStart, index);\n\n      // Empty fraction parts should default to 0, others should be converted\n      // 0.x form so we can use summation at the end.\n      fraction = (fractionStart === index) ? 0\n        : parseInt(fraction, 16) / Math.pow(16, index - fractionStart);\n    }\n\n    // Binary exponents are optional\n    if ('pP'.indexOf(input.charAt(index) || null) >= 0) {\n      index++;\n\n      // Sign part is optional and defaults to 1 (positive).\n      if ('+-'.indexOf(input.charAt(index) || null) >= 0)\n        binarySign = ('+' === input.charAt(index++)) ? 1 : -1;\n\n      exponentStart = index;\n\n      // The binary exponent sign requires a decimal digit.\n      if (!isDecDigit(input.charCodeAt(index)))\n        raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n      while (isDecDigit(input.charCodeAt(index))) index++;\n      binaryExponent = input.slice(exponentStart, index);\n\n      // Calculate the binary exponent of the number.\n      binaryExponent = Math.pow(2, binaryExponent * binarySign);\n    }\n\n    return (digit + fraction) * binaryExponent;\n  }\n\n  // Decimal numbers are exactly the same in Lua and in JavaScript, because of\n  // this we check where the token ends and then parse it with native\n  // functions.\n\n  function readDecLiteral() {\n    while (isDecDigit(input.charCodeAt(index))) index++;\n    // Fraction part is optional\n    if ('.' === input.charAt(index)) {\n      index++;\n      // Fraction part defaults to 0\n      while (isDecDigit(input.charCodeAt(index))) index++;\n    }\n    // Exponent part is optional.\n    if ('eE'.indexOf(input.charAt(index) || null) >= 0) {\n      index++;\n      // Sign part is optional.\n      if ('+-'.indexOf(input.charAt(index) || null) >= 0) index++;\n      // An exponent is required to contain at least one decimal digit.\n      if (!isDecDigit(input.charCodeAt(index)))\n        raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n      while (isDecDigit(input.charCodeAt(index))) index++;\n    }\n\n    return parseFloat(input.slice(tokenStart, index));\n  }\n\n\n  // Translate escape sequences to the actual characters.\n\n  function readEscapeSequence() {\n    var sequenceStart = index;\n    switch (input.charAt(index)) {\n      // Lua allow the following escape sequences.\n      // We don't escape the bell sequence.\n      case 'n': index++; return '\\n';\n      case 'r': index++; return '\\r';\n      case 't': index++; return '\\t';\n      case 'v': index++; return '\\x0B';\n      case 'b': index++; return '\\b';\n      case 'f': index++; return '\\f';\n      // Skips the following span of white-space.\n      case 'z': index++; skipWhiteSpace(); return '';\n      // Byte representation should for now be returned as is.\n      case 'x':\n        // \\xXX, where XX is a sequence of exactly two hexadecimal digits\n        if (isHexDigit(input.charCodeAt(index + 1)) &&\n            isHexDigit(input.charCodeAt(index + 2))) {\n          index += 3;\n          // Return it as is, without translating the byte.\n          return '\\\\' + input.slice(sequenceStart, index);\n        }\n        return '\\\\' + input.charAt(index++);\n      default:\n        // \\ddd, where ddd is a sequence of up to three decimal digits.\n        if (isDecDigit(input.charCodeAt(index))) {\n          while (isDecDigit(input.charCodeAt(++index)));\n          return '\\\\' + input.slice(sequenceStart, index);\n        }\n        // Simply return the \\ as is, it's not escaping any sequence.\n        return input.charAt(index++);\n    }\n  }\n\n  // Comments begin with -- after which it will be decided if they are\n  // multiline comments or not.\n  //\n  // The multiline functionality works the exact same way as with string\n  // literals so we reuse the functionality.\n\n  function scanComment() {\n    tokenStart = index;\n    index += 2; // --\n\n    var character = input.charAt(index)\n      , content = ''\n      , isLong = false\n      , commentStart = index\n      , lineStartComment = lineStart\n      , lineComment = line;\n\n    if ('[' === character) {\n      content = readLongString();\n      // This wasn't a multiline comment after all.\n      if (false === content) content = character;\n      else isLong = true;\n    }\n    // Scan until next line as long as it's not a multiline comment.\n    if (!isLong) {\n      while (index < length) {\n        if (isLineTerminator(input.charCodeAt(index))) break;\n        index++;\n      }\n      if (options.comments) content = input.slice(commentStart, index);\n    }\n\n    if (options.comments) {\n      var node = ast.comment(content, input.slice(tokenStart, index));\n\n      // `Marker`s depend on tokens available in the parser and as comments are\n      // intercepted in the lexer all location data is set manually.\n      if (options.locations) {\n        node.loc = {\n            start: { line: lineComment, column: tokenStart - lineStartComment }\n          , end: { line: line, column: index - lineStart }\n        };\n      }\n      if (options.ranges) {\n        node.range = [tokenStart, index];\n      }\n      if (options.onCreateNode) options.onCreateNode(node);\n      comments.push(node);\n    }\n  }\n\n  // Read a multiline string by calculating the depth of `=` characters and\n  // then appending until an equal depth is found.\n\n  function readLongString() {\n    var level = 0\n      , content = ''\n      , terminator = false\n      , character, stringStart;\n\n    index++; // [\n\n    // Calculate the depth of the comment.\n    while ('=' === input.charAt(index + level)) level++;\n    // Exit, this is not a long string afterall.\n    if ('[' !== input.charAt(index + level)) return false;\n\n    index += level + 1;\n\n    // If the first character is a newline, ignore it and begin on next line.\n    if (isLineTerminator(input.charCodeAt(index))) consumeEOL();\n\n    stringStart = index;\n    while (index < length) {\n      // To keep track of line numbers run the `consumeEOL()` which increments\n      // its counter.\n      if (isLineTerminator(input.charCodeAt(index))) consumeEOL();\n\n      character = input.charAt(index++);\n\n      // Once the delimiter is found, iterate through the depth count and see\n      // if it matches.\n      if (']' === character) {\n        terminator = true;\n        for (var i = 0; i < level; i++) {\n          if ('=' !== input.charAt(index + i)) terminator = false;\n        }\n        if (']' !== input.charAt(index + level)) terminator = false;\n      }\n\n      // We reached the end of the multiline string. Get out now.\n      if (terminator) break;\n    }\n    content += input.slice(stringStart, index - 1);\n    index += level + 1;\n\n    return content;\n  }\n\n  // ## Lex functions and helpers.\n\n  // Read the next token.\n  //\n  // This is actually done by setting the current token to the lookahead and\n  // reading in the new lookahead token.\n\n  function next() {\n    previousToken = token;\n    token = lookahead;\n    lookahead = lex();\n  }\n\n  // Consume a token if its value matches. Once consumed or not, return the\n  // success of the operation.\n\n  function consume(value) {\n    if (value === token.value) {\n      next();\n      return true;\n    }\n    return false;\n  }\n\n  // Expect the next token value to match. If not, throw an exception.\n\n  function expect(value) {\n    if (value === token.value) next();\n    else raise(token, errors.expected, value, token.value);\n  }\n\n  // ### Validation functions\n\n  function isWhiteSpace(charCode) {\n    return 9 === charCode || 32 === charCode || 0xB === charCode || 0xC === charCode;\n  }\n\n  function isLineTerminator(charCode) {\n    return 10 === charCode || 13 === charCode;\n  }\n\n  function isDecDigit(charCode) {\n    return charCode >= 48 && charCode <= 57;\n  }\n\n  function isHexDigit(charCode) {\n    return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) || (charCode >= 65 && charCode <= 70);\n  }\n\n  // From [Lua 5.2](http://www.lua.org/manual/5.2/manual.html#8.1) onwards\n  // identifiers cannot use locale-dependet letters.\n\n  function isIdentifierStart(charCode) {\n    return (charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || 95 === charCode;\n  }\n\n  function isIdentifierPart(charCode) {\n    return (charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || 95 === charCode || (charCode >= 48 && charCode <= 57);\n  }\n\n  // [3.1 Lexical Conventions](http://www.lua.org/manual/5.2/manual.html#3.1)\n  //\n  // `true`, `false` and `nil` will not be considered keywords, but literals.\n\n  function isKeyword(id) {\n    switch (id.length) {\n      case 2:\n        return 'do' === id || 'if' === id || 'in' === id || 'or' === id;\n      case 3:\n        return 'and' === id || 'end' === id || 'for' === id || 'not' === id;\n      case 4:\n        return 'else' === id || 'goto' === id || 'then' === id;\n      case 5:\n        return 'break' === id || 'local' === id || 'until' === id || 'while' === id;\n      case 6:\n        return 'elseif' === id || 'repeat' === id || 'return' === id;\n      case 8:\n        return 'function' === id;\n    }\n    return false;\n  }\n\n  function isUnary(token) {\n    if (Punctuator === token.type) return '#-~'.indexOf(token.value) >= 0;\n    if (Keyword === token.type) return 'not' === token.value;\n    return false;\n  }\n\n  // @TODO this needs to be rethought.\n  function isCallExpression(expression) {\n    switch (expression.type) {\n      case 'CallExpression':\n      case 'TableCallExpression':\n      case 'StringCallExpression':\n        return true;\n    }\n    return false;\n  }\n\n  // Check if the token syntactically closes a block.\n\n  function isBlockFollow(token) {\n    if (EOF === token.type) return true;\n    if (Keyword !== token.type) return false;\n    switch (token.value) {\n      case 'else': case 'elseif':\n      case 'end': case 'until':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Scope\n  // -----\n\n  // Store each block scope as a an array of identifier names. Each scope is\n  // stored in an FILO-array.\n  var scopes\n    // The current scope index\n    , scopeDepth\n    // A list of all global identifier nodes.\n    , globals;\n\n  // Create a new scope inheriting all declarations from the previous scope.\n  function createScope() {\n    var scope = Array.apply(null, scopes[scopeDepth++]);\n    scopes.push(scope);\n    if (options.onCreateScope) options.onCreateScope();\n  }\n\n  // Exit and remove the current scope.\n  function destroyScope() {\n    var scope = scopes.pop();\n    scopeDepth--;\n    if (options.onDestroyScope) options.onDestroyScope();\n  }\n\n  // Add identifier name to the current scope if it doesnt already exist.\n  function scopeIdentifierName(name) {\n    if (-1 !== indexOf(scopes[scopeDepth], name)) return;\n    scopes[scopeDepth].push(name);\n  }\n\n  // Add identifier to the current scope\n  function scopeIdentifier(node) {\n    scopeIdentifierName(node.name);\n    attachScope(node, true);\n  }\n\n  // Attach scope information to node. If the node is global, store it in the\n  // globals array so we can return the information to the user.\n  function attachScope(node, isLocal) {\n    if (!isLocal && -1 === indexOfObject(globals, 'name', node.name))\n      globals.push(node);\n\n    node.isLocal = isLocal;\n  }\n\n  // Is the identifier name available in this scope.\n  function scopeHasName(name) {\n    return (-1 !== indexOf(scopes[scopeDepth], name));\n  }\n\n  // Location tracking\n  // -----------------\n  //\n  // Locations are stored in FILO-array as a `Marker` object consisting of both\n  // `loc` and `range` data. Once a `Marker` is popped off the list an end\n  // location is added and the data is attached to a syntax node.\n\n  var locations = []\n    , trackLocations;\n\n  function createLocationMarker() {\n    return new Marker(token);\n  }\n\n  function Marker(token) {\n    if (options.locations) {\n      this.loc = {\n          start: {\n            line: token.line\n          , column: token.range[0] - token.lineStart\n        }\n        , end: {\n            line: 0\n          , column: 0\n        }\n      };\n    }\n    if (options.ranges) this.range = [token.range[0], 0];\n  }\n\n  // Complete the location data stored in the `Marker` by adding the location\n  // of the *previous token* as an end location.\n  Marker.prototype.complete = function() {\n    if (options.locations) {\n      this.loc.end.line = previousToken.line;\n      this.loc.end.column = previousToken.range[1] - previousToken.lineStart;\n    }\n    if (options.ranges) {\n      this.range[1] = previousToken.range[1];\n    }\n  };\n\n  // Create a new `Marker` and add it to the FILO-array.\n  function markLocation() {\n    if (trackLocations) locations.push(createLocationMarker());\n  }\n\n  // Push an arbitrary `Marker` object onto the FILO-array.\n  function pushLocation(marker) {\n    if (trackLocations) locations.push(marker);\n  }\n\n  // Parse functions\n  // ---------------\n\n  // Chunk is the main program object. Syntactically it's the same as a block.\n  //\n  //     chunk ::= block\n\n  function parseChunk() {\n    next();\n    markLocation();\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    if (EOF !== token.type) unexpected(token);\n    // If the body is empty no previousToken exists when finishNode runs.\n    if (trackLocations && !body.length) previousToken = token;\n    return finishNode(ast.chunk(body));\n  }\n\n  // A block contains a list of statements with an optional return statement\n  // as its last statement.\n  //\n  //     block ::= {stat} [retstat]\n\n  function parseBlock(terminator) {\n    var block = []\n      , statement;\n\n    while (!isBlockFollow(token)) {\n      // Return has to be the last statement in a block.\n      if ('return' === token.value) {\n        block.push(parseStatement());\n        break;\n      }\n      statement = parseStatement();\n      // Statements are only added if they are returned, this allows us to\n      // ignore some statements, such as EmptyStatement.\n      if (statement) block.push(statement);\n    }\n\n    // Doesn't really need an ast node\n    return block;\n  }\n\n  // There are two types of statements, simple and compound.\n  //\n  //     statement ::= break | goto | do | while | repeat | return\n  //          | if | for | function | local | label | assignment\n  //          | functioncall | ';'\n\n  function parseStatement() {\n    markLocation();\n    if (Keyword === token.type) {\n      switch (token.value) {\n        case 'local':    next(); return parseLocalStatement();\n        case 'if':       next(); return parseIfStatement();\n        case 'return':   next(); return parseReturnStatement();\n        case 'function': next();\n          var name = parseFunctionName();\n          return parseFunctionDeclaration(name);\n        case 'while':    next(); return parseWhileStatement();\n        case 'for':      next(); return parseForStatement();\n        case 'repeat':   next(); return parseRepeatStatement();\n        case 'break':    next(); return parseBreakStatement();\n        case 'do':       next(); return parseDoStatement();\n        case 'goto':     next(); return parseGotoStatement();\n      }\n    }\n\n    if (Punctuator === token.type) {\n      if (consume('::')) return parseLabelStatement();\n    }\n    // Assignments memorizes the location and pushes it manually for wrapper\n    // nodes. Additionally empty `;` statements should not mark a location.\n    if (trackLocations) locations.pop();\n\n    // When a `;` is encounted, simply eat it without storing it.\n    if (consume(';')) return;\n\n    return parseAssignmentOrCallStatement();\n  }\n\n  // ## Statements\n\n  //     label ::= '::' Name '::'\n\n  function parseLabelStatement() {\n    var name = token.value\n      , label = parseIdentifier();\n\n    if (options.scope) {\n      scopeIdentifierName('::' + name + '::');\n      attachScope(label, true);\n    }\n\n    expect('::');\n    return finishNode(ast.labelStatement(label));\n  }\n\n  //     break ::= 'break'\n\n  function parseBreakStatement() {\n    return finishNode(ast.breakStatement());\n  }\n\n  //     goto ::= 'goto' Name\n\n  function parseGotoStatement() {\n    var name = token.value\n      , label = parseIdentifier();\n\n    return finishNode(ast.gotoStatement(label));\n  }\n\n  //     do ::= 'do' block 'end'\n\n  function parseDoStatement() {\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    expect('end');\n    return finishNode(ast.doStatement(body));\n  }\n\n  //     while ::= 'while' exp 'do' block 'end'\n\n  function parseWhileStatement() {\n    var condition = parseExpectedExpression();\n    expect('do');\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    expect('end');\n    return finishNode(ast.whileStatement(condition, body));\n  }\n\n  //     repeat ::= 'repeat' block 'until' exp\n\n  function parseRepeatStatement() {\n    if (options.scope) createScope();\n    var body = parseBlock();\n    expect('until');\n    var condition = parseExpectedExpression();\n    if (options.scope) destroyScope();\n    return finishNode(ast.repeatStatement(condition, body));\n  }\n\n  //     retstat ::= 'return' [exp {',' exp}] [';']\n\n  function parseReturnStatement() {\n    var expressions = [];\n\n    if ('end' !== token.value) {\n      var expression = parseExpression();\n      if (null != expression) expressions.push(expression);\n      while (consume(',')) {\n        expression = parseExpectedExpression();\n        expressions.push(expression);\n      }\n      consume(';'); // grammar tells us ; is optional here.\n    }\n    return finishNode(ast.returnStatement(expressions));\n  }\n\n  //     if ::= 'if' exp 'then' block {elif} ['else' block] 'end'\n  //     elif ::= 'elseif' exp 'then' block\n\n  function parseIfStatement() {\n    var clauses = []\n      , condition\n      , body\n      , marker;\n\n    // IfClauses begin at the same location as the parent IfStatement.\n    // It ends at the start of `end`, `else`, or `elseif`.\n    if (trackLocations) {\n      marker = locations[locations.length - 1];\n      locations.push(marker);\n    }\n    condition = parseExpectedExpression();\n    expect('then');\n    if (options.scope) createScope();\n    body = parseBlock();\n    if (options.scope) destroyScope();\n    clauses.push(finishNode(ast.ifClause(condition, body)));\n\n    if (trackLocations) marker = createLocationMarker();\n    while (consume('elseif')) {\n      pushLocation(marker);\n      condition = parseExpectedExpression();\n      expect('then');\n      if (options.scope) createScope();\n      body = parseBlock();\n      if (options.scope) destroyScope();\n      clauses.push(finishNode(ast.elseifClause(condition, body)));\n      if (trackLocations) marker = createLocationMarker();\n    }\n\n    if (consume('else')) {\n      // Include the `else` in the location of ElseClause.\n      if (trackLocations) {\n        marker = new Marker(previousToken);\n        locations.push(marker);\n      }\n      if (options.scope) createScope();\n      body = parseBlock();\n      if (options.scope) destroyScope();\n      clauses.push(finishNode(ast.elseClause(body)));\n    }\n\n    expect('end');\n    return finishNode(ast.ifStatement(clauses));\n  }\n\n  // There are two types of for statements, generic and numeric.\n  //\n  //     for ::= Name '=' exp ',' exp [',' exp] 'do' block 'end'\n  //     for ::= namelist 'in' explist 'do' block 'end'\n  //     namelist ::= Name {',' Name}\n  //     explist ::= exp {',' exp}\n\n  function parseForStatement() {\n    var variable = parseIdentifier()\n      , body;\n\n    // The start-identifier is local.\n\n    if (options.scope) {\n      createScope();\n      scopeIdentifier(variable);\n    }\n\n    // If the first expression is followed by a `=` punctuator, this is a\n    // Numeric For Statement.\n    if (consume('=')) {\n      // Start expression\n      var start = parseExpectedExpression();\n      expect(',');\n      // End expression\n      var end = parseExpectedExpression();\n      // Optional step expression\n      var step = consume(',') ? parseExpectedExpression() : null;\n\n      expect('do');\n      body = parseBlock();\n      expect('end');\n      if (options.scope) destroyScope();\n\n      return finishNode(ast.forNumericStatement(variable, start, end, step, body));\n    }\n    // If not, it's a Generic For Statement\n    else {\n      // The namelist can contain one or more identifiers.\n      var variables = [variable];\n      while (consume(',')) {\n        variable = parseIdentifier();\n        // Each variable in the namelist is locally scoped.\n        if (options.scope) scopeIdentifier(variable);\n        variables.push(variable);\n      }\n      expect('in');\n      var iterators = [];\n\n      // One or more expressions in the explist.\n      do {\n        var expression = parseExpectedExpression();\n        iterators.push(expression);\n      } while (consume(','));\n\n      expect('do');\n      body = parseBlock();\n      expect('end');\n      if (options.scope) destroyScope();\n\n      return finishNode(ast.forGenericStatement(variables, iterators, body));\n    }\n  }\n\n  // Local statements can either be variable assignments or function\n  // definitions. If a function definition is found, it will be delegated to\n  // `parseFunctionDeclaration()` with the isLocal flag.\n  //\n  // This AST structure might change into a local assignment with a function\n  // child.\n  //\n  //     local ::= 'local' 'function' Name funcdecl\n  //        | 'local' Name {',' Name} ['=' exp {',' exp}]\n\n  function parseLocalStatement() {\n    var name;\n\n    if (Identifier === token.type) {\n      var variables = []\n        , init = [];\n\n      do {\n        name = parseIdentifier();\n\n        variables.push(name);\n      } while (consume(','));\n\n      if (consume('=')) {\n        do {\n          var expression = parseExpectedExpression();\n          init.push(expression);\n        } while (consume(','));\n      }\n\n      // Declarations doesn't exist before the statement has been evaluated.\n      // Therefore assignments can't use their declarator. And the identifiers\n      // shouldn't be added to the scope until the statement is complete.\n      if (options.scope) {\n        for (var i = 0, l = variables.length; i < l; i++) {\n          scopeIdentifier(variables[i]);\n        }\n      }\n\n      return finishNode(ast.localStatement(variables, init));\n    }\n    if (consume('function')) {\n      name = parseIdentifier();\n\n      if (options.scope) {\n        scopeIdentifier(name);\n        createScope();\n      }\n\n      // MemberExpressions are not allowed in local function statements.\n      return parseFunctionDeclaration(name, true);\n    } else {\n      raiseUnexpectedToken('<name>', token);\n    }\n  }\n\n  function validateVar(node) {\n    // @TODO we need something not dependent on the exact AST used. see also isCallExpression()\n    if (node.inParens || (['Identifier', 'MemberExpression', 'IndexExpression'].indexOf(node.type) === -1)) {\n      raise(token, errors.invalidVar, token.value);\n    }\n  }\n\n  //     assignment ::= varlist '=' explist\n  //     var ::= Name | prefixexp '[' exp ']' | prefixexp '.' Name\n  //     varlist ::= var {',' var}\n  //     explist ::= exp {',' exp}\n  //\n  //     call ::= callexp\n  //     callexp ::= prefixexp args | prefixexp ':' Name args\n\n  function parseAssignmentOrCallStatement() {\n    // Keep a reference to the previous token for better error messages in case\n    // of invalid statement\n    var previous = token\n      , expression, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n    expression = parsePrefixExpression();\n\n    if (null == expression) return unexpected(token);\n    if (',='.indexOf(token.value) >= 0) {\n      var variables = [expression]\n        , init = []\n        , exp;\n\n      validateVar(expression);\n      while (consume(',')) {\n        exp = parsePrefixExpression();\n        if (null == exp) raiseUnexpectedToken('<expression>', token);\n        validateVar(exp);\n        variables.push(exp);\n      }\n      expect('=');\n      do {\n        exp = parseExpectedExpression();\n        init.push(exp);\n      } while (consume(','));\n\n      pushLocation(marker);\n      return finishNode(ast.assignmentStatement(variables, init));\n    }\n    if (isCallExpression(expression)) {\n      pushLocation(marker);\n      return finishNode(ast.callStatement(expression));\n    }\n    // The prefix expression was neither part of an assignment or a\n    // callstatement, however as it was valid it's been consumed, so raise\n    // the exception on the previous token to provide a helpful message.\n    return unexpected(previous);\n  }\n\n\n\n  // ### Non-statements\n\n  //     Identifier ::= Name\n\n  function parseIdentifier() {\n    markLocation();\n    var identifier = token.value;\n    if (Identifier !== token.type) raiseUnexpectedToken('<name>', token);\n    next();\n    return finishNode(ast.identifier(identifier));\n  }\n\n  // Parse the functions parameters and body block. The name should already\n  // have been parsed and passed to this declaration function. By separating\n  // this we allow for anonymous functions in expressions.\n  //\n  // For local functions there's a boolean parameter which needs to be set\n  // when parsing the declaration.\n  //\n  //     funcdecl ::= '(' [parlist] ')' block 'end'\n  //     parlist ::= Name {',' Name} | [',' '...'] | '...'\n\n  function parseFunctionDeclaration(name, isLocal) {\n    var parameters = [];\n    expect('(');\n\n    // The declaration has arguments\n    if (!consume(')')) {\n      // Arguments are a comma separated list of identifiers, optionally ending\n      // with a vararg.\n      while (true) {\n        if (Identifier === token.type) {\n          var parameter = parseIdentifier();\n          // Function parameters are local.\n          if (options.scope) scopeIdentifier(parameter);\n\n          parameters.push(parameter);\n\n          if (consume(',')) continue;\n          else if (consume(')')) break;\n        }\n        // No arguments are allowed after a vararg.\n        else if (VarargLiteral === token.type) {\n          parameters.push(parsePrimaryExpression());\n          expect(')');\n          break;\n        } else {\n          raiseUnexpectedToken('<name> or \\'...\\'', token);\n        }\n      }\n    }\n\n    var body = parseBlock();\n    expect('end');\n    if (options.scope) destroyScope();\n\n    isLocal = isLocal || false;\n    return finishNode(ast.functionStatement(name, parameters, isLocal, body));\n  }\n\n  // Parse the function name as identifiers and member expressions.\n  //\n  //     Name {'.' Name} [':' Name]\n\n  function parseFunctionName() {\n    var base, name, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n    base = parseIdentifier();\n\n    if (options.scope) {\n      attachScope(base, scopeHasName(base.name));\n      createScope();\n    }\n\n    while (consume('.')) {\n      pushLocation(marker);\n      name = parseIdentifier();\n      base = finishNode(ast.memberExpression(base, '.', name));\n    }\n\n    if (consume(':')) {\n      pushLocation(marker);\n      name = parseIdentifier();\n      base = finishNode(ast.memberExpression(base, ':', name));\n      if (options.scope) scopeIdentifierName('self');\n    }\n\n    return base;\n  }\n\n  //     tableconstructor ::= '{' [fieldlist] '}'\n  //     fieldlist ::= field {fieldsep field} fieldsep\n  //     field ::= '[' exp ']' '=' exp | Name = 'exp' | exp\n  //\n  //     fieldsep ::= ',' | ';'\n\n  function parseTableConstructor() {\n    var fields = []\n      , key, value;\n\n    while (true) {\n      markLocation();\n      if (Punctuator === token.type && consume('[')) {\n        key = parseExpectedExpression();\n        expect(']');\n        expect('=');\n        value = parseExpectedExpression();\n        fields.push(finishNode(ast.tableKey(key, value)));\n      } else if (Identifier === token.type) {\n        if ('=' === lookahead.value) {\n          key = parseIdentifier();\n          next();\n          value = parseExpectedExpression();\n          fields.push(finishNode(ast.tableKeyString(key, value)));\n        } else {\n          value = parseExpectedExpression();\n          fields.push(finishNode(ast.tableValue(value)));\n        }\n      } else {\n        if (null == (value = parseExpression())) {\n          locations.pop();\n          break;\n        }\n        fields.push(finishNode(ast.tableValue(value)));\n      }\n      if (',;'.indexOf(token.value) >= 0) {\n        next();\n        continue;\n      }\n      break;\n    }\n    expect('}');\n    return finishNode(ast.tableConstructorExpression(fields));\n  }\n\n  // Expression parser\n  // -----------------\n  //\n  // Expressions are evaluated and always return a value. If nothing is\n  // matched null will be returned.\n  //\n  //     exp ::= (unop exp | primary | prefixexp ) { binop exp }\n  //\n  //     primary ::= nil | false | true | Number | String | '...'\n  //          | functiondef | tableconstructor\n  //\n  //     prefixexp ::= (Name | '(' exp ')' ) { '[' exp ']'\n  //          | '.' Name | ':' Name args | args }\n  //\n\n  function parseExpression() {\n    var expression = parseSubExpression(0);\n    return expression;\n  }\n\n  // Parse an expression expecting it to be valid.\n\n  function parseExpectedExpression() {\n    var expression = parseExpression();\n    if (null == expression) raiseUnexpectedToken('<expression>', token);\n    else return expression;\n  }\n\n\n  // Return the precedence priority of the operator.\n  //\n  // As unary `-` can't be distinguished from binary `-`, unary precedence\n  // isn't described in this table but in `parseSubExpression()` itself.\n  //\n  // As this function gets hit on every expression it's been optimized due to\n  // the expensive CompareICStub which took ~8% of the parse time.\n\n  function binaryPrecedence(operator) {\n    var charCode = operator.charCodeAt(0)\n      , length = operator.length;\n\n    if (1 === length) {\n      switch (charCode) {\n        case 94: return 12; // ^\n        case 42: case 47: case 37: return 10; // * / %\n        case 43: case 45: return 9; // + -\n        case 38: return 6; // &\n        case 126: return 5; // ~\n        case 124: return 4; // |\n        case 60: case 62: return 3; // < >\n      }\n    } else if (2 === length) {\n      switch (charCode) {\n        case 47: return 10; // //\n        case 46: return 8; // ..\n        case 60: case 62:\n            if('<<' === operator || '>>' === operator) return 7; // << >>\n            return 3; // <= >=\n        case 61: case 126: return 3; // == ~=\n        case 111: return 1; // or\n      }\n    } else if (97 === charCode && 'and' === operator) return 2;\n    return 0;\n  }\n\n  // Implement an operator-precedence parser to handle binary operator\n  // precedence.\n  //\n  // We use this algorithm because it's compact, it's fast and Lua core uses\n  // the same so we can be sure our expressions are parsed in the same manner\n  // without excessive amounts of tests.\n  //\n  //     exp ::= (unop exp | primary | prefixexp ) { binop exp }\n\n  function parseSubExpression(minPrecedence) {\n    var operator = token.value\n    // The left-hand side in binary operations.\n      , expression, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    // UnaryExpression\n    if (isUnary(token)) {\n      markLocation();\n      next();\n      var argument = parseSubExpression(10);\n      if (argument == null) raiseUnexpectedToken('<expression>', token);\n      expression = finishNode(ast.unaryExpression(operator, argument));\n    }\n    if (null == expression) {\n      // PrimaryExpression\n      expression = parsePrimaryExpression();\n\n      // PrefixExpression\n      if (null == expression) {\n        expression = parsePrefixExpression();\n      }\n    }\n    // This is not a valid left hand expression.\n    if (null == expression) return null;\n\n    var precedence;\n    while (true) {\n      operator = token.value;\n\n      precedence = (Punctuator === token.type || Keyword === token.type) ?\n        binaryPrecedence(operator) : 0;\n\n      if (precedence === 0 || precedence <= minPrecedence) break;\n      // Right-hand precedence operators\n      if ('^' === operator || '..' === operator) precedence--;\n      next();\n      var right = parseSubExpression(precedence);\n      if (null == right) raiseUnexpectedToken('<expression>', token);\n      // Push in the marker created before the loop to wrap its entirety.\n      if (trackLocations) locations.push(marker);\n      expression = finishNode(ast.binaryExpression(operator, expression, right));\n\n    }\n    return expression;\n  }\n\n  //     prefixexp ::= prefix {suffix}\n  //     prefix ::= Name | '(' exp ')'\n  //     suffix ::= '[' exp ']' | '.' Name | ':' Name args | args\n  //\n  //     args ::= '(' [explist] ')' | tableconstructor | String\n\n  function parsePrefixExpression() {\n    var base, name, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    // The prefix\n    if (Identifier === token.type) {\n      name = token.value;\n      base = parseIdentifier();\n      // Set the parent scope.\n      if (options.scope) attachScope(base, scopeHasName(name));\n    } else if (consume('(')) {\n      base = parseExpectedExpression();\n      expect(')');\n      base.inParens = true; // XXX: quick and dirty. needed for validateVar\n    } else {\n      return null;\n    }\n\n    // The suffix\n    var expression, identifier;\n    while (true) {\n      if (Punctuator === token.type) {\n        switch (token.value) {\n          case '[':\n            pushLocation(marker);\n            next();\n            expression = parseExpectedExpression();\n            base = finishNode(ast.indexExpression(base, expression));\n            expect(']');\n            break;\n          case '.':\n            pushLocation(marker);\n            next();\n            identifier = parseIdentifier();\n            base = finishNode(ast.memberExpression(base, '.', identifier));\n            break;\n          case ':':\n            pushLocation(marker);\n            next();\n            identifier = parseIdentifier();\n            base = finishNode(ast.memberExpression(base, ':', identifier));\n            // Once a : is found, this has to be a CallExpression, otherwise\n            // throw an error.\n            pushLocation(marker);\n            base = parseCallExpression(base);\n            break;\n          case '(': case '{': // args\n            pushLocation(marker);\n            base = parseCallExpression(base);\n            break;\n          default:\n            return base;\n        }\n      } else if (StringLiteral === token.type) {\n        pushLocation(marker);\n        base = parseCallExpression(base);\n      } else {\n        break;\n      }\n    }\n\n    return base;\n  }\n\n  //     args ::= '(' [explist] ')' | tableconstructor | String\n\n  function parseCallExpression(base) {\n    if (Punctuator === token.type) {\n      switch (token.value) {\n        case '(':\n          next();\n\n          // List of expressions\n          var expressions = [];\n          var expression = parseExpression();\n          if (null != expression) expressions.push(expression);\n          while (consume(',')) {\n            expression = parseExpectedExpression();\n            expressions.push(expression);\n          }\n\n          expect(')');\n          return finishNode(ast.callExpression(base, expressions));\n\n        case '{':\n          markLocation();\n          next();\n          var table = parseTableConstructor();\n          return finishNode(ast.tableCallExpression(base, table));\n      }\n    } else if (StringLiteral === token.type) {\n      return finishNode(ast.stringCallExpression(base, parsePrimaryExpression()));\n    }\n\n    raiseUnexpectedToken('function arguments', token);\n  }\n\n  //     primary ::= String | Numeric | nil | true | false\n  //          | functiondef | tableconstructor | '...'\n\n  function parsePrimaryExpression() {\n    var literals = StringLiteral | NumericLiteral | BooleanLiteral | NilLiteral | VarargLiteral\n      , value = token.value\n      , type = token.type\n      , marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    if (type & literals) {\n      pushLocation(marker);\n      var raw = input.slice(token.range[0], token.range[1]);\n      next();\n      return finishNode(ast.literal(type, value, raw));\n    } else if (Keyword === type && 'function' === value) {\n      pushLocation(marker);\n      next();\n      if (options.scope) createScope();\n      return parseFunctionDeclaration(null);\n    } else if (consume('{')) {\n      pushLocation(marker);\n      return parseTableConstructor();\n    }\n  }\n\n  // Parser\n  // ------\n\n  // Export the main parser.\n  //\n  //   - `wait` Hold parsing until end() is called. Defaults to false\n  //   - `comments` Store comments. Defaults to true.\n  //   - `scope` Track identifier scope. Defaults to false.\n  //   - `locations` Store location information. Defaults to false.\n  //   - `ranges` Store the start and end character locations. Defaults to\n  //     false.\n  //   - `onCreateNode` Callback which will be invoked when a syntax node is\n  //     created.\n  //   - `onCreateScope` Callback which will be invoked when a new scope is\n  //     created.\n  //   - `onDestroyScope` Callback which will be invoked when the current scope\n  //     is destroyed.\n  //\n  // Example:\n  //\n  //     var parser = require('luaparser');\n  //     parser.parse('i = 0');\n\n  exports.parse = parse;\n\n  function parse(_input, _options) {\n    if ('undefined' === typeof _options && 'object' === typeof _input) {\n      _options = _input;\n      _input = undefined;\n    }\n    if (!_options) _options = {};\n\n    input = _input || '';\n    options = extend(defaultOptions, _options);\n\n    // Rewind the lexer\n    index = 0;\n    line = 1;\n    lineStart = 0;\n    length = input.length;\n    // When tracking identifier scope, initialize with an empty scope.\n    scopes = [[]];\n    scopeDepth = 0;\n    globals = [];\n    locations = [];\n\n    if (options.comments) comments = [];\n    if (!options.wait) return end();\n    return exports;\n  }\n\n  // Write to the source code buffer without beginning the parse.\n  exports.write = write;\n\n  function write(_input) {\n    input += String(_input);\n    length = input.length;\n    return exports;\n  }\n\n  // Send an EOF and begin parsing.\n  exports.end = end;\n\n  function end(_input) {\n    if ('undefined' !== typeof _input) write(_input);\n\n    // Ignore shebangs.\n    if (input && input.substr(0, 2) === '#!') input = input.replace(/^.*/, function (line) {\n      return line.replace(/./g, ' ');\n    });\n\n    length = input.length;\n    trackLocations = options.locations || options.ranges;\n    // Initialize with a lookahead token.\n    lookahead = lex();\n\n    var chunk = parseChunk();\n    if (options.comments) chunk.comments = comments;\n    if (options.scope) chunk.globals = globals;\n\n    if (locations.length > 0)\n      throw new Error('Location tracking failed. This is most likely a bug in luaparse');\n\n    return chunk;\n  }\n\n}));\n/* vim: set sw=2 ts=2 et tw=79 : */\n","export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=style&index=0&id=40ba69ee&prod&lang=less&\""],"sourceRoot":""}