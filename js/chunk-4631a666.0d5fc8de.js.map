{"version":3,"sources":["webpack:///./node_modules/@jx3box/jx3box-facedat/src/fixOldData.js","webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?67b2","webpack:///./node_modules/crc-32/crc32.js","webpack:///node_modules/@jx3box/jx3box-facedat/src/Facedat.vue","webpack:///./node_modules/luaparse/luaparse.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/bus.js","webpack:///./node_modules/lua-json/index.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?3caf","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?e0f2","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue"],"names":["fixOldData","olddata","newdata","tBone","tDecal","nRoleType","misc","value","decal","forEach","name","nShowID","arr","key","item","this","b","a","autoBom","console","warn","test","type","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","factory","DO_NOT_EXPORT_CRC","CRC32","signed_crc_table","table","Array","n","Int32Array","version","T0","slice_by_16_tables","T","v","out","subarray","slice","TT","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","crc32_bstr","bstr","seed","C","L","length","charCodeAt","crc32_buf","B","crc32_str","str","buf","props","data","active","body_type","facedata","group","dict","bone_range","decal_group","clean","computed","ready","cleandata","_cleandata","decal_default","client","decalmap","output_std","output_origin","output","watch","deep","handler","methods","render","message","getDecalName","_","getDecalIcon","showDecalFree","CanUseInCreate","showDecalPrice","CoinPrice","checkdecal_prop","addKDHeader","buildData","amendVersion","amendBone","amendDecal","mounted","root","objectTypes","freeExports","nodeType","freeModule","freeGlobal","moduleExports","input","options","defaultOptions","wait","comments","scope","locations","ranges","onCreateNode","onCreateScope","onDestroyScope","EOF","StringLiteral","Keyword","Identifier","NumericLiteral","Punctuator","BooleanLiteral","NilLiteral","VarargLiteral","tokenTypes","errors","unexpected","expected","expectedToken","unfinishedString","malformedNumber","invalidVar","ast","labelStatement","label","breakStatement","gotoStatement","returnStatement","args","ifStatement","clauses","ifClause","condition","elseifClause","elseClause","whileStatement","doStatement","repeatStatement","localStatement","variables","init","assignmentStatement","callStatement","expression","functionStatement","identifier","parameters","isLocal","forNumericStatement","variable","start","end","step","forGenericStatement","iterators","chunk","literal","raw","tableKey","tableKeyString","tableValue","tableConstructorExpression","fields","binaryExpression","operator","left","right","unaryExpression","argument","memberExpression","base","indexer","indexExpression","index","callExpression","tableCallExpression","stringCallExpression","comment","finishNode","node","trackLocations","pop","complete","loc","range","token","previousToken","lookahead","tokenStart","line","lineStart","scopes","scopeDepth","globals","indexOf","Object","toString","array","element","indexOfObject","property","sprintf","format","call","arguments","match","extend","src","prop","dest","hasOwnProperty","raise","col","apply","SyntaxError","column","raiseUnexpectedToken","found","near","lex","skipWhiteSpace","scanComment","charCode","next","isIdentifierStart","scanIdentifierOrKeyword","scanStringLiteral","scanNumericLiteral","isDecDigit","scanVarargLiteral","scanPunctuator","scanLongStringLiteral","charAt","consumeEOL","peekCharCode","isLineTerminator","isWhiteSpace","isIdentifierPart","isKeyword","delimiter","stringStart","string","readEscapeSequence","String","fromCharCode","readLongString","character","readHexLiteral","readDecLiteral","digit","fractionStart","exponentStart","digitStart","fraction","binaryExponent","binarySign","isHexDigit","parseInt","Math","pow","parseFloat","sequenceStart","content","isLong","commentStart","lineStartComment","lineComment","push","level","terminator","consume","expect","id","isUnary","isCallExpression","isBlockFollow","createScope","destroyScope","scopeIdentifierName","scopeIdentifier","attachScope","scopeHasName","createLocationMarker","Marker","markLocation","pushLocation","marker","parseChunk","parseBlock","statement","block","parseStatement","parseLocalStatement","parseIfStatement","parseReturnStatement","parseFunctionName","parseFunctionDeclaration","parseWhileStatement","parseForStatement","parseRepeatStatement","parseBreakStatement","parseDoStatement","parseGotoStatement","parseLabelStatement","parseAssignmentOrCallStatement","parseIdentifier","parseExpectedExpression","expressions","parseExpression","validateVar","inParens","previous","parsePrefixExpression","exp","parameter","parsePrimaryExpression","parseTableConstructor","parseSubExpression","binaryPrecedence","minPrecedence","precedence","parseCallExpression","literals","parse","_input","_options","undefined","write","substr","Error","isNull","isBoolean","isNumber","isString","isArray","isObject","isEmpty","fromPairs","keys","map","repeat","parseLua","formatLuaString","singleQuote","formatLuaKey","eol","spaces","rec","spacesEnd","join","luaAstToJson","includes","__internal_table_key","object","field","values","_vm","_h","$createElement","_c","_self","staticClass","attrs","model","callback","$$v","_l","_v","_s","lock","$set","directives","rawName","_e","ref","on","$event","staticRenderFns","component"],"mappings":"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","file":"js/chunk-4631a666.0d5fc8de.js","sourcesContent":["// 将早期数据统一成当前格式\nfunction fixOldData(olddata) {\n    let newdata = {\n        tBone: {},\n        tDecal: {},\n        nRoleType: ~~olddata.misc[0].value,\n    };\n\n    olddata.decal.forEach((decal) => {\n        newdata.tDecal[decal.name] = {\n            nShowID : ~~decal.value\n        }\n    })\n\n    let arr = ['eye','mouth','nose','face']\n    arr.forEach((key) => {\n        olddata[key].forEach((item) => {\n            newdata.tBone[item.name] = ~~item.value\n        })\n    })\n\n    return newdata\n}\n\nexport default fixOldData;\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=style&index=0&lang=less&\"","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.1';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","<template>\n    <div class=\"c-facedat\" v-if=\"ready\">\n        <el-tabs class=\"c-facedat-preivew\" v-model=\"active\" type=\"card\">\n            <el-tab-pane label=\"眼部轮廓\" name=\"eye\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['eye']\" :key=\"key + i\">\n                            <label>{{ dict[key]['desc'] }}</label>\n                            <span>{{ facedata['tBone'][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"嘴部轮廓\" name=\"mouth\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['mouth']\" :key=\"key + i\">\n                            <label>{{ dict[key]['desc'] }}</label>\n                            <span>{{ facedata['tBone'][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"鼻子轮廓\" name=\"nose\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['nose']\" :key=\"key + i\">\n                            <label>{{ dict[key]['desc'] }}</label>\n                            <span>{{ facedata['tBone'][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"脸部轮廓\" name=\"face\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['face']\" :key=\"key + i\">\n                            <label>{{ dict[key]['desc'] }}</label>\n                            <span>{{ facedata['tBone'][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"贴花\" name=\"decal\">\n                <div class=\"m-facedat-decals\" id=\"decals\">\n                    <div class=\"c-facedat-group\" v-for=\"(key, i) in group['decal']\" :key=\"key + i\">\n                        <template v-if=\"cleandata['tDecal'][key]\">\n                            <ul class=\"u-decals\">\n                                <li v-show=\"!clean || checkdecal_prop(key)\">\n                                    <div class=\"u-title\">{{ dict[key]['desc'] }}</div>\n                                    <img\n                                        class=\"u-pic\"\n                                        :src=\"getDecalIcon(key,cleandata['tDecal'][key]['nShowID'])\"\n                                    />\n                                    <span\n                                        class=\"u-dname\"\n                                    >{{getDecalName(key,cleandata['tDecal'][key]['nShowID'])}}</span>\n                                    <span\n                                        class=\"u-dcolor\"\n                                    >(颜色:{{cleandata['tDecal'][key]['nColorID']}})</span>\n                                    <span\n                                        class=\"u-free\"\n                                        v-if=\"showDecalFree(key,cleandata['tDecal'][key]['nShowID'])\"\n                                    >\n                                        <i class=\"el-icon-success\"></i> 新建角色可用\n                                    </span>\n                                    <span\n                                        class=\"u-price\"\n                                        v-if=\"showDecalPrice(key,cleandata['tDecal'][key]['nShowID'])\"\n                                    >\n                                        <i class=\"el-icon-coin\"></i>\n                                        {{showDecalPrice(key,cleandata['tDecal'][key]['nShowID'])}} 通宝\n                                    </span>\n                                </li>\n                            </ul>\n                        </template>\n                    </div>\n                </div>\n            </el-tab-pane>\n        </el-tabs>\n        <div class=\"c-facedat-setting\">\n            <el-form\n                class=\"c-facedat-setting-form\"\n                ref=\"form\"\n                label-width=\"80px\"\n                label-position=\"left\"\n            >\n                <el-form-item label=\"高级\">\n                    <el-checkbox v-model=\"clean\">清洗模式</el-checkbox>\n                    <span class=\"u-warning\">\n                        <i class=\"el-icon-warning-outline\"></i> 仅保留创建新角色时可用项，如提示非法数据也请尝试开启该模式\n                    </span>\n                </el-form-item>\n            </el-form>\n        </div>\n        <div class=\"c-facedata-btns\">\n            <el-button\n                class=\"u-btn\"\n                type=\"primary\"\n                @click=\"buildData('std')\"\n                icon=\"el-icon-receiving\"\n            >导出正式服</el-button>\n            <el-button\n                class=\"u-btn\"\n                type=\"warning\"\n                @click=\"buildData('origin')\"\n                icon=\"el-icon-receiving\"\n            >导出怀旧服</el-button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport _ from \"lodash\";\nimport {\n    __ossMirror,\n    __iconPath,\n    __ossRoot,\n    // __dataPath,\n} from \"@jx3box/jx3box-common/data/jx3box.json\";\nimport fixOldData from \"./fixOldData.js\";\n\nimport group from \"../assets/data/group.json\";\nimport dict from \"../assets/data/dict.json\";\nimport decal_group from \"../assets/data/decal_group.json\";\nimport decal_origin from \"../assets/data/decal_origin.json\";\nimport decal_std from \"../assets/data/decal_std.json\";\nimport decal_prop from \"../assets/data/decal_prop.json\";\nimport bone_range from \"../assets/data/bone_range.json\";\nimport bone_default from \"../assets/data/bone_default.json\";\nimport decal_default from \"../assets/data/decal_default.json\";\nimport versions from \"../assets/data/version.json\";\n\nimport Bus from \"./bus.js\";\nimport { format } from \"lua-json\";\nimport { saveAs } from \"file-saver\";\nimport { bstr as calcCrc32 } from \"crc-32\";\n\nexport default {\n    name: \"Facedat\",\n    props: [\"data\", \"lock\"],\n    data: function () {\n        return {\n            active: \"eye\",\n\n            // 数据\n            body_type: \"\",\n            facedata: \"\",\n\n            // 骨骼\n            group,\n            dict,\n            bone_range,\n\n            // 妆容\n            decal_group,\n\n            // 导出设置\n            clean: false,\n            version: \"std\",\n\n            // test\n            // data : JSON.stringify(olddata)\n        };\n    },\n    computed: {\n        ready: function () {\n            return !!(this.facedata && this.decalmap);\n        },\n        cleandata: function () {\n            if (this.clean && this.facedata) {\n                let _cleandata = _.cloneDeep(this.facedata);\n                for (let key in _cleandata.tDecal) {\n                    let CanUseInCreate = this.showDecalFree(\n                        key,\n                        _cleandata?.tDecal[key][\"nShowID\"]\n                    );\n                    if (!CanUseInCreate) {\n                        _cleandata.tDecal[key][\"nShowID\"] =\n                            decal_default[key][\"nShowID\"];\n                    }\n                }\n                return _cleandata;\n            } else {\n                return this.facedata;\n            }\n        },\n        // 自动检测数据版本\n        client: function () {\n            let _nMajorVersion = this.facedata?.nMajorVersion;\n            if (_nMajorVersion == 1 || !_nMajorVersion) {\n                return \"std\";\n            } else {\n                return \"origin\";\n            }\n        },\n        decalmap: function () {\n            if (this.client == \"std\" || !this.client) {\n                return decal_std;\n            } else {\n                return decal_origin;\n            }\n        },\n        output_std: function () {\n            // 1.默认需要修订版本号与客户端版本\n            let data = this.amendVersion(\"std\");\n            // 2.补全骨骼缺失数据\n            data.tBone = this.amendBone(data.tBone);\n            // 3.补全完整数据结构\n            // 如果没有开启清洗也需要对数据结构进行补充，以防上传的是古老的数据（缺失部分后加的属性）\n            // 同时部分古老数据即使存在该属性，但部分2级属性也是缺失的\n            // data.tDecal = this.amendDecal(data.tDecal)\n\n            // 废弃：如果开启了清洗直接回档整体默认贴花部分\n            // 正式服数据包含全部属性（shadow1~4），且有额外属性值（fValue1~3）\n            // 直接取一个demo数据，以防上传的是怀旧服数据缺失部分属性\n            if (this.clean) {\n                data.tDecal = _.cloneDeep(decal_default);\n            }\n\n            // 废弃：如果是清洗模式，还需要仅保留新建角色时存在的属性（移除shadow1~4等）\n            // if (this.clean){\n            //     for(let key in data.tDecal){\n            //         if (!decal_group.origin.includes(key)) {\n            //             delete data.tDecal[key];\n            //         }\n            //     }\n            // }\n            return data;\n        },\n        output_origin: function () {\n            // 1.默认需要修订版本号与客户端版本\n            let data = this.amendVersion(\"origin\");\n            // 2.补全骨骼缺失数据\n            data.tBone = this.amendBone(data.tBone);\n\n            // 3.贴花数据全部复位（怀旧服商城暂未上线）\n            for (let key in data.tDecal) {\n                if (decal_group.origin.includes(key)) {\n                    // 3.2重置color和show_id\n                    data.tDecal[key][\"nColorID\"] =\n                        decal_default[key][\"nColorID\"];\n                    data.tDecal[key][\"nShowID\"] = decal_default[key][\"nShowID\"];\n                    // 3.3移除正式服特有属性（fValue1~3）\n                    for (let prop in data.tDecal[key]) {\n                        if (!decal_prop.origin.includes(prop)) {\n                            delete data.tDecal[key][prop];\n                        }\n                    }\n                    // 3.1首先移除正式服特有的部分属性（shadow1~4）\n                } else {\n                    delete data.tDecal[key];\n                }\n            }\n            return data;\n        },\n        output: function () {\n            let table = {};\n            let data =\n                this.version == \"origin\" ? this.output_origin : this.output_std;\n            try {\n                table = format(data);\n            } catch (e) {\n                console.log(\"导出转换失败\");\n                console.log(e);\n            }\n            return table;\n        },\n    },\n    watch: {\n        data: {\n            deep: true,\n            handler: function (newdata) {\n                this.render();\n            },\n        },\n        cleandata: {\n            deep: true,\n            handler: function () {\n                this.$forceUpdate();\n            },\n        },\n    },\n    methods: {\n        // 数据构建\n        render: function () {\n            // 是否为空\n            if (!this.data) {\n                return \"\";\n            }\n\n            // json 转为 object\n            try {\n                let facedata = JSON.parse(this.data);\n                // 旧版数据\n                if (facedata.status) {\n                    this.body_type = facedata.misc[0][\"value\"];\n                    this.facedata = fixOldData(facedata);\n                } else {\n                    this.body_type = facedata.nRoleType;\n                    this.facedata = facedata;\n                }\n            } catch (e) {\n                this.facedata = \"\";\n                console.log(e);\n                this.$notify.error({\n                    title: \"错误\",\n                    message: \"脸型数据无法解析\",\n                });\n            }\n        },\n\n        // 贴花\n        getDecalName: function (key, val) {\n            return (\n                _.get(\n                    this.decalmap[this.body_type][dict[key][\"type\"]][val],\n                    \"name\"\n                ) || \"无\"\n            );\n        },\n        getDecalIcon: function (key, val) {\n            let iconid = _.get(\n                this.decalmap[this.body_type][dict[key][\"type\"]][val],\n                \"iconid\"\n            );\n            if (iconid) {\n                return __iconPath + \"icon/\" + iconid + \".png\";\n            } else {\n                return __iconPath + \"icon/\" + \"undefined\" + \".png\";\n            }\n        },\n        showDecalFree: function (key, val) {\n            return ~~this.decalmap?.[this.body_type]?.[dict[key]?.type]?.[val]\n                ?.CanUseInCreate;\n        },\n        showDecalPrice: function (key, val) {\n            return ~~this.decalmap?.[this.body_type]?.[dict[key]?.type]?.[val]\n                ?.CoinPrice;\n        },\n        checkdecal_prop: function (key) {\n            return decal_group.origin.includes(key);\n        },\n\n        addKDHeader: function(payload) {\n            let length = payload.length;\n            let crc32 = calcCrc32(payload) >>> 0;   // Convert to unsigned\n            let output = Buffer.alloc(length + 16);\n            output.write(\"CNDK\", 0);\n            output.writeUInt32LE(crc32, 4);\n            output.writeUInt32LE(length, 8);\n            output.writeUInt32LE(length, 12);\n            output.write(payload, 16);\n            return output;\n        },\n\n        // 按钮\n        buildData: function (v) {\n            this.version = v;\n            let outputWithHeader = this.addKDHeader(this.output);\n            let blob = new Blob([outputWithHeader], {\n                type: \"application/dat;charset=utf-8\",\n            });\n            saveAs(blob, Date.now() + \".dat\");\n        },\n\n        // 数据修正\n        amendVersion: function (v) {\n            let data = _.cloneDeep(this.cleandata);\n            data.nDecorationID = 0;\n            data.nMajorVersion = versions[v][\"nMajorVersion\"];\n            data.nVersion = versions[v][\"nVersion\"];\n            return data;\n        },\n        amendBone: function (data) {\n            let _bone = _.cloneDeep(bone_default);\n            let _fixbone = Object.assign(_bone, data);\n            return _fixbone;\n        },\n        amendDecal: function (data) {\n            let _decal = _.cloneDeep(decal_default);\n            for (let key in decal_default) {\n                // 不存在补全属性\n                if (!data[key]) {\n                    data[key] = _.cloneDeep(decal_default[key]);\n                    // 存在则补全子属性\n                } else {\n                    data[key] = Object.assign(decal_default[key], data[key]);\n                }\n            }\n            return data;\n        },\n    },\n    mounted: function () {\n        this.render();\n    },\n};\n</script>\n\n<style lang=\"less\">\n@import \"../assets/css/facedat.less\";\n</style>\n","/* global exports:true, module:true, require:true, define:true, global:true */\n\n(function (root, name, factory) {\n  /* jshint eqeqeq:false */\n  'use strict';\n\n  // Used to determine if values are of the language type `Object`\n  var objectTypes = {\n        'function': true\n      , 'object': true\n    }\n    // Detect free variable `exports`\n    , freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports\n    // Detect free variable `module`\n    , freeModule = objectTypes[typeof module] && module && !module.nodeType && module\n    // Detect free variable `global`, from Node.js or Browserified code, and\n    // use it as `window`\n    , freeGlobal = freeExports && freeModule && typeof global == 'object' && global\n    // Detect the popular CommonJS extension `module.exports`\n    , moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Some AMD build optimizers, like r.js, check for specific condition\n  // patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // defined as an anonymous module.\n    define(['exports'], factory);\n    // In case the source has been processed and wrapped in a define module use\n    // the supplied `exports` object.\n    if (freeExports && moduleExports) factory(freeModule.exports);\n  }\n  // check for `exports` after `define` in case a build optimizer adds an\n  // `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS v0.8.0+\n    if (moduleExports) factory(freeModule.exports);\n    // in Narwhal or RingoJS v0.7.0-\n    else factory(freeExports);\n  }\n  // in a browser or Rhino\n  else {\n    factory((root[name] = {}));\n  }\n}(this, 'luaparse', function (exports) {\n  'use strict';\n\n  exports.version = '0.2.1';\n\n  var input, options, length;\n\n  // Options can be set either globally on the parser object through\n  // defaultOptions, or during the parse call.\n  var defaultOptions = exports.defaultOptions = {\n    // Explicitly tell the parser when the input ends.\n      wait: false\n    // Store comments as an array in the chunk object.\n    , comments: true\n    // Track identifier scopes by adding an isLocal attribute to each\n    // identifier-node.\n    , scope: false\n    // Store location information on each syntax node as\n    // `loc: { start: { line, column }, end: { line, column } }`.\n    , locations: false\n    // Store the start and end character locations on each syntax node as\n    // `range: [start, end]`.\n    , ranges: false\n    // A callback which will be invoked when a syntax node has been completed.\n    // The node which has been created will be passed as the only parameter.\n    , onCreateNode: null\n    // A callback which will be invoked when a new scope is created.\n    , onCreateScope: null\n    // A callback which will be invoked when the current scope is destroyed.\n    , onDestroyScope: null\n  };\n\n  // The available tokens expressed as enum flags so they can be checked with\n  // bitwise operations.\n\n  var EOF = 1, StringLiteral = 2, Keyword = 4, Identifier = 8\n    , NumericLiteral = 16, Punctuator = 32, BooleanLiteral = 64\n    , NilLiteral = 128, VarargLiteral = 256;\n\n  exports.tokenTypes = { EOF: EOF, StringLiteral: StringLiteral\n    , Keyword: Keyword, Identifier: Identifier, NumericLiteral: NumericLiteral\n    , Punctuator: Punctuator, BooleanLiteral: BooleanLiteral\n    , NilLiteral: NilLiteral, VarargLiteral: VarargLiteral\n  };\n\n  // As this parser is a bit different from luas own, the error messages\n  // will be different in some situations.\n\n  var errors = exports.errors = {\n      unexpected: 'unexpected %1 \\'%2\\' near \\'%3\\''\n    , expected: '\\'%1\\' expected near \\'%2\\''\n    , expectedToken: '%1 expected near \\'%2\\''\n    , unfinishedString: 'unfinished string near \\'%1\\''\n    , malformedNumber: 'malformed number near \\'%1\\''\n    , invalidVar: 'invalid left-hand side of assignment near \\'%1\\''\n  };\n\n  // ### Abstract Syntax Tree\n  //\n  // The default AST structure is inspired by the Mozilla Parser API but can\n  // easily be customized by overriding these functions.\n\n  var ast = exports.ast = {\n      labelStatement: function(label) {\n      return {\n          type: 'LabelStatement'\n        , label: label\n      };\n    }\n\n    , breakStatement: function() {\n      return {\n          type: 'BreakStatement'\n      };\n    }\n\n    , gotoStatement: function(label) {\n      return {\n          type: 'GotoStatement'\n        , label: label\n      };\n    }\n\n    , returnStatement: function(args) {\n      return {\n          type: 'ReturnStatement'\n        , 'arguments': args\n      };\n    }\n\n    , ifStatement: function(clauses) {\n      return {\n          type: 'IfStatement'\n        , clauses: clauses\n      };\n    }\n    , ifClause: function(condition, body) {\n      return {\n          type: 'IfClause'\n        , condition: condition\n        , body: body\n      };\n    }\n    , elseifClause: function(condition, body) {\n      return {\n          type: 'ElseifClause'\n        , condition: condition\n        , body: body\n      };\n    }\n    , elseClause: function(body) {\n      return {\n          type: 'ElseClause'\n        , body: body\n      };\n    }\n\n    , whileStatement: function(condition, body) {\n      return {\n          type: 'WhileStatement'\n        , condition: condition\n        , body: body\n      };\n    }\n\n    , doStatement: function(body) {\n      return {\n          type: 'DoStatement'\n        , body: body\n      };\n    }\n\n    , repeatStatement: function(condition, body) {\n      return {\n          type: 'RepeatStatement'\n        , condition: condition\n        , body: body\n      };\n    }\n\n    , localStatement: function(variables, init) {\n      return {\n          type: 'LocalStatement'\n        , variables: variables\n        , init: init\n      };\n    }\n\n    , assignmentStatement: function(variables, init) {\n      return {\n          type: 'AssignmentStatement'\n        , variables: variables\n        , init: init\n      };\n    }\n\n    , callStatement: function(expression) {\n      return {\n          type: 'CallStatement'\n        , expression: expression\n      };\n    }\n\n    , functionStatement: function(identifier, parameters, isLocal, body) {\n      return {\n          type: 'FunctionDeclaration'\n        , identifier: identifier\n        , isLocal: isLocal\n        , parameters: parameters\n        , body: body\n      };\n    }\n\n    , forNumericStatement: function(variable, start, end, step, body) {\n      return {\n          type: 'ForNumericStatement'\n        , variable: variable\n        , start: start\n        , end: end\n        , step: step\n        , body: body\n      };\n    }\n\n    , forGenericStatement: function(variables, iterators, body) {\n      return {\n          type: 'ForGenericStatement'\n        , variables: variables\n        , iterators: iterators\n        , body: body\n      };\n    }\n\n    , chunk: function(body) {\n      return {\n          type: 'Chunk'\n        , body: body\n      };\n    }\n\n    , identifier: function(name) {\n      return {\n          type: 'Identifier'\n        , name: name\n      };\n    }\n\n    , literal: function(type, value, raw) {\n      type = (type === StringLiteral) ? 'StringLiteral'\n        : (type === NumericLiteral) ? 'NumericLiteral'\n        : (type === BooleanLiteral) ? 'BooleanLiteral'\n        : (type === NilLiteral) ? 'NilLiteral'\n        : 'VarargLiteral';\n\n      return {\n          type: type\n        , value: value\n        , raw: raw\n      };\n    }\n\n    , tableKey: function(key, value) {\n      return {\n          type: 'TableKey'\n        , key: key\n        , value: value\n      };\n    }\n    , tableKeyString: function(key, value) {\n      return {\n          type: 'TableKeyString'\n        , key: key\n        , value: value\n      };\n    }\n    , tableValue: function(value) {\n      return {\n          type: 'TableValue'\n        , value: value\n      };\n    }\n\n\n    , tableConstructorExpression: function(fields) {\n      return {\n          type: 'TableConstructorExpression'\n        , fields: fields\n      };\n    }\n    , binaryExpression: function(operator, left, right) {\n      var type = ('and' === operator || 'or' === operator) ?\n        'LogicalExpression' :\n        'BinaryExpression';\n\n      return {\n          type: type\n        , operator: operator\n        , left: left\n        , right: right\n      };\n    }\n    , unaryExpression: function(operator, argument) {\n      return {\n          type: 'UnaryExpression'\n        , operator: operator\n        , argument: argument\n      };\n    }\n    , memberExpression: function(base, indexer, identifier) {\n      return {\n          type: 'MemberExpression'\n        , indexer: indexer\n        , identifier: identifier\n        , base: base\n      };\n    }\n\n    , indexExpression: function(base, index) {\n      return {\n          type: 'IndexExpression'\n        , base: base\n        , index: index\n      };\n    }\n\n    , callExpression: function(base, args) {\n      return {\n          type: 'CallExpression'\n        , base: base\n        , 'arguments': args\n      };\n    }\n\n    , tableCallExpression: function(base, args) {\n      return {\n          type: 'TableCallExpression'\n        , base: base\n        , 'arguments': args\n      };\n    }\n\n    , stringCallExpression: function(base, argument) {\n      return {\n          type: 'StringCallExpression'\n        , base: base\n        , argument: argument\n      };\n    }\n\n    , comment: function(value, raw) {\n      return {\n          type: 'Comment'\n        , value: value\n        , raw: raw\n      };\n    }\n  };\n\n  // Wrap up the node object.\n\n  function finishNode(node) {\n    // Pop a `Marker` off the location-array and attach its location data.\n    if (trackLocations) {\n      var location = locations.pop();\n      location.complete();\n      if (options.locations) node.loc = location.loc;\n      if (options.ranges) node.range = location.range;\n    }\n    if (options.onCreateNode) options.onCreateNode(node);\n    return node;\n  }\n\n\n  // Helpers\n  // -------\n\n  var slice = Array.prototype.slice\n    , toString = Object.prototype.toString\n    , indexOf = function indexOf(array, element) {\n      for (var i = 0, length = array.length; i < length; i++) {\n        if (array[i] === element) return i;\n      }\n      return -1;\n    };\n\n  // Iterate through an array of objects and return the index of an object\n  // with a matching property.\n\n  function indexOfObject(array, property, element) {\n    for (var i = 0, length = array.length; i < length; i++) {\n      if (array[i][property] === element) return i;\n    }\n    return -1;\n  }\n\n  // A sprintf implementation using %index (beginning at 1) to input\n  // arguments in the format string.\n  //\n  // Example:\n  //\n  //     // Unexpected function in token\n  //     sprintf('Unexpected %2 in %1.', 'token', 'function');\n\n  function sprintf(format) {\n    var args = slice.call(arguments, 1);\n    format = format.replace(/%(\\d)/g, function (match, index) {\n      return '' + args[index - 1] || '';\n    });\n    return format;\n  }\n\n  // Returns a new object with the properties from all objectes passed as\n  // arguments. Last argument takes precedence.\n  //\n  // Example:\n  //\n  //     this.options = extend(options, { output: false });\n\n  function extend() {\n    var args = slice.call(arguments)\n      , dest = {}\n      , src, prop;\n\n    for (var i = 0, length = args.length; i < length; i++) {\n      src = args[i];\n      for (prop in src) if (src.hasOwnProperty(prop)) {\n        dest[prop] = src[prop];\n      }\n    }\n    return dest;\n  }\n\n  // ### Error functions\n\n  // #### Raise an exception.\n  //\n  // Raise an exception by passing a token, a string format and its paramters.\n  //\n  // The passed tokens location will automatically be added to the error\n  // message if it exists, if not it will default to the lexers current\n  // position.\n  //\n  // Example:\n  //\n  //     // [1:0] expected [ near (\n  //     raise(token, \"expected %1 near %2\", '[', token.value);\n\n  function raise(token) {\n    var message = sprintf.apply(null, slice.call(arguments, 1))\n      , error, col;\n\n    if ('undefined' !== typeof token.line) {\n      col = token.range[0] - token.lineStart;\n      error = new SyntaxError(sprintf('[%1:%2] %3', token.line, col, message));\n      error.line = token.line;\n      error.index = token.range[0];\n      error.column = col;\n    } else {\n      col = index - lineStart + 1;\n      error = new SyntaxError(sprintf('[%1:%2] %3', line, col, message));\n      error.index = index;\n      error.line = line;\n      error.column = col;\n    }\n    throw error;\n  }\n\n  // #### Raise an unexpected token error.\n  //\n  // Example:\n  //\n  //     // expected <name> near '0'\n  //     raiseUnexpectedToken('<name>', token);\n\n  function raiseUnexpectedToken(type, token) {\n    raise(token, errors.expectedToken, type, token.value);\n  }\n\n  // #### Raise a general unexpected error\n  //\n  // Usage should pass either a token object or a symbol string which was\n  // expected. We can also specify a nearby token such as <eof>, this will\n  // default to the currently active token.\n  //\n  // Example:\n  //\n  //     // Unexpected symbol 'end' near '<eof>'\n  //     unexpected(token);\n  //\n  // If there's no token in the buffer it means we have reached <eof>.\n\n  function unexpected(found, near) {\n    if ('undefined' === typeof near) near = lookahead.value;\n    if ('undefined' !== typeof found.type) {\n      var type;\n      switch (found.type) {\n        case StringLiteral:   type = 'string';      break;\n        case Keyword:         type = 'keyword';     break;\n        case Identifier:      type = 'identifier';  break;\n        case NumericLiteral:  type = 'number';      break;\n        case Punctuator:      type = 'symbol';      break;\n        case BooleanLiteral:  type = 'boolean';     break;\n        case NilLiteral:\n          return raise(found, errors.unexpected, 'symbol', 'nil', near);\n      }\n      return raise(found, errors.unexpected, type, found.value, near);\n    }\n    return raise(found, errors.unexpected, 'symbol', found, near);\n  }\n\n  // Lexer\n  // -----\n  //\n  // The lexer, or the tokenizer reads the input string character by character\n  // and derives a token left-right. To be as efficient as possible the lexer\n  // prioritizes the common cases such as identifiers. It also works with\n  // character codes instead of characters as string comparisons was the\n  // biggest bottleneck of the parser.\n  //\n  // If `options.comments` is enabled, all comments encountered will be stored\n  // in an array which later will be appended to the chunk object. If disabled,\n  // they will simply be disregarded.\n  //\n  // When the lexer has derived a valid token, it will be returned as an object\n  // containing its value and as well as its position in the input string (this\n  // is always enabled to provide proper debug messages).\n  //\n  // `lex()` starts lexing and returns the following token in the stream.\n\n  var index\n    , token\n    , previousToken\n    , lookahead\n    , comments\n    , tokenStart\n    , line\n    , lineStart;\n\n  exports.lex = lex;\n\n  function lex() {\n    skipWhiteSpace();\n\n    // Skip comments beginning with --\n    while (45 === input.charCodeAt(index) &&\n           45 === input.charCodeAt(index + 1)) {\n      scanComment();\n      skipWhiteSpace();\n    }\n    if (index >= length) return {\n        type : EOF\n      , value: '<eof>'\n      , line: line\n      , lineStart: lineStart\n      , range: [index, index]\n    };\n\n    var charCode = input.charCodeAt(index)\n      , next = input.charCodeAt(index + 1);\n\n    // Memorize the range index where the token begins.\n    tokenStart = index;\n    if (isIdentifierStart(charCode)) return scanIdentifierOrKeyword();\n\n    switch (charCode) {\n      case 39: case 34: // '\"\n        return scanStringLiteral();\n\n      // 0-9\n      case 48: case 49: case 50: case 51: case 52: case 53:\n      case 54: case 55: case 56: case 57:\n        return scanNumericLiteral();\n\n      case 46: // .\n        // If the dot is followed by a digit it's a float.\n        if (isDecDigit(next)) return scanNumericLiteral();\n        if (46 === next) {\n          if (46 === input.charCodeAt(index + 2)) return scanVarargLiteral();\n          return scanPunctuator('..');\n        }\n        return scanPunctuator('.');\n\n      case 61: // =\n        if (61 === next) return scanPunctuator('==');\n        return scanPunctuator('=');\n\n      case 62: // >\n        if (61 === next) return scanPunctuator('>=');\n        if (62 === next) return scanPunctuator('>>');\n        return scanPunctuator('>');\n\n      case 60: // <\n        if (60 === next) return scanPunctuator('<<');\n        if (61 === next) return scanPunctuator('<=');\n        return scanPunctuator('<');\n\n      case 126: // ~\n        if (61 === next) return scanPunctuator('~=');\n        return scanPunctuator('~');\n\n      case 58: // :\n        if (58 === next) return scanPunctuator('::');\n        return scanPunctuator(':');\n\n      case 91: // [\n        // Check for a multiline string, they begin with [= or [[\n        if (91 === next || 61 === next) return scanLongStringLiteral();\n        return scanPunctuator('[');\n\n      case 47: // /\n        // Check for integer division op (//)\n        if (47 === next) return scanPunctuator('//');\n        return scanPunctuator('/');\n\n      // * ^ % , { } ] ( ) ; & # - + |\n      case 42: case 94: case 37: case 44: case 123: case 124: case 125:\n      case 93: case 40: case 41: case 59: case 38: case 35: case 45: case 43:\n        return scanPunctuator(input.charAt(index));\n    }\n\n    return unexpected(input.charAt(index));\n  }\n\n  // Whitespace has no semantic meaning in lua so simply skip ahead while\n  // tracking the encounted newlines. Any kind of eol sequence is counted as a\n  // single line.\n\n  function consumeEOL() {\n    var charCode = input.charCodeAt(index)\n      , peekCharCode = input.charCodeAt(index + 1);\n\n    if (isLineTerminator(charCode)) {\n      // Count \\n\\r and \\r\\n as one newline.\n      if (10 === charCode && 13 === peekCharCode) index++;\n      if (13 === charCode && 10 === peekCharCode) index++;\n      line++;\n      lineStart = ++index;\n\n      return true;\n    }\n    return false;\n  }\n\n  function skipWhiteSpace() {\n    while (index < length) {\n      var charCode = input.charCodeAt(index);\n      if (isWhiteSpace(charCode)) {\n        index++;\n      } else if (!consumeEOL()) {\n        break;\n      }\n    }\n  }\n\n  // Identifiers, keywords, booleans and nil all look the same syntax wise. We\n  // simply go through them one by one and defaulting to an identifier if no\n  // previous case matched.\n\n  function scanIdentifierOrKeyword() {\n    var value, type;\n\n    // Slicing the input string is prefered before string concatenation in a\n    // loop for performance reasons.\n    while (isIdentifierPart(input.charCodeAt(++index)));\n    value = input.slice(tokenStart, index);\n\n    // Decide on the token type and possibly cast the value.\n    if (isKeyword(value)) {\n      type = Keyword;\n    } else if ('true' === value || 'false' === value) {\n      type = BooleanLiteral;\n      value = ('true' === value);\n    } else if ('nil' === value) {\n      type = NilLiteral;\n      value = null;\n    } else {\n      type = Identifier;\n    }\n\n    return {\n        type: type\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Once a punctuator reaches this function it should already have been\n  // validated so we simply return it as a token.\n\n  function scanPunctuator(value) {\n    index += value.length;\n    return {\n        type: Punctuator\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // A vararg literal consists of three dots.\n\n  function scanVarargLiteral() {\n    index += 3;\n    return {\n        type: VarargLiteral\n      , value: '...'\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Find the string literal by matching the delimiter marks used.\n\n  function scanStringLiteral() {\n    var delimiter = input.charCodeAt(index++)\n      , stringStart = index\n      , string = ''\n      , charCode;\n\n    while (index < length) {\n      charCode = input.charCodeAt(index++);\n      if (delimiter === charCode) break;\n      if (92 === charCode) { // \\\n        string += input.slice(stringStart, index - 1) + readEscapeSequence();\n        stringStart = index;\n      }\n      // EOF or `\\n` terminates a string literal. If we haven't found the\n      // ending delimiter by now, raise an exception.\n      else if (index >= length || isLineTerminator(charCode)) {\n        string += input.slice(stringStart, index - 1);\n        raise({}, errors.unfinishedString, string + String.fromCharCode(charCode));\n      }\n    }\n    string += input.slice(stringStart, index - 1);\n\n    return {\n        type: StringLiteral\n      , value: string\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Expect a multiline string literal and return it as a regular string\n  // literal, if it doesn't validate into a valid multiline string, throw an\n  // exception.\n\n  function scanLongStringLiteral() {\n    var string = readLongString();\n    // Fail if it's not a multiline literal.\n    if (false === string) raise(token, errors.expected, '[', token.value);\n\n    return {\n        type: StringLiteral\n      , value: string\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Numeric literals will be returned as floating-point numbers instead of\n  // strings. The raw value should be retrieved from slicing the input string\n  // later on in the process.\n  //\n  // If a hexadecimal number is encountered, it will be converted.\n\n  function scanNumericLiteral() {\n    var character = input.charAt(index)\n      , next = input.charAt(index + 1);\n\n    var value = ('0' === character && 'xX'.indexOf(next || null) >= 0) ?\n      readHexLiteral() : readDecLiteral();\n\n    return {\n        type: NumericLiteral\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Lua hexadecimals have an optional fraction part and an optional binary\n  // exoponent part. These are not included in JavaScript so we will compute\n  // all three parts separately and then sum them up at the end of the function\n  // with the following algorithm.\n  //\n  //     Digit := toDec(digit)\n  //     Fraction := toDec(fraction) / 16 ^ fractionCount\n  //     BinaryExp := 2 ^ binaryExp\n  //     Number := ( Digit + Fraction ) * BinaryExp\n\n  function readHexLiteral() {\n    var fraction = 0 // defaults to 0 as it gets summed\n      , binaryExponent = 1 // defaults to 1 as it gets multiplied\n      , binarySign = 1 // positive\n      , digit, fractionStart, exponentStart, digitStart;\n\n    digitStart = index += 2; // Skip 0x part\n\n    // A minimum of one hex digit is required.\n    if (!isHexDigit(input.charCodeAt(index)))\n      raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n    while (isHexDigit(input.charCodeAt(index))) index++;\n    // Convert the hexadecimal digit to base 10.\n    digit = parseInt(input.slice(digitStart, index), 16);\n\n    // Fraction part i optional.\n    if ('.' === input.charAt(index)) {\n      fractionStart = ++index;\n\n      while (isHexDigit(input.charCodeAt(index))) index++;\n      fraction = input.slice(fractionStart, index);\n\n      // Empty fraction parts should default to 0, others should be converted\n      // 0.x form so we can use summation at the end.\n      fraction = (fractionStart === index) ? 0\n        : parseInt(fraction, 16) / Math.pow(16, index - fractionStart);\n    }\n\n    // Binary exponents are optional\n    if ('pP'.indexOf(input.charAt(index) || null) >= 0) {\n      index++;\n\n      // Sign part is optional and defaults to 1 (positive).\n      if ('+-'.indexOf(input.charAt(index) || null) >= 0)\n        binarySign = ('+' === input.charAt(index++)) ? 1 : -1;\n\n      exponentStart = index;\n\n      // The binary exponent sign requires a decimal digit.\n      if (!isDecDigit(input.charCodeAt(index)))\n        raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n      while (isDecDigit(input.charCodeAt(index))) index++;\n      binaryExponent = input.slice(exponentStart, index);\n\n      // Calculate the binary exponent of the number.\n      binaryExponent = Math.pow(2, binaryExponent * binarySign);\n    }\n\n    return (digit + fraction) * binaryExponent;\n  }\n\n  // Decimal numbers are exactly the same in Lua and in JavaScript, because of\n  // this we check where the token ends and then parse it with native\n  // functions.\n\n  function readDecLiteral() {\n    while (isDecDigit(input.charCodeAt(index))) index++;\n    // Fraction part is optional\n    if ('.' === input.charAt(index)) {\n      index++;\n      // Fraction part defaults to 0\n      while (isDecDigit(input.charCodeAt(index))) index++;\n    }\n    // Exponent part is optional.\n    if ('eE'.indexOf(input.charAt(index) || null) >= 0) {\n      index++;\n      // Sign part is optional.\n      if ('+-'.indexOf(input.charAt(index) || null) >= 0) index++;\n      // An exponent is required to contain at least one decimal digit.\n      if (!isDecDigit(input.charCodeAt(index)))\n        raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n      while (isDecDigit(input.charCodeAt(index))) index++;\n    }\n\n    return parseFloat(input.slice(tokenStart, index));\n  }\n\n\n  // Translate escape sequences to the actual characters.\n\n  function readEscapeSequence() {\n    var sequenceStart = index;\n    switch (input.charAt(index)) {\n      // Lua allow the following escape sequences.\n      // We don't escape the bell sequence.\n      case 'n': index++; return '\\n';\n      case 'r': index++; return '\\r';\n      case 't': index++; return '\\t';\n      case 'v': index++; return '\\x0B';\n      case 'b': index++; return '\\b';\n      case 'f': index++; return '\\f';\n      // Skips the following span of white-space.\n      case 'z': index++; skipWhiteSpace(); return '';\n      // Byte representation should for now be returned as is.\n      case 'x':\n        // \\xXX, where XX is a sequence of exactly two hexadecimal digits\n        if (isHexDigit(input.charCodeAt(index + 1)) &&\n            isHexDigit(input.charCodeAt(index + 2))) {\n          index += 3;\n          // Return it as is, without translating the byte.\n          return '\\\\' + input.slice(sequenceStart, index);\n        }\n        return '\\\\' + input.charAt(index++);\n      default:\n        // \\ddd, where ddd is a sequence of up to three decimal digits.\n        if (isDecDigit(input.charCodeAt(index))) {\n          while (isDecDigit(input.charCodeAt(++index)));\n          return '\\\\' + input.slice(sequenceStart, index);\n        }\n        // Simply return the \\ as is, it's not escaping any sequence.\n        return input.charAt(index++);\n    }\n  }\n\n  // Comments begin with -- after which it will be decided if they are\n  // multiline comments or not.\n  //\n  // The multiline functionality works the exact same way as with string\n  // literals so we reuse the functionality.\n\n  function scanComment() {\n    tokenStart = index;\n    index += 2; // --\n\n    var character = input.charAt(index)\n      , content = ''\n      , isLong = false\n      , commentStart = index\n      , lineStartComment = lineStart\n      , lineComment = line;\n\n    if ('[' === character) {\n      content = readLongString();\n      // This wasn't a multiline comment after all.\n      if (false === content) content = character;\n      else isLong = true;\n    }\n    // Scan until next line as long as it's not a multiline comment.\n    if (!isLong) {\n      while (index < length) {\n        if (isLineTerminator(input.charCodeAt(index))) break;\n        index++;\n      }\n      if (options.comments) content = input.slice(commentStart, index);\n    }\n\n    if (options.comments) {\n      var node = ast.comment(content, input.slice(tokenStart, index));\n\n      // `Marker`s depend on tokens available in the parser and as comments are\n      // intercepted in the lexer all location data is set manually.\n      if (options.locations) {\n        node.loc = {\n            start: { line: lineComment, column: tokenStart - lineStartComment }\n          , end: { line: line, column: index - lineStart }\n        };\n      }\n      if (options.ranges) {\n        node.range = [tokenStart, index];\n      }\n      if (options.onCreateNode) options.onCreateNode(node);\n      comments.push(node);\n    }\n  }\n\n  // Read a multiline string by calculating the depth of `=` characters and\n  // then appending until an equal depth is found.\n\n  function readLongString() {\n    var level = 0\n      , content = ''\n      , terminator = false\n      , character, stringStart;\n\n    index++; // [\n\n    // Calculate the depth of the comment.\n    while ('=' === input.charAt(index + level)) level++;\n    // Exit, this is not a long string afterall.\n    if ('[' !== input.charAt(index + level)) return false;\n\n    index += level + 1;\n\n    // If the first character is a newline, ignore it and begin on next line.\n    if (isLineTerminator(input.charCodeAt(index))) consumeEOL();\n\n    stringStart = index;\n    while (index < length) {\n      // To keep track of line numbers run the `consumeEOL()` which increments\n      // its counter.\n      if (isLineTerminator(input.charCodeAt(index))) consumeEOL();\n\n      character = input.charAt(index++);\n\n      // Once the delimiter is found, iterate through the depth count and see\n      // if it matches.\n      if (']' === character) {\n        terminator = true;\n        for (var i = 0; i < level; i++) {\n          if ('=' !== input.charAt(index + i)) terminator = false;\n        }\n        if (']' !== input.charAt(index + level)) terminator = false;\n      }\n\n      // We reached the end of the multiline string. Get out now.\n      if (terminator) break;\n    }\n    content += input.slice(stringStart, index - 1);\n    index += level + 1;\n\n    return content;\n  }\n\n  // ## Lex functions and helpers.\n\n  // Read the next token.\n  //\n  // This is actually done by setting the current token to the lookahead and\n  // reading in the new lookahead token.\n\n  function next() {\n    previousToken = token;\n    token = lookahead;\n    lookahead = lex();\n  }\n\n  // Consume a token if its value matches. Once consumed or not, return the\n  // success of the operation.\n\n  function consume(value) {\n    if (value === token.value) {\n      next();\n      return true;\n    }\n    return false;\n  }\n\n  // Expect the next token value to match. If not, throw an exception.\n\n  function expect(value) {\n    if (value === token.value) next();\n    else raise(token, errors.expected, value, token.value);\n  }\n\n  // ### Validation functions\n\n  function isWhiteSpace(charCode) {\n    return 9 === charCode || 32 === charCode || 0xB === charCode || 0xC === charCode;\n  }\n\n  function isLineTerminator(charCode) {\n    return 10 === charCode || 13 === charCode;\n  }\n\n  function isDecDigit(charCode) {\n    return charCode >= 48 && charCode <= 57;\n  }\n\n  function isHexDigit(charCode) {\n    return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) || (charCode >= 65 && charCode <= 70);\n  }\n\n  // From [Lua 5.2](http://www.lua.org/manual/5.2/manual.html#8.1) onwards\n  // identifiers cannot use locale-dependet letters.\n\n  function isIdentifierStart(charCode) {\n    return (charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || 95 === charCode;\n  }\n\n  function isIdentifierPart(charCode) {\n    return (charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || 95 === charCode || (charCode >= 48 && charCode <= 57);\n  }\n\n  // [3.1 Lexical Conventions](http://www.lua.org/manual/5.2/manual.html#3.1)\n  //\n  // `true`, `false` and `nil` will not be considered keywords, but literals.\n\n  function isKeyword(id) {\n    switch (id.length) {\n      case 2:\n        return 'do' === id || 'if' === id || 'in' === id || 'or' === id;\n      case 3:\n        return 'and' === id || 'end' === id || 'for' === id || 'not' === id;\n      case 4:\n        return 'else' === id || 'goto' === id || 'then' === id;\n      case 5:\n        return 'break' === id || 'local' === id || 'until' === id || 'while' === id;\n      case 6:\n        return 'elseif' === id || 'repeat' === id || 'return' === id;\n      case 8:\n        return 'function' === id;\n    }\n    return false;\n  }\n\n  function isUnary(token) {\n    if (Punctuator === token.type) return '#-~'.indexOf(token.value) >= 0;\n    if (Keyword === token.type) return 'not' === token.value;\n    return false;\n  }\n\n  // @TODO this needs to be rethought.\n  function isCallExpression(expression) {\n    switch (expression.type) {\n      case 'CallExpression':\n      case 'TableCallExpression':\n      case 'StringCallExpression':\n        return true;\n    }\n    return false;\n  }\n\n  // Check if the token syntactically closes a block.\n\n  function isBlockFollow(token) {\n    if (EOF === token.type) return true;\n    if (Keyword !== token.type) return false;\n    switch (token.value) {\n      case 'else': case 'elseif':\n      case 'end': case 'until':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Scope\n  // -----\n\n  // Store each block scope as a an array of identifier names. Each scope is\n  // stored in an FILO-array.\n  var scopes\n    // The current scope index\n    , scopeDepth\n    // A list of all global identifier nodes.\n    , globals;\n\n  // Create a new scope inheriting all declarations from the previous scope.\n  function createScope() {\n    var scope = Array.apply(null, scopes[scopeDepth++]);\n    scopes.push(scope);\n    if (options.onCreateScope) options.onCreateScope();\n  }\n\n  // Exit and remove the current scope.\n  function destroyScope() {\n    var scope = scopes.pop();\n    scopeDepth--;\n    if (options.onDestroyScope) options.onDestroyScope();\n  }\n\n  // Add identifier name to the current scope if it doesnt already exist.\n  function scopeIdentifierName(name) {\n    if (-1 !== indexOf(scopes[scopeDepth], name)) return;\n    scopes[scopeDepth].push(name);\n  }\n\n  // Add identifier to the current scope\n  function scopeIdentifier(node) {\n    scopeIdentifierName(node.name);\n    attachScope(node, true);\n  }\n\n  // Attach scope information to node. If the node is global, store it in the\n  // globals array so we can return the information to the user.\n  function attachScope(node, isLocal) {\n    if (!isLocal && -1 === indexOfObject(globals, 'name', node.name))\n      globals.push(node);\n\n    node.isLocal = isLocal;\n  }\n\n  // Is the identifier name available in this scope.\n  function scopeHasName(name) {\n    return (-1 !== indexOf(scopes[scopeDepth], name));\n  }\n\n  // Location tracking\n  // -----------------\n  //\n  // Locations are stored in FILO-array as a `Marker` object consisting of both\n  // `loc` and `range` data. Once a `Marker` is popped off the list an end\n  // location is added and the data is attached to a syntax node.\n\n  var locations = []\n    , trackLocations;\n\n  function createLocationMarker() {\n    return new Marker(token);\n  }\n\n  function Marker(token) {\n    if (options.locations) {\n      this.loc = {\n          start: {\n            line: token.line\n          , column: token.range[0] - token.lineStart\n        }\n        , end: {\n            line: 0\n          , column: 0\n        }\n      };\n    }\n    if (options.ranges) this.range = [token.range[0], 0];\n  }\n\n  // Complete the location data stored in the `Marker` by adding the location\n  // of the *previous token* as an end location.\n  Marker.prototype.complete = function() {\n    if (options.locations) {\n      this.loc.end.line = previousToken.line;\n      this.loc.end.column = previousToken.range[1] - previousToken.lineStart;\n    }\n    if (options.ranges) {\n      this.range[1] = previousToken.range[1];\n    }\n  };\n\n  // Create a new `Marker` and add it to the FILO-array.\n  function markLocation() {\n    if (trackLocations) locations.push(createLocationMarker());\n  }\n\n  // Push an arbitrary `Marker` object onto the FILO-array.\n  function pushLocation(marker) {\n    if (trackLocations) locations.push(marker);\n  }\n\n  // Parse functions\n  // ---------------\n\n  // Chunk is the main program object. Syntactically it's the same as a block.\n  //\n  //     chunk ::= block\n\n  function parseChunk() {\n    next();\n    markLocation();\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    if (EOF !== token.type) unexpected(token);\n    // If the body is empty no previousToken exists when finishNode runs.\n    if (trackLocations && !body.length) previousToken = token;\n    return finishNode(ast.chunk(body));\n  }\n\n  // A block contains a list of statements with an optional return statement\n  // as its last statement.\n  //\n  //     block ::= {stat} [retstat]\n\n  function parseBlock(terminator) {\n    var block = []\n      , statement;\n\n    while (!isBlockFollow(token)) {\n      // Return has to be the last statement in a block.\n      if ('return' === token.value) {\n        block.push(parseStatement());\n        break;\n      }\n      statement = parseStatement();\n      // Statements are only added if they are returned, this allows us to\n      // ignore some statements, such as EmptyStatement.\n      if (statement) block.push(statement);\n    }\n\n    // Doesn't really need an ast node\n    return block;\n  }\n\n  // There are two types of statements, simple and compound.\n  //\n  //     statement ::= break | goto | do | while | repeat | return\n  //          | if | for | function | local | label | assignment\n  //          | functioncall | ';'\n\n  function parseStatement() {\n    markLocation();\n    if (Keyword === token.type) {\n      switch (token.value) {\n        case 'local':    next(); return parseLocalStatement();\n        case 'if':       next(); return parseIfStatement();\n        case 'return':   next(); return parseReturnStatement();\n        case 'function': next();\n          var name = parseFunctionName();\n          return parseFunctionDeclaration(name);\n        case 'while':    next(); return parseWhileStatement();\n        case 'for':      next(); return parseForStatement();\n        case 'repeat':   next(); return parseRepeatStatement();\n        case 'break':    next(); return parseBreakStatement();\n        case 'do':       next(); return parseDoStatement();\n        case 'goto':     next(); return parseGotoStatement();\n      }\n    }\n\n    if (Punctuator === token.type) {\n      if (consume('::')) return parseLabelStatement();\n    }\n    // Assignments memorizes the location and pushes it manually for wrapper\n    // nodes. Additionally empty `;` statements should not mark a location.\n    if (trackLocations) locations.pop();\n\n    // When a `;` is encounted, simply eat it without storing it.\n    if (consume(';')) return;\n\n    return parseAssignmentOrCallStatement();\n  }\n\n  // ## Statements\n\n  //     label ::= '::' Name '::'\n\n  function parseLabelStatement() {\n    var name = token.value\n      , label = parseIdentifier();\n\n    if (options.scope) {\n      scopeIdentifierName('::' + name + '::');\n      attachScope(label, true);\n    }\n\n    expect('::');\n    return finishNode(ast.labelStatement(label));\n  }\n\n  //     break ::= 'break'\n\n  function parseBreakStatement() {\n    return finishNode(ast.breakStatement());\n  }\n\n  //     goto ::= 'goto' Name\n\n  function parseGotoStatement() {\n    var name = token.value\n      , label = parseIdentifier();\n\n    return finishNode(ast.gotoStatement(label));\n  }\n\n  //     do ::= 'do' block 'end'\n\n  function parseDoStatement() {\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    expect('end');\n    return finishNode(ast.doStatement(body));\n  }\n\n  //     while ::= 'while' exp 'do' block 'end'\n\n  function parseWhileStatement() {\n    var condition = parseExpectedExpression();\n    expect('do');\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    expect('end');\n    return finishNode(ast.whileStatement(condition, body));\n  }\n\n  //     repeat ::= 'repeat' block 'until' exp\n\n  function parseRepeatStatement() {\n    if (options.scope) createScope();\n    var body = parseBlock();\n    expect('until');\n    var condition = parseExpectedExpression();\n    if (options.scope) destroyScope();\n    return finishNode(ast.repeatStatement(condition, body));\n  }\n\n  //     retstat ::= 'return' [exp {',' exp}] [';']\n\n  function parseReturnStatement() {\n    var expressions = [];\n\n    if ('end' !== token.value) {\n      var expression = parseExpression();\n      if (null != expression) expressions.push(expression);\n      while (consume(',')) {\n        expression = parseExpectedExpression();\n        expressions.push(expression);\n      }\n      consume(';'); // grammar tells us ; is optional here.\n    }\n    return finishNode(ast.returnStatement(expressions));\n  }\n\n  //     if ::= 'if' exp 'then' block {elif} ['else' block] 'end'\n  //     elif ::= 'elseif' exp 'then' block\n\n  function parseIfStatement() {\n    var clauses = []\n      , condition\n      , body\n      , marker;\n\n    // IfClauses begin at the same location as the parent IfStatement.\n    // It ends at the start of `end`, `else`, or `elseif`.\n    if (trackLocations) {\n      marker = locations[locations.length - 1];\n      locations.push(marker);\n    }\n    condition = parseExpectedExpression();\n    expect('then');\n    if (options.scope) createScope();\n    body = parseBlock();\n    if (options.scope) destroyScope();\n    clauses.push(finishNode(ast.ifClause(condition, body)));\n\n    if (trackLocations) marker = createLocationMarker();\n    while (consume('elseif')) {\n      pushLocation(marker);\n      condition = parseExpectedExpression();\n      expect('then');\n      if (options.scope) createScope();\n      body = parseBlock();\n      if (options.scope) destroyScope();\n      clauses.push(finishNode(ast.elseifClause(condition, body)));\n      if (trackLocations) marker = createLocationMarker();\n    }\n\n    if (consume('else')) {\n      // Include the `else` in the location of ElseClause.\n      if (trackLocations) {\n        marker = new Marker(previousToken);\n        locations.push(marker);\n      }\n      if (options.scope) createScope();\n      body = parseBlock();\n      if (options.scope) destroyScope();\n      clauses.push(finishNode(ast.elseClause(body)));\n    }\n\n    expect('end');\n    return finishNode(ast.ifStatement(clauses));\n  }\n\n  // There are two types of for statements, generic and numeric.\n  //\n  //     for ::= Name '=' exp ',' exp [',' exp] 'do' block 'end'\n  //     for ::= namelist 'in' explist 'do' block 'end'\n  //     namelist ::= Name {',' Name}\n  //     explist ::= exp {',' exp}\n\n  function parseForStatement() {\n    var variable = parseIdentifier()\n      , body;\n\n    // The start-identifier is local.\n\n    if (options.scope) {\n      createScope();\n      scopeIdentifier(variable);\n    }\n\n    // If the first expression is followed by a `=` punctuator, this is a\n    // Numeric For Statement.\n    if (consume('=')) {\n      // Start expression\n      var start = parseExpectedExpression();\n      expect(',');\n      // End expression\n      var end = parseExpectedExpression();\n      // Optional step expression\n      var step = consume(',') ? parseExpectedExpression() : null;\n\n      expect('do');\n      body = parseBlock();\n      expect('end');\n      if (options.scope) destroyScope();\n\n      return finishNode(ast.forNumericStatement(variable, start, end, step, body));\n    }\n    // If not, it's a Generic For Statement\n    else {\n      // The namelist can contain one or more identifiers.\n      var variables = [variable];\n      while (consume(',')) {\n        variable = parseIdentifier();\n        // Each variable in the namelist is locally scoped.\n        if (options.scope) scopeIdentifier(variable);\n        variables.push(variable);\n      }\n      expect('in');\n      var iterators = [];\n\n      // One or more expressions in the explist.\n      do {\n        var expression = parseExpectedExpression();\n        iterators.push(expression);\n      } while (consume(','));\n\n      expect('do');\n      body = parseBlock();\n      expect('end');\n      if (options.scope) destroyScope();\n\n      return finishNode(ast.forGenericStatement(variables, iterators, body));\n    }\n  }\n\n  // Local statements can either be variable assignments or function\n  // definitions. If a function definition is found, it will be delegated to\n  // `parseFunctionDeclaration()` with the isLocal flag.\n  //\n  // This AST structure might change into a local assignment with a function\n  // child.\n  //\n  //     local ::= 'local' 'function' Name funcdecl\n  //        | 'local' Name {',' Name} ['=' exp {',' exp}]\n\n  function parseLocalStatement() {\n    var name;\n\n    if (Identifier === token.type) {\n      var variables = []\n        , init = [];\n\n      do {\n        name = parseIdentifier();\n\n        variables.push(name);\n      } while (consume(','));\n\n      if (consume('=')) {\n        do {\n          var expression = parseExpectedExpression();\n          init.push(expression);\n        } while (consume(','));\n      }\n\n      // Declarations doesn't exist before the statement has been evaluated.\n      // Therefore assignments can't use their declarator. And the identifiers\n      // shouldn't be added to the scope until the statement is complete.\n      if (options.scope) {\n        for (var i = 0, l = variables.length; i < l; i++) {\n          scopeIdentifier(variables[i]);\n        }\n      }\n\n      return finishNode(ast.localStatement(variables, init));\n    }\n    if (consume('function')) {\n      name = parseIdentifier();\n\n      if (options.scope) {\n        scopeIdentifier(name);\n        createScope();\n      }\n\n      // MemberExpressions are not allowed in local function statements.\n      return parseFunctionDeclaration(name, true);\n    } else {\n      raiseUnexpectedToken('<name>', token);\n    }\n  }\n\n  function validateVar(node) {\n    // @TODO we need something not dependent on the exact AST used. see also isCallExpression()\n    if (node.inParens || (['Identifier', 'MemberExpression', 'IndexExpression'].indexOf(node.type) === -1)) {\n      raise(token, errors.invalidVar, token.value);\n    }\n  }\n\n  //     assignment ::= varlist '=' explist\n  //     var ::= Name | prefixexp '[' exp ']' | prefixexp '.' Name\n  //     varlist ::= var {',' var}\n  //     explist ::= exp {',' exp}\n  //\n  //     call ::= callexp\n  //     callexp ::= prefixexp args | prefixexp ':' Name args\n\n  function parseAssignmentOrCallStatement() {\n    // Keep a reference to the previous token for better error messages in case\n    // of invalid statement\n    var previous = token\n      , expression, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n    expression = parsePrefixExpression();\n\n    if (null == expression) return unexpected(token);\n    if (',='.indexOf(token.value) >= 0) {\n      var variables = [expression]\n        , init = []\n        , exp;\n\n      validateVar(expression);\n      while (consume(',')) {\n        exp = parsePrefixExpression();\n        if (null == exp) raiseUnexpectedToken('<expression>', token);\n        validateVar(exp);\n        variables.push(exp);\n      }\n      expect('=');\n      do {\n        exp = parseExpectedExpression();\n        init.push(exp);\n      } while (consume(','));\n\n      pushLocation(marker);\n      return finishNode(ast.assignmentStatement(variables, init));\n    }\n    if (isCallExpression(expression)) {\n      pushLocation(marker);\n      return finishNode(ast.callStatement(expression));\n    }\n    // The prefix expression was neither part of an assignment or a\n    // callstatement, however as it was valid it's been consumed, so raise\n    // the exception on the previous token to provide a helpful message.\n    return unexpected(previous);\n  }\n\n\n\n  // ### Non-statements\n\n  //     Identifier ::= Name\n\n  function parseIdentifier() {\n    markLocation();\n    var identifier = token.value;\n    if (Identifier !== token.type) raiseUnexpectedToken('<name>', token);\n    next();\n    return finishNode(ast.identifier(identifier));\n  }\n\n  // Parse the functions parameters and body block. The name should already\n  // have been parsed and passed to this declaration function. By separating\n  // this we allow for anonymous functions in expressions.\n  //\n  // For local functions there's a boolean parameter which needs to be set\n  // when parsing the declaration.\n  //\n  //     funcdecl ::= '(' [parlist] ')' block 'end'\n  //     parlist ::= Name {',' Name} | [',' '...'] | '...'\n\n  function parseFunctionDeclaration(name, isLocal) {\n    var parameters = [];\n    expect('(');\n\n    // The declaration has arguments\n    if (!consume(')')) {\n      // Arguments are a comma separated list of identifiers, optionally ending\n      // with a vararg.\n      while (true) {\n        if (Identifier === token.type) {\n          var parameter = parseIdentifier();\n          // Function parameters are local.\n          if (options.scope) scopeIdentifier(parameter);\n\n          parameters.push(parameter);\n\n          if (consume(',')) continue;\n          else if (consume(')')) break;\n        }\n        // No arguments are allowed after a vararg.\n        else if (VarargLiteral === token.type) {\n          parameters.push(parsePrimaryExpression());\n          expect(')');\n          break;\n        } else {\n          raiseUnexpectedToken('<name> or \\'...\\'', token);\n        }\n      }\n    }\n\n    var body = parseBlock();\n    expect('end');\n    if (options.scope) destroyScope();\n\n    isLocal = isLocal || false;\n    return finishNode(ast.functionStatement(name, parameters, isLocal, body));\n  }\n\n  // Parse the function name as identifiers and member expressions.\n  //\n  //     Name {'.' Name} [':' Name]\n\n  function parseFunctionName() {\n    var base, name, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n    base = parseIdentifier();\n\n    if (options.scope) {\n      attachScope(base, scopeHasName(base.name));\n      createScope();\n    }\n\n    while (consume('.')) {\n      pushLocation(marker);\n      name = parseIdentifier();\n      base = finishNode(ast.memberExpression(base, '.', name));\n    }\n\n    if (consume(':')) {\n      pushLocation(marker);\n      name = parseIdentifier();\n      base = finishNode(ast.memberExpression(base, ':', name));\n      if (options.scope) scopeIdentifierName('self');\n    }\n\n    return base;\n  }\n\n  //     tableconstructor ::= '{' [fieldlist] '}'\n  //     fieldlist ::= field {fieldsep field} fieldsep\n  //     field ::= '[' exp ']' '=' exp | Name = 'exp' | exp\n  //\n  //     fieldsep ::= ',' | ';'\n\n  function parseTableConstructor() {\n    var fields = []\n      , key, value;\n\n    while (true) {\n      markLocation();\n      if (Punctuator === token.type && consume('[')) {\n        key = parseExpectedExpression();\n        expect(']');\n        expect('=');\n        value = parseExpectedExpression();\n        fields.push(finishNode(ast.tableKey(key, value)));\n      } else if (Identifier === token.type) {\n        if ('=' === lookahead.value) {\n          key = parseIdentifier();\n          next();\n          value = parseExpectedExpression();\n          fields.push(finishNode(ast.tableKeyString(key, value)));\n        } else {\n          value = parseExpectedExpression();\n          fields.push(finishNode(ast.tableValue(value)));\n        }\n      } else {\n        if (null == (value = parseExpression())) {\n          locations.pop();\n          break;\n        }\n        fields.push(finishNode(ast.tableValue(value)));\n      }\n      if (',;'.indexOf(token.value) >= 0) {\n        next();\n        continue;\n      }\n      break;\n    }\n    expect('}');\n    return finishNode(ast.tableConstructorExpression(fields));\n  }\n\n  // Expression parser\n  // -----------------\n  //\n  // Expressions are evaluated and always return a value. If nothing is\n  // matched null will be returned.\n  //\n  //     exp ::= (unop exp | primary | prefixexp ) { binop exp }\n  //\n  //     primary ::= nil | false | true | Number | String | '...'\n  //          | functiondef | tableconstructor\n  //\n  //     prefixexp ::= (Name | '(' exp ')' ) { '[' exp ']'\n  //          | '.' Name | ':' Name args | args }\n  //\n\n  function parseExpression() {\n    var expression = parseSubExpression(0);\n    return expression;\n  }\n\n  // Parse an expression expecting it to be valid.\n\n  function parseExpectedExpression() {\n    var expression = parseExpression();\n    if (null == expression) raiseUnexpectedToken('<expression>', token);\n    else return expression;\n  }\n\n\n  // Return the precedence priority of the operator.\n  //\n  // As unary `-` can't be distinguished from binary `-`, unary precedence\n  // isn't described in this table but in `parseSubExpression()` itself.\n  //\n  // As this function gets hit on every expression it's been optimized due to\n  // the expensive CompareICStub which took ~8% of the parse time.\n\n  function binaryPrecedence(operator) {\n    var charCode = operator.charCodeAt(0)\n      , length = operator.length;\n\n    if (1 === length) {\n      switch (charCode) {\n        case 94: return 12; // ^\n        case 42: case 47: case 37: return 10; // * / %\n        case 43: case 45: return 9; // + -\n        case 38: return 6; // &\n        case 126: return 5; // ~\n        case 124: return 4; // |\n        case 60: case 62: return 3; // < >\n      }\n    } else if (2 === length) {\n      switch (charCode) {\n        case 47: return 10; // //\n        case 46: return 8; // ..\n        case 60: case 62:\n            if('<<' === operator || '>>' === operator) return 7; // << >>\n            return 3; // <= >=\n        case 61: case 126: return 3; // == ~=\n        case 111: return 1; // or\n      }\n    } else if (97 === charCode && 'and' === operator) return 2;\n    return 0;\n  }\n\n  // Implement an operator-precedence parser to handle binary operator\n  // precedence.\n  //\n  // We use this algorithm because it's compact, it's fast and Lua core uses\n  // the same so we can be sure our expressions are parsed in the same manner\n  // without excessive amounts of tests.\n  //\n  //     exp ::= (unop exp | primary | prefixexp ) { binop exp }\n\n  function parseSubExpression(minPrecedence) {\n    var operator = token.value\n    // The left-hand side in binary operations.\n      , expression, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    // UnaryExpression\n    if (isUnary(token)) {\n      markLocation();\n      next();\n      var argument = parseSubExpression(10);\n      if (argument == null) raiseUnexpectedToken('<expression>', token);\n      expression = finishNode(ast.unaryExpression(operator, argument));\n    }\n    if (null == expression) {\n      // PrimaryExpression\n      expression = parsePrimaryExpression();\n\n      // PrefixExpression\n      if (null == expression) {\n        expression = parsePrefixExpression();\n      }\n    }\n    // This is not a valid left hand expression.\n    if (null == expression) return null;\n\n    var precedence;\n    while (true) {\n      operator = token.value;\n\n      precedence = (Punctuator === token.type || Keyword === token.type) ?\n        binaryPrecedence(operator) : 0;\n\n      if (precedence === 0 || precedence <= minPrecedence) break;\n      // Right-hand precedence operators\n      if ('^' === operator || '..' === operator) precedence--;\n      next();\n      var right = parseSubExpression(precedence);\n      if (null == right) raiseUnexpectedToken('<expression>', token);\n      // Push in the marker created before the loop to wrap its entirety.\n      if (trackLocations) locations.push(marker);\n      expression = finishNode(ast.binaryExpression(operator, expression, right));\n\n    }\n    return expression;\n  }\n\n  //     prefixexp ::= prefix {suffix}\n  //     prefix ::= Name | '(' exp ')'\n  //     suffix ::= '[' exp ']' | '.' Name | ':' Name args | args\n  //\n  //     args ::= '(' [explist] ')' | tableconstructor | String\n\n  function parsePrefixExpression() {\n    var base, name, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    // The prefix\n    if (Identifier === token.type) {\n      name = token.value;\n      base = parseIdentifier();\n      // Set the parent scope.\n      if (options.scope) attachScope(base, scopeHasName(name));\n    } else if (consume('(')) {\n      base = parseExpectedExpression();\n      expect(')');\n      base.inParens = true; // XXX: quick and dirty. needed for validateVar\n    } else {\n      return null;\n    }\n\n    // The suffix\n    var expression, identifier;\n    while (true) {\n      if (Punctuator === token.type) {\n        switch (token.value) {\n          case '[':\n            pushLocation(marker);\n            next();\n            expression = parseExpectedExpression();\n            base = finishNode(ast.indexExpression(base, expression));\n            expect(']');\n            break;\n          case '.':\n            pushLocation(marker);\n            next();\n            identifier = parseIdentifier();\n            base = finishNode(ast.memberExpression(base, '.', identifier));\n            break;\n          case ':':\n            pushLocation(marker);\n            next();\n            identifier = parseIdentifier();\n            base = finishNode(ast.memberExpression(base, ':', identifier));\n            // Once a : is found, this has to be a CallExpression, otherwise\n            // throw an error.\n            pushLocation(marker);\n            base = parseCallExpression(base);\n            break;\n          case '(': case '{': // args\n            pushLocation(marker);\n            base = parseCallExpression(base);\n            break;\n          default:\n            return base;\n        }\n      } else if (StringLiteral === token.type) {\n        pushLocation(marker);\n        base = parseCallExpression(base);\n      } else {\n        break;\n      }\n    }\n\n    return base;\n  }\n\n  //     args ::= '(' [explist] ')' | tableconstructor | String\n\n  function parseCallExpression(base) {\n    if (Punctuator === token.type) {\n      switch (token.value) {\n        case '(':\n          next();\n\n          // List of expressions\n          var expressions = [];\n          var expression = parseExpression();\n          if (null != expression) expressions.push(expression);\n          while (consume(',')) {\n            expression = parseExpectedExpression();\n            expressions.push(expression);\n          }\n\n          expect(')');\n          return finishNode(ast.callExpression(base, expressions));\n\n        case '{':\n          markLocation();\n          next();\n          var table = parseTableConstructor();\n          return finishNode(ast.tableCallExpression(base, table));\n      }\n    } else if (StringLiteral === token.type) {\n      return finishNode(ast.stringCallExpression(base, parsePrimaryExpression()));\n    }\n\n    raiseUnexpectedToken('function arguments', token);\n  }\n\n  //     primary ::= String | Numeric | nil | true | false\n  //          | functiondef | tableconstructor | '...'\n\n  function parsePrimaryExpression() {\n    var literals = StringLiteral | NumericLiteral | BooleanLiteral | NilLiteral | VarargLiteral\n      , value = token.value\n      , type = token.type\n      , marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    if (type & literals) {\n      pushLocation(marker);\n      var raw = input.slice(token.range[0], token.range[1]);\n      next();\n      return finishNode(ast.literal(type, value, raw));\n    } else if (Keyword === type && 'function' === value) {\n      pushLocation(marker);\n      next();\n      if (options.scope) createScope();\n      return parseFunctionDeclaration(null);\n    } else if (consume('{')) {\n      pushLocation(marker);\n      return parseTableConstructor();\n    }\n  }\n\n  // Parser\n  // ------\n\n  // Export the main parser.\n  //\n  //   - `wait` Hold parsing until end() is called. Defaults to false\n  //   - `comments` Store comments. Defaults to true.\n  //   - `scope` Track identifier scope. Defaults to false.\n  //   - `locations` Store location information. Defaults to false.\n  //   - `ranges` Store the start and end character locations. Defaults to\n  //     false.\n  //   - `onCreateNode` Callback which will be invoked when a syntax node is\n  //     created.\n  //   - `onCreateScope` Callback which will be invoked when a new scope is\n  //     created.\n  //   - `onDestroyScope` Callback which will be invoked when the current scope\n  //     is destroyed.\n  //\n  // Example:\n  //\n  //     var parser = require('luaparser');\n  //     parser.parse('i = 0');\n\n  exports.parse = parse;\n\n  function parse(_input, _options) {\n    if ('undefined' === typeof _options && 'object' === typeof _input) {\n      _options = _input;\n      _input = undefined;\n    }\n    if (!_options) _options = {};\n\n    input = _input || '';\n    options = extend(defaultOptions, _options);\n\n    // Rewind the lexer\n    index = 0;\n    line = 1;\n    lineStart = 0;\n    length = input.length;\n    // When tracking identifier scope, initialize with an empty scope.\n    scopes = [[]];\n    scopeDepth = 0;\n    globals = [];\n    locations = [];\n\n    if (options.comments) comments = [];\n    if (!options.wait) return end();\n    return exports;\n  }\n\n  // Write to the source code buffer without beginning the parse.\n  exports.write = write;\n\n  function write(_input) {\n    input += String(_input);\n    length = input.length;\n    return exports;\n  }\n\n  // Send an EOF and begin parsing.\n  exports.end = end;\n\n  function end(_input) {\n    if ('undefined' !== typeof _input) write(_input);\n\n    // Ignore shebangs.\n    if (input && input.substr(0, 2) === '#!') input = input.replace(/^.*/, function (line) {\n      return line.replace(/./g, ' ');\n    });\n\n    length = input.length;\n    trackLocations = options.locations || options.ranges;\n    // Initialize with a lookahead token.\n    lookahead = lex();\n\n    var chunk = parseChunk();\n    if (options.comments) chunk.comments = comments;\n    if (options.scope) chunk.globals = globals;\n\n    if (locations.length > 0)\n      throw new Error('Location tracking failed. This is most likely a bug in luaparse');\n\n    return chunk;\n  }\n\n}));\n/* vim: set sw=2 ts=2 et tw=79 : */\n","import Vue from \"vue\";\nconst Bus = new Vue({});\nexport default Bus;\n\n// Use like\n// Bus.$emit(事件名,数据);\n// Bus.$on(事件名,data => {});\n","const { isNull, isBoolean, isNumber, isString, isArray, isObject, isEmpty, fromPairs, keys, map, repeat } = require('lodash')\nconst { parse: parseLua } = require('luaparse')\n\nconst formatLuaString = (string, singleQuote) => (singleQuote ? `'${string.replace(/'/g, \"\\\\'\")}'` : `\"${string.replace(/\"/g, '\\\\\"')}\"`)\n\nconst formatLuaKey = (string, singleQuote) => (string.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/) ? string : `[${formatLuaString(string, singleQuote)}]`)\n\nconst format = (value, options = { eol: '\\n', singleQuote: true, spaces: 2 }) => {\n  options = options || {}\n  const eol = (options.eol = isString(options.eol) ? options.eol : '\\n')\n  options.singleQuote = isBoolean(options.singleQuote) ? options.singleQuote : true\n  options.spaces = isNull(options.spaces) || isNumber(options.spaces) || isString(options.spaces) ? options.spaces : 2\n\n  const rec = (value, i = 0) => {\n    if (isNull(value)) {\n      return 'nil'\n    }\n    if (isBoolean(value) || isNumber(value)) {\n      return value.toString()\n    }\n    if (isString(value)) {\n      return formatLuaString(value, options.singleQuote)\n    }\n    if (isArray(value)) {\n      if (isEmpty(value)) {\n        return '{}'\n      }\n      if (options.spaces) {\n        const spaces = isNumber(options.spaces) ? repeat(' ', options.spaces * (i + 1)) : repeat(options.spaces, i + 1)\n        const spacesEnd = isNumber(options.spaces) ? repeat(' ', options.spaces * i) : repeat(options.spaces, i)\n        return `{${eol}${value.map(e => `${spaces}${rec(e, i + 1)},`).join(eol)}${eol}${spacesEnd}}`\n      }\n      return `{${value.map(e => `${rec(e, i + 1)},`).join('')}}`\n    }\n    if (isObject(value)) {\n      if (isEmpty(value)) {\n        return '{}'\n      }\n      if (options.spaces) {\n        const spaces = isNumber(options.spaces) ? repeat(' ', options.spaces * (i + 1)) : repeat(options.spaces, i + 1)\n        const spacesEnd = isNumber(options.spaces) ? repeat(' ', options.spaces * i) : repeat(options.spaces, i)\n        return `{${eol}${keys(value)\n          .map(key => `${spaces}${formatLuaKey(key, options.singleQuote)} = ${rec(value[key], i + 1)},`)\n          .join(eol)}${eol}${spacesEnd}}`\n      }\n      return `{${keys(value)\n        .map(key => `${formatLuaKey(key, options.singleQuote)}=${rec(value[key], i + 1)},`)\n        .join('')}}`\n    }\n    throw new Error(`can't format ${typeof value}`)\n  }\n\n  return `return${options.spaces ? ' ' : ''}${rec(value)}`\n}\n\nconst luaAstToJson = ast => {\n  // literals\n  if (['NilLiteral', 'BooleanLiteral', 'NumericLiteral', 'StringLiteral'].includes(ast.type)) {\n    return ast.value\n  }\n  // basic expressions\n  if (ast.type === 'UnaryExpression' && ast.operator === '-') {\n    return -luaAstToJson(ast.argument)\n  }\n  if (ast.type === 'Identifier') {\n    return ast.name\n  }\n  // tables\n  if (['TableKey', 'TableKeyString'].includes(ast.type)) {\n    return { __internal_table_key: true, key: luaAstToJson(ast.key), value: luaAstToJson(ast.value) }\n  }\n  if (ast.type === 'TableValue') {\n    return luaAstToJson(ast.value)\n  }\n  if (ast.type === 'TableConstructorExpression') {\n    if (ast.fields[0] && ast.fields[0].key) {\n      const object = fromPairs(\n        map(ast.fields, field => {\n          const { key, value } = luaAstToJson(field)\n          return [key, value]\n        }),\n      )\n      return isEmpty(object) ? [] : object\n    }\n    return map(ast.fields, field => {\n      const value = luaAstToJson(field)\n      return value.__internal_table_key ? [value.key, value.value] : value\n    })\n  }\n  // top-level statements, only looking at the first statement, either return or local\n  // todo: filter until return or local?\n  if (ast.type === 'LocalStatement') {\n    const values = ast.init.map(luaAstToJson)\n    return values.length === 1 ? values[0] : values\n  }\n  if (ast.type === 'ReturnStatement') {\n    const values = ast.arguments.map(luaAstToJson)\n    return values.length === 1 ? values[0] : values\n  }\n  if (ast.type === 'Chunk') {\n    return luaAstToJson(ast.body[0])\n  }\n  throw new Error(`can't parse ${ast.type}`)\n}\n\nconst parse = value => luaAstToJson(parseLua(value, { comments: false }))\n\nmodule.exports = {\n  format,\n  parse,\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.ready)?_c('div',{staticClass:\"c-facedat\"},[_c('el-tabs',{staticClass:\"c-facedat-preivew\",attrs:{\"type\":\"card\"},model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},[_c('el-tab-pane',{attrs:{\"label\":\"眼部轮廓\",\"name\":\"eye\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['eye']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key]['desc']))]),_c('span',[_vm._v(_vm._s(_vm.facedata['tBone'][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"嘴部轮廓\",\"name\":\"mouth\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['mouth']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key]['desc']))]),_c('span',[_vm._v(_vm._s(_vm.facedata['tBone'][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"鼻子轮廓\",\"name\":\"nose\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['nose']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key]['desc']))]),_c('span',[_vm._v(_vm._s(_vm.facedata['tBone'][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"脸部轮廓\",\"name\":\"face\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['face']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key]['desc']))]),_c('span',[_vm._v(_vm._s(_vm.facedata['tBone'][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"贴花\",\"name\":\"decal\"}},[_c('div',{staticClass:\"m-facedat-decals\",attrs:{\"id\":\"decals\"}},_vm._l((_vm.group['decal']),function(key,i){return _c('div',{key:key + i,staticClass:\"c-facedat-group\"},[(_vm.cleandata['tDecal'][key])?[_c('ul',{staticClass:\"u-decals\"},[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.clean || _vm.checkdecal_prop(key)),expression:\"!clean || checkdecal_prop(key)\"}]},[_c('div',{staticClass:\"u-title\"},[_vm._v(_vm._s(_vm.dict[key]['desc']))]),_c('img',{staticClass:\"u-pic\",attrs:{\"src\":_vm.getDecalIcon(key,_vm.cleandata['tDecal'][key]['nShowID'])}}),_c('span',{staticClass:\"u-dname\"},[_vm._v(_vm._s(_vm.getDecalName(key,_vm.cleandata['tDecal'][key]['nShowID'])))]),_c('span',{staticClass:\"u-dcolor\"},[_vm._v(\"(颜色:\"+_vm._s(_vm.cleandata['tDecal'][key]['nColorID'])+\")\")]),(_vm.showDecalFree(key,_vm.cleandata['tDecal'][key]['nShowID']))?_c('span',{staticClass:\"u-free\"},[_c('i',{staticClass:\"el-icon-success\"}),_vm._v(\" 新建角色可用 \")]):_vm._e(),(_vm.showDecalPrice(key,_vm.cleandata['tDecal'][key]['nShowID']))?_c('span',{staticClass:\"u-price\"},[_c('i',{staticClass:\"el-icon-coin\"}),_vm._v(\" \"+_vm._s(_vm.showDecalPrice(key,_vm.cleandata['tDecal'][key]['nShowID']))+\" 通宝 \")]):_vm._e()])])]:_vm._e()],2)}),0)])],1),_c('div',{staticClass:\"c-facedat-setting\"},[_c('el-form',{ref:\"form\",staticClass:\"c-facedat-setting-form\",attrs:{\"label-width\":\"80px\",\"label-position\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"高级\"}},[_c('el-checkbox',{model:{value:(_vm.clean),callback:function ($$v) {_vm.clean=$$v},expression:\"clean\"}},[_vm._v(\"清洗模式\")]),_c('span',{staticClass:\"u-warning\"},[_c('i',{staticClass:\"el-icon-warning-outline\"}),_vm._v(\" 仅保留创建新角色时可用项，如提示非法数据也请尝试开启该模式 \")])],1)],1)],1),_c('div',{staticClass:\"c-facedata-btns\"},[_c('el-button',{staticClass:\"u-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-receiving\"},on:{\"click\":function($event){return _vm.buildData('std')}}},[_vm._v(\"导出正式服\")]),_c('el-button',{staticClass:\"u-btn\",attrs:{\"type\":\"warning\",\"icon\":\"el-icon-receiving\"},on:{\"click\":function($event){return _vm.buildData('origin')}}},[_vm._v(\"导出怀旧服\")])],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Facedat.vue?vue&type=template&id=62310f11&\"\nimport script from \"./Facedat.vue?vue&type=script&lang=js&\"\nexport * from \"./Facedat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Facedat.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}