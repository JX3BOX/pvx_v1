{"version":3,"sources":["webpack:///./node_modules/@jx3box/jx3box-facedat/src/fixOldData.js","webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?67b2","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./node_modules/core-js/internals/object-to-array.js","webpack:///./node_modules/crc-32/crc32.js","webpack:///node_modules/@jx3box/jx3box-facedat/src/Facedat.vue","webpack:///./node_modules/luaparse/luaparse.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/bus.js","webpack:///./node_modules/lua-json/index.js","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?2c61","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue?e0f2","webpack:///./node_modules/@jx3box/jx3box-facedat/src/Facedat.vue"],"names":["fixOldData","olddata","newdata","tBone","tDecal","nRoleType","misc","value","decal","forEach","name","nShowID","arr","key","item","this","b","a","autoBom","console","warn","test","type","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","$","$entries","entries","stat","O","DESCRIPTORS","uncurryThis","objectKeys","toIndexedObject","$propertyIsEnumerable","propertyIsEnumerable","push","createMethod","TO_ENTRIES","it","keys","length","values","factory","DO_NOT_EXPORT_CRC","CRC32","signed_crc_table","table","Array","n","Int32Array","version","T0","slice_by_16_tables","T","v","out","subarray","slice","TT","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","crc32_bstr","bstr","seed","C","L","charCodeAt","crc32_buf","B","crc32_str","str","buf","props","data","active","body_type","facedata","group","dict","bone_range","decal_group","clean","computed","ready","cleandata","_cleandata","client","decalmap","output_std","output_origin","output","total_coin","watch","deep","handler","methods","render","message","getDecalName","getDecalIcon","showDecalFree","showDecalPrice","checkdecal_prop","addKDHeader","buildData","amendVersion","amendBone","amendDecal","mounted","root","objectTypes","freeExports","nodeType","freeModule","freeGlobal","moduleExports","input","options","defaultOptions","wait","comments","scope","locations","ranges","onCreateNode","onCreateScope","onDestroyScope","EOF","StringLiteral","Keyword","Identifier","NumericLiteral","Punctuator","BooleanLiteral","NilLiteral","VarargLiteral","tokenTypes","errors","unexpected","expected","expectedToken","unfinishedString","malformedNumber","invalidVar","ast","labelStatement","label","breakStatement","gotoStatement","returnStatement","args","ifStatement","clauses","ifClause","condition","elseifClause","elseClause","whileStatement","doStatement","repeatStatement","localStatement","variables","init","assignmentStatement","callStatement","expression","functionStatement","identifier","parameters","isLocal","forNumericStatement","variable","start","end","step","forGenericStatement","iterators","chunk","literal","raw","tableKey","tableKeyString","tableValue","tableConstructorExpression","fields","binaryExpression","operator","left","right","unaryExpression","argument","memberExpression","base","indexer","indexExpression","index","callExpression","tableCallExpression","stringCallExpression","comment","finishNode","node","trackLocations","pop","complete","loc","range","token","previousToken","lookahead","tokenStart","line","lineStart","scopes","scopeDepth","globals","indexOf","Object","toString","array","element","indexOfObject","property","sprintf","format","call","arguments","match","extend","src","prop","dest","hasOwnProperty","raise","col","apply","SyntaxError","column","raiseUnexpectedToken","found","near","lex","skipWhiteSpace","scanComment","charCode","next","isIdentifierStart","scanIdentifierOrKeyword","scanStringLiteral","scanNumericLiteral","isDecDigit","scanVarargLiteral","scanPunctuator","scanLongStringLiteral","charAt","consumeEOL","peekCharCode","isLineTerminator","isWhiteSpace","isIdentifierPart","isKeyword","delimiter","stringStart","string","readEscapeSequence","String","fromCharCode","readLongString","character","readHexLiteral","readDecLiteral","digit","fractionStart","exponentStart","digitStart","fraction","binaryExponent","binarySign","isHexDigit","parseInt","Math","pow","parseFloat","sequenceStart","content","isLong","commentStart","lineStartComment","lineComment","level","terminator","consume","expect","id","isUnary","isCallExpression","isBlockFollow","createScope","destroyScope","scopeIdentifierName","scopeIdentifier","attachScope","scopeHasName","createLocationMarker","Marker","markLocation","pushLocation","marker","parseChunk","parseBlock","statement","block","parseStatement","parseLocalStatement","parseIfStatement","parseReturnStatement","parseFunctionName","parseFunctionDeclaration","parseWhileStatement","parseForStatement","parseRepeatStatement","parseBreakStatement","parseDoStatement","parseGotoStatement","parseLabelStatement","parseAssignmentOrCallStatement","parseIdentifier","parseExpectedExpression","expressions","parseExpression","validateVar","inParens","previous","parsePrefixExpression","exp","parameter","parsePrimaryExpression","parseTableConstructor","parseSubExpression","binaryPrecedence","minPrecedence","precedence","parseCallExpression","literals","parse","_input","_options","undefined","write","substr","Error","isNull","isBoolean","isNumber","isString","isArray","isObject","isEmpty","fromPairs","map","repeat","parseLua","formatLuaString","singleQuote","formatLuaKey","eol","spaces","rec","spacesEnd","join","luaAstToJson","includes","__internal_table_key","object","field","_vm","_h","$createElement","_c","_self","staticClass","attrs","model","callback","$$v","_l","_v","_s","lock","$set","directives","rawName","_e","ref","on","$event","staticRenderFns","component"],"mappings":"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","file":"js/chunk-a170a50e.23d9cfeb.js","sourcesContent":["// 将早期数据统一成当前格式\nfunction fixOldData(olddata) {\n    let newdata = {\n        tBone: {},\n        tDecal: {},\n        nRoleType: ~~olddata.misc[0].value,\n    };\n\n    olddata.decal.forEach((decal) => {\n        newdata.tDecal[decal.name] = {\n            nShowID : ~~decal.value\n        }\n    })\n\n    let arr = ['eye','mouth','nose','face']\n    arr.forEach((key) => {\n        olddata[key].forEach((item) => {\n            newdata.tBone[item.name] = ~~item.value\n        })\n    })\n\n    return newdata\n}\n\nexport default fixOldData;\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../style-resources-loader/lib/index.js??ref--11-oneOf-1-4!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=style&index=0&lang=less&\"","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.1';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","<template>\n    <div class=\"c-facedat\" v-if=\"ready\">\n        <el-tabs class=\"c-facedat-preivew\" v-model=\"active\" type=\"card\">\n            <el-tab-pane label=\"眼部轮廓\" name=\"eye\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['eye']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"嘴部轮廓\" name=\"mouth\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['mouth']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"鼻子轮廓\" name=\"nose\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['nose']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"脸部轮廓\" name=\"face\">\n                <div class=\"c-facedat-group\">\n                    <ul class=\"u-list\">\n                        <li v-for=\"(key, i) in group['face']\" :key=\"key + i\">\n                            <label>{{ dict[key][\"desc\"] }}</label>\n                            <span>{{ facedata[\"tBone\"][key] }}</span>\n                            <el-slider\n                                class=\"u-range\"\n                                :min=\"bone_range[body_type][dict[key]['type']]['min']\"\n                                :max=\"bone_range[body_type][dict[key]['type']]['max']\"\n                                v-model=\"facedata['tBone'][key]\"\n                                :disabled=\"lock\"\n                            ></el-slider>\n                        </li>\n                    </ul>\n                </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"贴花\" name=\"decal\">\n                <div class=\"m-facedat-decals\" id=\"decals\">\n                    <div class=\"c-facedat-group\" v-for=\"(key, i) in group['decal']\" :key=\"key + i\">\n                        <template v-if=\"cleandata['tDecal'][key]\">\n                            <ul class=\"u-decals\">\n                                <li v-show=\"!clean || checkdecal_prop(key)\">\n                                    <div class=\"u-title\">{{ dict[key][\"desc\"] }}</div>\n                                    <img class=\"u-pic\" :src=\"getDecalIcon(key, cleandata['tDecal'][key]['nShowID'])\" />\n                                    <span class=\"u-dname\">{{ getDecalName(key, cleandata[\"tDecal\"][key][\"nShowID\"]) }}</span>\n                                    <span class=\"u-dcolor\">(颜色:{{ cleandata[\"tDecal\"][key][\"nColorID\"] }})</span>\n                                    <span class=\"u-free\" v-if=\"showDecalFree(key, cleandata['tDecal'][key]['nShowID'])\"> <i class=\"el-icon-success\"></i> 新建角色可用 </span>\n                                    <span class=\"u-price\" v-if=\"showDecalPrice(key, cleandata['tDecal'][key]['nShowID'])\">\n                                        <i class=\"el-icon-coin\"></i>\n                                        {{ showDecalPrice(key, cleandata[\"tDecal\"][key][\"nShowID\"]) }} 通宝\n                                    </span>\n                                </li>\n                            </ul>\n                        </template>\n                    </div>\n                    <div class=\"c-facedat-group\">\n                        <ul class=\"u-decals\">\n                            <div class=\"u-title\">总计</div>\n                            <span class=\"u-total u-price\"><i class=\"el-icon-coin\"></i> <b>{{ total_coin }}</b> 通宝</span>\n                        </ul>\n                    </div>\n                </div>\n            </el-tab-pane>\n        </el-tabs>\n        <div class=\"c-facedat-setting\">\n            <el-form class=\"c-facedat-setting-form\" ref=\"form\" label-width=\"80px\" label-position=\"left\">\n                <el-form-item label=\"高级\">\n                    <el-checkbox v-model=\"clean\">清洗模式</el-checkbox>\n                    <span class=\"u-warning\"> <i class=\"el-icon-warning-outline\"></i> 仅保留创建新角色时可用项，如提示非法数据也请尝试开启该模式 </span>\n                </el-form-item>\n            </el-form>\n        </div>\n        <div class=\"c-facedata-btns\">\n            <el-button class=\"u-btn\" type=\"primary\" @click=\"buildData('std')\" icon=\"el-icon-receiving\">导出正式服</el-button>\n            <el-button class=\"u-btn\" type=\"warning\" @click=\"buildData('origin')\" icon=\"el-icon-receiving\">导出怀旧服</el-button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport _ from \"lodash\";\nimport {\n    __ossMirror,\n    __iconPath,\n    __ossRoot,\n    // __dataPath,\n} from \"@jx3box/jx3box-common/data/jx3box.json\";\nimport fixOldData from \"./fixOldData.js\";\n\nimport group from \"../assets/data/group.json\";\nimport dict from \"../assets/data/dict.json\";\nimport decal_group from \"../assets/data/decal_group.json\";\nimport decal_origin from \"../assets/data/decal_origin.json\";\nimport decal_std from \"../assets/data/decal_std.json\";\nimport decal_prop from \"../assets/data/decal_prop.json\";\nimport bone_range from \"../assets/data/bone_range.json\";\nimport bone_default from \"../assets/data/bone_default.json\";\nimport decal_default from \"../assets/data/decal_default.json\";\nimport versions from \"../assets/data/version.json\";\n\nimport Bus from \"./bus.js\";\nimport { format } from \"lua-json\";\nimport { saveAs } from \"file-saver\";\nimport { bstr as calcCrc32 } from \"crc-32\";\n\nexport default {\n    name: \"Facedat\",\n    props: [\"data\", \"lock\"],\n    data: function() {\n        return {\n            active: \"eye\",\n\n            // 数据\n            body_type: \"\",\n            facedata: \"\",\n\n            // 骨骼\n            group,\n            dict,\n            bone_range,\n\n            // 妆容\n            decal_group,\n\n            // 导出设置\n            clean: false,\n            version: \"std\",\n\n            // test\n            // data : JSON.stringify(olddata)\n        };\n    },\n    computed: {\n        ready: function() {\n            return !!(this.facedata && this.decalmap);\n        },\n        cleandata: function() {\n            if (this.clean && this.facedata) {\n                let _cleandata = _.cloneDeep(this.facedata);\n                for (let key in _cleandata.tDecal) {\n                    let CanUseInCreate = this.showDecalFree(key, _cleandata?.tDecal[key][\"nShowID\"]);\n                    if (!CanUseInCreate) {\n                        _cleandata.tDecal[key][\"nShowID\"] = decal_default[key][\"nShowID\"];\n                    }\n                }\n                return _cleandata;\n            } else {\n                return this.facedata;\n            }\n        },\n        // 自动检测数据版本\n        client: function() {\n            let _nMajorVersion = this.facedata?.nMajorVersion;\n            if (_nMajorVersion == 1 || !_nMajorVersion) {\n                return \"std\";\n            } else {\n                return \"origin\";\n            }\n        },\n        decalmap: function() {\n            if (this.client == \"std\" || !this.client) {\n                return decal_std;\n            } else {\n                return decal_origin;\n            }\n        },\n        output_std: function() {\n            // 1.默认需要修订版本号与客户端版本\n            let data = this.amendVersion(\"std\");\n            // 2.补全骨骼缺失数据\n            data.tBone = this.amendBone(data.tBone);\n            // 3.补全完整数据结构\n            // 如果没有开启清洗也需要对数据结构进行补充，以防上传的是古老的数据（缺失部分后加的属性）\n            // 同时部分古老数据即使存在该属性，但部分2级属性也是缺失的\n            // data.tDecal = this.amendDecal(data.tDecal)\n\n            // 废弃：如果开启了清洗直接回档整体默认贴花部分\n            // 正式服数据包含全部属性（shadow1~4），且有额外属性值（fValue1~3）\n            // 直接取一个demo数据，以防上传的是怀旧服数据缺失部分属性\n            if (this.clean) {\n                data.tDecal = _.cloneDeep(decal_default);\n            }\n\n            // 废弃：如果是清洗模式，还需要仅保留新建角色时存在的属性（移除shadow1~4等）\n            // if (this.clean){\n            //     for(let key in data.tDecal){\n            //         if (!decal_group.origin.includes(key)) {\n            //             delete data.tDecal[key];\n            //         }\n            //     }\n            // }\n            return data;\n        },\n        output_origin: function() {\n            // 1.默认需要修订版本号与客户端版本\n            let data = this.amendVersion(\"origin\");\n            // 2.补全骨骼缺失数据\n            data.tBone = this.amendBone(data.tBone);\n\n            // 3.贴花数据全部复位（怀旧服商城暂未上线）\n            for (let key in data.tDecal) {\n                if (decal_group.origin.includes(key)) {\n                    // 3.2重置color和show_id\n                    data.tDecal[key][\"nColorID\"] = decal_default[key][\"nColorID\"];\n                    data.tDecal[key][\"nShowID\"] = decal_default[key][\"nShowID\"];\n                    // 3.3移除正式服特有属性（fValue1~3）\n                    for (let prop in data.tDecal[key]) {\n                        if (!decal_prop.origin.includes(prop)) {\n                            delete data.tDecal[key][prop];\n                        }\n                    }\n                    // 3.1首先移除正式服特有的部分属性（shadow1~4）\n                } else {\n                    delete data.tDecal[key];\n                }\n            }\n            return data;\n        },\n        output: function() {\n            let table = {};\n            let data = this.version == \"origin\" ? this.output_origin : this.output_std;\n            try {\n                table = format(data);\n            } catch (e) {\n                console.log(\"导出转换失败\");\n                console.log(e);\n            }\n            return table;\n        },\n        total_coin: function() {\n            let sum = 0;\n            for (const [_, key] of Object.entries(this.group[\"decal\"])) if (this.cleandata[\"tDecal\"][key]) sum += this.showDecalPrice(key, this.cleandata[\"tDecal\"][key][\"nShowID\"]);\n            return sum;\n        },\n    },\n    watch: {\n        data: {\n            deep: true,\n            handler: function(newdata) {\n                this.render();\n            },\n        },\n        cleandata: {\n            deep: true,\n            handler: function() {\n                this.$forceUpdate();\n            },\n        },\n    },\n    methods: {\n        // 数据构建\n        render: function() {\n            // 是否为空\n            if (!this.data) {\n                return \"\";\n            }\n\n            // json 转为 object\n            try {\n                let facedata = JSON.parse(this.data);\n                // 旧版数据\n                if (facedata.status) {\n                    this.body_type = facedata.misc[0][\"value\"];\n                    this.facedata = fixOldData(facedata);\n                } else {\n                    this.body_type = facedata.nRoleType;\n                    this.facedata = facedata;\n                }\n            } catch (e) {\n                this.facedata = \"\";\n                console.log(e);\n                this.$notify.error({\n                    title: \"错误\",\n                    message: \"脸型数据无法解析\",\n                });\n            }\n        },\n\n        // 贴花\n        getDecalName: function(key, val) {\n            return _.get(this.decalmap[this.body_type][dict[key][\"type\"]][val], \"name\") || \"无\";\n        },\n        getDecalIcon: function(key, val) {\n            let iconid = _.get(this.decalmap[this.body_type][dict[key][\"type\"]][val], \"iconid\");\n            if (iconid) {\n                return __iconPath + \"icon/\" + iconid + \".png\";\n            } else {\n                return __iconPath + \"icon/\" + \"undefined\" + \".png\";\n            }\n        },\n        showDecalFree: function(key, val) {\n            return ~~this.decalmap?.[this.body_type]?.[dict[key]?.type]?.[val]?.CanUseInCreate;\n        },\n        showDecalPrice: function(key, val) {\n            return ~~this.decalmap?.[this.body_type]?.[dict[key]?.type]?.[val]?.CoinPrice;\n        },\n        checkdecal_prop: function(key) {\n            return decal_group.origin.includes(key);\n        },\n\n        addKDHeader: function(payload) {\n            let length = payload.length;\n            let crc32 = calcCrc32(payload) >>> 0; // Convert to unsigned\n            let output = Buffer.alloc(length + 16);\n            output.write(\"CNDK\", 0);\n            output.writeUInt32LE(crc32, 4);\n            output.writeUInt32LE(length, 8);\n            output.writeUInt32LE(length, 12);\n            output.write(payload, 16);\n            return output;\n        },\n\n        // 按钮\n        buildData: function(v) {\n            this.version = v;\n            let outputWithHeader = this.addKDHeader(this.output);\n            let blob = new Blob([outputWithHeader], {\n                type: \"application/dat;charset=utf-8\",\n            });\n            saveAs(blob, Date.now() + \".dat\");\n        },\n\n        // 数据修正\n        amendVersion: function(v) {\n            let data = _.cloneDeep(this.cleandata);\n            data.nDecorationID = 0;\n            data.nMajorVersion = versions[v][\"nMajorVersion\"];\n            data.nVersion = versions[v][\"nVersion\"];\n            return data;\n        },\n        amendBone: function(data) {\n            let _bone = _.cloneDeep(bone_default);\n            let _fixbone = Object.assign(_bone, data);\n            return _fixbone;\n        },\n        amendDecal: function(data) {\n            let _decal = _.cloneDeep(decal_default);\n            for (let key in decal_default) {\n                // 不存在补全属性\n                if (!data[key]) {\n                    data[key] = _.cloneDeep(decal_default[key]);\n                    // 存在则补全子属性\n                } else {\n                    data[key] = Object.assign(decal_default[key], data[key]);\n                }\n            }\n            return data;\n        },\n    },\n    mounted: function() {\n        this.render();\n    },\n};\n</script>\n\n<style lang=\"less\">\n@import \"../assets/css/facedat.less\";\n</style>\n","/* global exports:true, module:true, require:true, define:true, global:true */\n\n(function (root, name, factory) {\n  /* jshint eqeqeq:false */\n  'use strict';\n\n  // Used to determine if values are of the language type `Object`\n  var objectTypes = {\n        'function': true\n      , 'object': true\n    }\n    // Detect free variable `exports`\n    , freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports\n    // Detect free variable `module`\n    , freeModule = objectTypes[typeof module] && module && !module.nodeType && module\n    // Detect free variable `global`, from Node.js or Browserified code, and\n    // use it as `window`\n    , freeGlobal = freeExports && freeModule && typeof global == 'object' && global\n    // Detect the popular CommonJS extension `module.exports`\n    , moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Some AMD build optimizers, like r.js, check for specific condition\n  // patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // defined as an anonymous module.\n    define(['exports'], factory);\n    // In case the source has been processed and wrapped in a define module use\n    // the supplied `exports` object.\n    if (freeExports && moduleExports) factory(freeModule.exports);\n  }\n  // check for `exports` after `define` in case a build optimizer adds an\n  // `exports` object\n  else if (freeExports && freeModule) {\n    // in Node.js or RingoJS v0.8.0+\n    if (moduleExports) factory(freeModule.exports);\n    // in Narwhal or RingoJS v0.7.0-\n    else factory(freeExports);\n  }\n  // in a browser or Rhino\n  else {\n    factory((root[name] = {}));\n  }\n}(this, 'luaparse', function (exports) {\n  'use strict';\n\n  exports.version = '0.2.1';\n\n  var input, options, length;\n\n  // Options can be set either globally on the parser object through\n  // defaultOptions, or during the parse call.\n  var defaultOptions = exports.defaultOptions = {\n    // Explicitly tell the parser when the input ends.\n      wait: false\n    // Store comments as an array in the chunk object.\n    , comments: true\n    // Track identifier scopes by adding an isLocal attribute to each\n    // identifier-node.\n    , scope: false\n    // Store location information on each syntax node as\n    // `loc: { start: { line, column }, end: { line, column } }`.\n    , locations: false\n    // Store the start and end character locations on each syntax node as\n    // `range: [start, end]`.\n    , ranges: false\n    // A callback which will be invoked when a syntax node has been completed.\n    // The node which has been created will be passed as the only parameter.\n    , onCreateNode: null\n    // A callback which will be invoked when a new scope is created.\n    , onCreateScope: null\n    // A callback which will be invoked when the current scope is destroyed.\n    , onDestroyScope: null\n  };\n\n  // The available tokens expressed as enum flags so they can be checked with\n  // bitwise operations.\n\n  var EOF = 1, StringLiteral = 2, Keyword = 4, Identifier = 8\n    , NumericLiteral = 16, Punctuator = 32, BooleanLiteral = 64\n    , NilLiteral = 128, VarargLiteral = 256;\n\n  exports.tokenTypes = { EOF: EOF, StringLiteral: StringLiteral\n    , Keyword: Keyword, Identifier: Identifier, NumericLiteral: NumericLiteral\n    , Punctuator: Punctuator, BooleanLiteral: BooleanLiteral\n    , NilLiteral: NilLiteral, VarargLiteral: VarargLiteral\n  };\n\n  // As this parser is a bit different from luas own, the error messages\n  // will be different in some situations.\n\n  var errors = exports.errors = {\n      unexpected: 'unexpected %1 \\'%2\\' near \\'%3\\''\n    , expected: '\\'%1\\' expected near \\'%2\\''\n    , expectedToken: '%1 expected near \\'%2\\''\n    , unfinishedString: 'unfinished string near \\'%1\\''\n    , malformedNumber: 'malformed number near \\'%1\\''\n    , invalidVar: 'invalid left-hand side of assignment near \\'%1\\''\n  };\n\n  // ### Abstract Syntax Tree\n  //\n  // The default AST structure is inspired by the Mozilla Parser API but can\n  // easily be customized by overriding these functions.\n\n  var ast = exports.ast = {\n      labelStatement: function(label) {\n      return {\n          type: 'LabelStatement'\n        , label: label\n      };\n    }\n\n    , breakStatement: function() {\n      return {\n          type: 'BreakStatement'\n      };\n    }\n\n    , gotoStatement: function(label) {\n      return {\n          type: 'GotoStatement'\n        , label: label\n      };\n    }\n\n    , returnStatement: function(args) {\n      return {\n          type: 'ReturnStatement'\n        , 'arguments': args\n      };\n    }\n\n    , ifStatement: function(clauses) {\n      return {\n          type: 'IfStatement'\n        , clauses: clauses\n      };\n    }\n    , ifClause: function(condition, body) {\n      return {\n          type: 'IfClause'\n        , condition: condition\n        , body: body\n      };\n    }\n    , elseifClause: function(condition, body) {\n      return {\n          type: 'ElseifClause'\n        , condition: condition\n        , body: body\n      };\n    }\n    , elseClause: function(body) {\n      return {\n          type: 'ElseClause'\n        , body: body\n      };\n    }\n\n    , whileStatement: function(condition, body) {\n      return {\n          type: 'WhileStatement'\n        , condition: condition\n        , body: body\n      };\n    }\n\n    , doStatement: function(body) {\n      return {\n          type: 'DoStatement'\n        , body: body\n      };\n    }\n\n    , repeatStatement: function(condition, body) {\n      return {\n          type: 'RepeatStatement'\n        , condition: condition\n        , body: body\n      };\n    }\n\n    , localStatement: function(variables, init) {\n      return {\n          type: 'LocalStatement'\n        , variables: variables\n        , init: init\n      };\n    }\n\n    , assignmentStatement: function(variables, init) {\n      return {\n          type: 'AssignmentStatement'\n        , variables: variables\n        , init: init\n      };\n    }\n\n    , callStatement: function(expression) {\n      return {\n          type: 'CallStatement'\n        , expression: expression\n      };\n    }\n\n    , functionStatement: function(identifier, parameters, isLocal, body) {\n      return {\n          type: 'FunctionDeclaration'\n        , identifier: identifier\n        , isLocal: isLocal\n        , parameters: parameters\n        , body: body\n      };\n    }\n\n    , forNumericStatement: function(variable, start, end, step, body) {\n      return {\n          type: 'ForNumericStatement'\n        , variable: variable\n        , start: start\n        , end: end\n        , step: step\n        , body: body\n      };\n    }\n\n    , forGenericStatement: function(variables, iterators, body) {\n      return {\n          type: 'ForGenericStatement'\n        , variables: variables\n        , iterators: iterators\n        , body: body\n      };\n    }\n\n    , chunk: function(body) {\n      return {\n          type: 'Chunk'\n        , body: body\n      };\n    }\n\n    , identifier: function(name) {\n      return {\n          type: 'Identifier'\n        , name: name\n      };\n    }\n\n    , literal: function(type, value, raw) {\n      type = (type === StringLiteral) ? 'StringLiteral'\n        : (type === NumericLiteral) ? 'NumericLiteral'\n        : (type === BooleanLiteral) ? 'BooleanLiteral'\n        : (type === NilLiteral) ? 'NilLiteral'\n        : 'VarargLiteral';\n\n      return {\n          type: type\n        , value: value\n        , raw: raw\n      };\n    }\n\n    , tableKey: function(key, value) {\n      return {\n          type: 'TableKey'\n        , key: key\n        , value: value\n      };\n    }\n    , tableKeyString: function(key, value) {\n      return {\n          type: 'TableKeyString'\n        , key: key\n        , value: value\n      };\n    }\n    , tableValue: function(value) {\n      return {\n          type: 'TableValue'\n        , value: value\n      };\n    }\n\n\n    , tableConstructorExpression: function(fields) {\n      return {\n          type: 'TableConstructorExpression'\n        , fields: fields\n      };\n    }\n    , binaryExpression: function(operator, left, right) {\n      var type = ('and' === operator || 'or' === operator) ?\n        'LogicalExpression' :\n        'BinaryExpression';\n\n      return {\n          type: type\n        , operator: operator\n        , left: left\n        , right: right\n      };\n    }\n    , unaryExpression: function(operator, argument) {\n      return {\n          type: 'UnaryExpression'\n        , operator: operator\n        , argument: argument\n      };\n    }\n    , memberExpression: function(base, indexer, identifier) {\n      return {\n          type: 'MemberExpression'\n        , indexer: indexer\n        , identifier: identifier\n        , base: base\n      };\n    }\n\n    , indexExpression: function(base, index) {\n      return {\n          type: 'IndexExpression'\n        , base: base\n        , index: index\n      };\n    }\n\n    , callExpression: function(base, args) {\n      return {\n          type: 'CallExpression'\n        , base: base\n        , 'arguments': args\n      };\n    }\n\n    , tableCallExpression: function(base, args) {\n      return {\n          type: 'TableCallExpression'\n        , base: base\n        , 'arguments': args\n      };\n    }\n\n    , stringCallExpression: function(base, argument) {\n      return {\n          type: 'StringCallExpression'\n        , base: base\n        , argument: argument\n      };\n    }\n\n    , comment: function(value, raw) {\n      return {\n          type: 'Comment'\n        , value: value\n        , raw: raw\n      };\n    }\n  };\n\n  // Wrap up the node object.\n\n  function finishNode(node) {\n    // Pop a `Marker` off the location-array and attach its location data.\n    if (trackLocations) {\n      var location = locations.pop();\n      location.complete();\n      if (options.locations) node.loc = location.loc;\n      if (options.ranges) node.range = location.range;\n    }\n    if (options.onCreateNode) options.onCreateNode(node);\n    return node;\n  }\n\n\n  // Helpers\n  // -------\n\n  var slice = Array.prototype.slice\n    , toString = Object.prototype.toString\n    , indexOf = function indexOf(array, element) {\n      for (var i = 0, length = array.length; i < length; i++) {\n        if (array[i] === element) return i;\n      }\n      return -1;\n    };\n\n  // Iterate through an array of objects and return the index of an object\n  // with a matching property.\n\n  function indexOfObject(array, property, element) {\n    for (var i = 0, length = array.length; i < length; i++) {\n      if (array[i][property] === element) return i;\n    }\n    return -1;\n  }\n\n  // A sprintf implementation using %index (beginning at 1) to input\n  // arguments in the format string.\n  //\n  // Example:\n  //\n  //     // Unexpected function in token\n  //     sprintf('Unexpected %2 in %1.', 'token', 'function');\n\n  function sprintf(format) {\n    var args = slice.call(arguments, 1);\n    format = format.replace(/%(\\d)/g, function (match, index) {\n      return '' + args[index - 1] || '';\n    });\n    return format;\n  }\n\n  // Returns a new object with the properties from all objectes passed as\n  // arguments. Last argument takes precedence.\n  //\n  // Example:\n  //\n  //     this.options = extend(options, { output: false });\n\n  function extend() {\n    var args = slice.call(arguments)\n      , dest = {}\n      , src, prop;\n\n    for (var i = 0, length = args.length; i < length; i++) {\n      src = args[i];\n      for (prop in src) if (src.hasOwnProperty(prop)) {\n        dest[prop] = src[prop];\n      }\n    }\n    return dest;\n  }\n\n  // ### Error functions\n\n  // #### Raise an exception.\n  //\n  // Raise an exception by passing a token, a string format and its paramters.\n  //\n  // The passed tokens location will automatically be added to the error\n  // message if it exists, if not it will default to the lexers current\n  // position.\n  //\n  // Example:\n  //\n  //     // [1:0] expected [ near (\n  //     raise(token, \"expected %1 near %2\", '[', token.value);\n\n  function raise(token) {\n    var message = sprintf.apply(null, slice.call(arguments, 1))\n      , error, col;\n\n    if ('undefined' !== typeof token.line) {\n      col = token.range[0] - token.lineStart;\n      error = new SyntaxError(sprintf('[%1:%2] %3', token.line, col, message));\n      error.line = token.line;\n      error.index = token.range[0];\n      error.column = col;\n    } else {\n      col = index - lineStart + 1;\n      error = new SyntaxError(sprintf('[%1:%2] %3', line, col, message));\n      error.index = index;\n      error.line = line;\n      error.column = col;\n    }\n    throw error;\n  }\n\n  // #### Raise an unexpected token error.\n  //\n  // Example:\n  //\n  //     // expected <name> near '0'\n  //     raiseUnexpectedToken('<name>', token);\n\n  function raiseUnexpectedToken(type, token) {\n    raise(token, errors.expectedToken, type, token.value);\n  }\n\n  // #### Raise a general unexpected error\n  //\n  // Usage should pass either a token object or a symbol string which was\n  // expected. We can also specify a nearby token such as <eof>, this will\n  // default to the currently active token.\n  //\n  // Example:\n  //\n  //     // Unexpected symbol 'end' near '<eof>'\n  //     unexpected(token);\n  //\n  // If there's no token in the buffer it means we have reached <eof>.\n\n  function unexpected(found, near) {\n    if ('undefined' === typeof near) near = lookahead.value;\n    if ('undefined' !== typeof found.type) {\n      var type;\n      switch (found.type) {\n        case StringLiteral:   type = 'string';      break;\n        case Keyword:         type = 'keyword';     break;\n        case Identifier:      type = 'identifier';  break;\n        case NumericLiteral:  type = 'number';      break;\n        case Punctuator:      type = 'symbol';      break;\n        case BooleanLiteral:  type = 'boolean';     break;\n        case NilLiteral:\n          return raise(found, errors.unexpected, 'symbol', 'nil', near);\n      }\n      return raise(found, errors.unexpected, type, found.value, near);\n    }\n    return raise(found, errors.unexpected, 'symbol', found, near);\n  }\n\n  // Lexer\n  // -----\n  //\n  // The lexer, or the tokenizer reads the input string character by character\n  // and derives a token left-right. To be as efficient as possible the lexer\n  // prioritizes the common cases such as identifiers. It also works with\n  // character codes instead of characters as string comparisons was the\n  // biggest bottleneck of the parser.\n  //\n  // If `options.comments` is enabled, all comments encountered will be stored\n  // in an array which later will be appended to the chunk object. If disabled,\n  // they will simply be disregarded.\n  //\n  // When the lexer has derived a valid token, it will be returned as an object\n  // containing its value and as well as its position in the input string (this\n  // is always enabled to provide proper debug messages).\n  //\n  // `lex()` starts lexing and returns the following token in the stream.\n\n  var index\n    , token\n    , previousToken\n    , lookahead\n    , comments\n    , tokenStart\n    , line\n    , lineStart;\n\n  exports.lex = lex;\n\n  function lex() {\n    skipWhiteSpace();\n\n    // Skip comments beginning with --\n    while (45 === input.charCodeAt(index) &&\n           45 === input.charCodeAt(index + 1)) {\n      scanComment();\n      skipWhiteSpace();\n    }\n    if (index >= length) return {\n        type : EOF\n      , value: '<eof>'\n      , line: line\n      , lineStart: lineStart\n      , range: [index, index]\n    };\n\n    var charCode = input.charCodeAt(index)\n      , next = input.charCodeAt(index + 1);\n\n    // Memorize the range index where the token begins.\n    tokenStart = index;\n    if (isIdentifierStart(charCode)) return scanIdentifierOrKeyword();\n\n    switch (charCode) {\n      case 39: case 34: // '\"\n        return scanStringLiteral();\n\n      // 0-9\n      case 48: case 49: case 50: case 51: case 52: case 53:\n      case 54: case 55: case 56: case 57:\n        return scanNumericLiteral();\n\n      case 46: // .\n        // If the dot is followed by a digit it's a float.\n        if (isDecDigit(next)) return scanNumericLiteral();\n        if (46 === next) {\n          if (46 === input.charCodeAt(index + 2)) return scanVarargLiteral();\n          return scanPunctuator('..');\n        }\n        return scanPunctuator('.');\n\n      case 61: // =\n        if (61 === next) return scanPunctuator('==');\n        return scanPunctuator('=');\n\n      case 62: // >\n        if (61 === next) return scanPunctuator('>=');\n        if (62 === next) return scanPunctuator('>>');\n        return scanPunctuator('>');\n\n      case 60: // <\n        if (60 === next) return scanPunctuator('<<');\n        if (61 === next) return scanPunctuator('<=');\n        return scanPunctuator('<');\n\n      case 126: // ~\n        if (61 === next) return scanPunctuator('~=');\n        return scanPunctuator('~');\n\n      case 58: // :\n        if (58 === next) return scanPunctuator('::');\n        return scanPunctuator(':');\n\n      case 91: // [\n        // Check for a multiline string, they begin with [= or [[\n        if (91 === next || 61 === next) return scanLongStringLiteral();\n        return scanPunctuator('[');\n\n      case 47: // /\n        // Check for integer division op (//)\n        if (47 === next) return scanPunctuator('//');\n        return scanPunctuator('/');\n\n      // * ^ % , { } ] ( ) ; & # - + |\n      case 42: case 94: case 37: case 44: case 123: case 124: case 125:\n      case 93: case 40: case 41: case 59: case 38: case 35: case 45: case 43:\n        return scanPunctuator(input.charAt(index));\n    }\n\n    return unexpected(input.charAt(index));\n  }\n\n  // Whitespace has no semantic meaning in lua so simply skip ahead while\n  // tracking the encounted newlines. Any kind of eol sequence is counted as a\n  // single line.\n\n  function consumeEOL() {\n    var charCode = input.charCodeAt(index)\n      , peekCharCode = input.charCodeAt(index + 1);\n\n    if (isLineTerminator(charCode)) {\n      // Count \\n\\r and \\r\\n as one newline.\n      if (10 === charCode && 13 === peekCharCode) index++;\n      if (13 === charCode && 10 === peekCharCode) index++;\n      line++;\n      lineStart = ++index;\n\n      return true;\n    }\n    return false;\n  }\n\n  function skipWhiteSpace() {\n    while (index < length) {\n      var charCode = input.charCodeAt(index);\n      if (isWhiteSpace(charCode)) {\n        index++;\n      } else if (!consumeEOL()) {\n        break;\n      }\n    }\n  }\n\n  // Identifiers, keywords, booleans and nil all look the same syntax wise. We\n  // simply go through them one by one and defaulting to an identifier if no\n  // previous case matched.\n\n  function scanIdentifierOrKeyword() {\n    var value, type;\n\n    // Slicing the input string is prefered before string concatenation in a\n    // loop for performance reasons.\n    while (isIdentifierPart(input.charCodeAt(++index)));\n    value = input.slice(tokenStart, index);\n\n    // Decide on the token type and possibly cast the value.\n    if (isKeyword(value)) {\n      type = Keyword;\n    } else if ('true' === value || 'false' === value) {\n      type = BooleanLiteral;\n      value = ('true' === value);\n    } else if ('nil' === value) {\n      type = NilLiteral;\n      value = null;\n    } else {\n      type = Identifier;\n    }\n\n    return {\n        type: type\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Once a punctuator reaches this function it should already have been\n  // validated so we simply return it as a token.\n\n  function scanPunctuator(value) {\n    index += value.length;\n    return {\n        type: Punctuator\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // A vararg literal consists of three dots.\n\n  function scanVarargLiteral() {\n    index += 3;\n    return {\n        type: VarargLiteral\n      , value: '...'\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Find the string literal by matching the delimiter marks used.\n\n  function scanStringLiteral() {\n    var delimiter = input.charCodeAt(index++)\n      , stringStart = index\n      , string = ''\n      , charCode;\n\n    while (index < length) {\n      charCode = input.charCodeAt(index++);\n      if (delimiter === charCode) break;\n      if (92 === charCode) { // \\\n        string += input.slice(stringStart, index - 1) + readEscapeSequence();\n        stringStart = index;\n      }\n      // EOF or `\\n` terminates a string literal. If we haven't found the\n      // ending delimiter by now, raise an exception.\n      else if (index >= length || isLineTerminator(charCode)) {\n        string += input.slice(stringStart, index - 1);\n        raise({}, errors.unfinishedString, string + String.fromCharCode(charCode));\n      }\n    }\n    string += input.slice(stringStart, index - 1);\n\n    return {\n        type: StringLiteral\n      , value: string\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Expect a multiline string literal and return it as a regular string\n  // literal, if it doesn't validate into a valid multiline string, throw an\n  // exception.\n\n  function scanLongStringLiteral() {\n    var string = readLongString();\n    // Fail if it's not a multiline literal.\n    if (false === string) raise(token, errors.expected, '[', token.value);\n\n    return {\n        type: StringLiteral\n      , value: string\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Numeric literals will be returned as floating-point numbers instead of\n  // strings. The raw value should be retrieved from slicing the input string\n  // later on in the process.\n  //\n  // If a hexadecimal number is encountered, it will be converted.\n\n  function scanNumericLiteral() {\n    var character = input.charAt(index)\n      , next = input.charAt(index + 1);\n\n    var value = ('0' === character && 'xX'.indexOf(next || null) >= 0) ?\n      readHexLiteral() : readDecLiteral();\n\n    return {\n        type: NumericLiteral\n      , value: value\n      , line: line\n      , lineStart: lineStart\n      , range: [tokenStart, index]\n    };\n  }\n\n  // Lua hexadecimals have an optional fraction part and an optional binary\n  // exoponent part. These are not included in JavaScript so we will compute\n  // all three parts separately and then sum them up at the end of the function\n  // with the following algorithm.\n  //\n  //     Digit := toDec(digit)\n  //     Fraction := toDec(fraction) / 16 ^ fractionCount\n  //     BinaryExp := 2 ^ binaryExp\n  //     Number := ( Digit + Fraction ) * BinaryExp\n\n  function readHexLiteral() {\n    var fraction = 0 // defaults to 0 as it gets summed\n      , binaryExponent = 1 // defaults to 1 as it gets multiplied\n      , binarySign = 1 // positive\n      , digit, fractionStart, exponentStart, digitStart;\n\n    digitStart = index += 2; // Skip 0x part\n\n    // A minimum of one hex digit is required.\n    if (!isHexDigit(input.charCodeAt(index)))\n      raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n    while (isHexDigit(input.charCodeAt(index))) index++;\n    // Convert the hexadecimal digit to base 10.\n    digit = parseInt(input.slice(digitStart, index), 16);\n\n    // Fraction part i optional.\n    if ('.' === input.charAt(index)) {\n      fractionStart = ++index;\n\n      while (isHexDigit(input.charCodeAt(index))) index++;\n      fraction = input.slice(fractionStart, index);\n\n      // Empty fraction parts should default to 0, others should be converted\n      // 0.x form so we can use summation at the end.\n      fraction = (fractionStart === index) ? 0\n        : parseInt(fraction, 16) / Math.pow(16, index - fractionStart);\n    }\n\n    // Binary exponents are optional\n    if ('pP'.indexOf(input.charAt(index) || null) >= 0) {\n      index++;\n\n      // Sign part is optional and defaults to 1 (positive).\n      if ('+-'.indexOf(input.charAt(index) || null) >= 0)\n        binarySign = ('+' === input.charAt(index++)) ? 1 : -1;\n\n      exponentStart = index;\n\n      // The binary exponent sign requires a decimal digit.\n      if (!isDecDigit(input.charCodeAt(index)))\n        raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n      while (isDecDigit(input.charCodeAt(index))) index++;\n      binaryExponent = input.slice(exponentStart, index);\n\n      // Calculate the binary exponent of the number.\n      binaryExponent = Math.pow(2, binaryExponent * binarySign);\n    }\n\n    return (digit + fraction) * binaryExponent;\n  }\n\n  // Decimal numbers are exactly the same in Lua and in JavaScript, because of\n  // this we check where the token ends and then parse it with native\n  // functions.\n\n  function readDecLiteral() {\n    while (isDecDigit(input.charCodeAt(index))) index++;\n    // Fraction part is optional\n    if ('.' === input.charAt(index)) {\n      index++;\n      // Fraction part defaults to 0\n      while (isDecDigit(input.charCodeAt(index))) index++;\n    }\n    // Exponent part is optional.\n    if ('eE'.indexOf(input.charAt(index) || null) >= 0) {\n      index++;\n      // Sign part is optional.\n      if ('+-'.indexOf(input.charAt(index) || null) >= 0) index++;\n      // An exponent is required to contain at least one decimal digit.\n      if (!isDecDigit(input.charCodeAt(index)))\n        raise({}, errors.malformedNumber, input.slice(tokenStart, index));\n\n      while (isDecDigit(input.charCodeAt(index))) index++;\n    }\n\n    return parseFloat(input.slice(tokenStart, index));\n  }\n\n\n  // Translate escape sequences to the actual characters.\n\n  function readEscapeSequence() {\n    var sequenceStart = index;\n    switch (input.charAt(index)) {\n      // Lua allow the following escape sequences.\n      // We don't escape the bell sequence.\n      case 'n': index++; return '\\n';\n      case 'r': index++; return '\\r';\n      case 't': index++; return '\\t';\n      case 'v': index++; return '\\x0B';\n      case 'b': index++; return '\\b';\n      case 'f': index++; return '\\f';\n      // Skips the following span of white-space.\n      case 'z': index++; skipWhiteSpace(); return '';\n      // Byte representation should for now be returned as is.\n      case 'x':\n        // \\xXX, where XX is a sequence of exactly two hexadecimal digits\n        if (isHexDigit(input.charCodeAt(index + 1)) &&\n            isHexDigit(input.charCodeAt(index + 2))) {\n          index += 3;\n          // Return it as is, without translating the byte.\n          return '\\\\' + input.slice(sequenceStart, index);\n        }\n        return '\\\\' + input.charAt(index++);\n      default:\n        // \\ddd, where ddd is a sequence of up to three decimal digits.\n        if (isDecDigit(input.charCodeAt(index))) {\n          while (isDecDigit(input.charCodeAt(++index)));\n          return '\\\\' + input.slice(sequenceStart, index);\n        }\n        // Simply return the \\ as is, it's not escaping any sequence.\n        return input.charAt(index++);\n    }\n  }\n\n  // Comments begin with -- after which it will be decided if they are\n  // multiline comments or not.\n  //\n  // The multiline functionality works the exact same way as with string\n  // literals so we reuse the functionality.\n\n  function scanComment() {\n    tokenStart = index;\n    index += 2; // --\n\n    var character = input.charAt(index)\n      , content = ''\n      , isLong = false\n      , commentStart = index\n      , lineStartComment = lineStart\n      , lineComment = line;\n\n    if ('[' === character) {\n      content = readLongString();\n      // This wasn't a multiline comment after all.\n      if (false === content) content = character;\n      else isLong = true;\n    }\n    // Scan until next line as long as it's not a multiline comment.\n    if (!isLong) {\n      while (index < length) {\n        if (isLineTerminator(input.charCodeAt(index))) break;\n        index++;\n      }\n      if (options.comments) content = input.slice(commentStart, index);\n    }\n\n    if (options.comments) {\n      var node = ast.comment(content, input.slice(tokenStart, index));\n\n      // `Marker`s depend on tokens available in the parser and as comments are\n      // intercepted in the lexer all location data is set manually.\n      if (options.locations) {\n        node.loc = {\n            start: { line: lineComment, column: tokenStart - lineStartComment }\n          , end: { line: line, column: index - lineStart }\n        };\n      }\n      if (options.ranges) {\n        node.range = [tokenStart, index];\n      }\n      if (options.onCreateNode) options.onCreateNode(node);\n      comments.push(node);\n    }\n  }\n\n  // Read a multiline string by calculating the depth of `=` characters and\n  // then appending until an equal depth is found.\n\n  function readLongString() {\n    var level = 0\n      , content = ''\n      , terminator = false\n      , character, stringStart;\n\n    index++; // [\n\n    // Calculate the depth of the comment.\n    while ('=' === input.charAt(index + level)) level++;\n    // Exit, this is not a long string afterall.\n    if ('[' !== input.charAt(index + level)) return false;\n\n    index += level + 1;\n\n    // If the first character is a newline, ignore it and begin on next line.\n    if (isLineTerminator(input.charCodeAt(index))) consumeEOL();\n\n    stringStart = index;\n    while (index < length) {\n      // To keep track of line numbers run the `consumeEOL()` which increments\n      // its counter.\n      if (isLineTerminator(input.charCodeAt(index))) consumeEOL();\n\n      character = input.charAt(index++);\n\n      // Once the delimiter is found, iterate through the depth count and see\n      // if it matches.\n      if (']' === character) {\n        terminator = true;\n        for (var i = 0; i < level; i++) {\n          if ('=' !== input.charAt(index + i)) terminator = false;\n        }\n        if (']' !== input.charAt(index + level)) terminator = false;\n      }\n\n      // We reached the end of the multiline string. Get out now.\n      if (terminator) break;\n    }\n    content += input.slice(stringStart, index - 1);\n    index += level + 1;\n\n    return content;\n  }\n\n  // ## Lex functions and helpers.\n\n  // Read the next token.\n  //\n  // This is actually done by setting the current token to the lookahead and\n  // reading in the new lookahead token.\n\n  function next() {\n    previousToken = token;\n    token = lookahead;\n    lookahead = lex();\n  }\n\n  // Consume a token if its value matches. Once consumed or not, return the\n  // success of the operation.\n\n  function consume(value) {\n    if (value === token.value) {\n      next();\n      return true;\n    }\n    return false;\n  }\n\n  // Expect the next token value to match. If not, throw an exception.\n\n  function expect(value) {\n    if (value === token.value) next();\n    else raise(token, errors.expected, value, token.value);\n  }\n\n  // ### Validation functions\n\n  function isWhiteSpace(charCode) {\n    return 9 === charCode || 32 === charCode || 0xB === charCode || 0xC === charCode;\n  }\n\n  function isLineTerminator(charCode) {\n    return 10 === charCode || 13 === charCode;\n  }\n\n  function isDecDigit(charCode) {\n    return charCode >= 48 && charCode <= 57;\n  }\n\n  function isHexDigit(charCode) {\n    return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) || (charCode >= 65 && charCode <= 70);\n  }\n\n  // From [Lua 5.2](http://www.lua.org/manual/5.2/manual.html#8.1) onwards\n  // identifiers cannot use locale-dependet letters.\n\n  function isIdentifierStart(charCode) {\n    return (charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || 95 === charCode;\n  }\n\n  function isIdentifierPart(charCode) {\n    return (charCode >= 65 && charCode <= 90) || (charCode >= 97 && charCode <= 122) || 95 === charCode || (charCode >= 48 && charCode <= 57);\n  }\n\n  // [3.1 Lexical Conventions](http://www.lua.org/manual/5.2/manual.html#3.1)\n  //\n  // `true`, `false` and `nil` will not be considered keywords, but literals.\n\n  function isKeyword(id) {\n    switch (id.length) {\n      case 2:\n        return 'do' === id || 'if' === id || 'in' === id || 'or' === id;\n      case 3:\n        return 'and' === id || 'end' === id || 'for' === id || 'not' === id;\n      case 4:\n        return 'else' === id || 'goto' === id || 'then' === id;\n      case 5:\n        return 'break' === id || 'local' === id || 'until' === id || 'while' === id;\n      case 6:\n        return 'elseif' === id || 'repeat' === id || 'return' === id;\n      case 8:\n        return 'function' === id;\n    }\n    return false;\n  }\n\n  function isUnary(token) {\n    if (Punctuator === token.type) return '#-~'.indexOf(token.value) >= 0;\n    if (Keyword === token.type) return 'not' === token.value;\n    return false;\n  }\n\n  // @TODO this needs to be rethought.\n  function isCallExpression(expression) {\n    switch (expression.type) {\n      case 'CallExpression':\n      case 'TableCallExpression':\n      case 'StringCallExpression':\n        return true;\n    }\n    return false;\n  }\n\n  // Check if the token syntactically closes a block.\n\n  function isBlockFollow(token) {\n    if (EOF === token.type) return true;\n    if (Keyword !== token.type) return false;\n    switch (token.value) {\n      case 'else': case 'elseif':\n      case 'end': case 'until':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Scope\n  // -----\n\n  // Store each block scope as a an array of identifier names. Each scope is\n  // stored in an FILO-array.\n  var scopes\n    // The current scope index\n    , scopeDepth\n    // A list of all global identifier nodes.\n    , globals;\n\n  // Create a new scope inheriting all declarations from the previous scope.\n  function createScope() {\n    var scope = Array.apply(null, scopes[scopeDepth++]);\n    scopes.push(scope);\n    if (options.onCreateScope) options.onCreateScope();\n  }\n\n  // Exit and remove the current scope.\n  function destroyScope() {\n    var scope = scopes.pop();\n    scopeDepth--;\n    if (options.onDestroyScope) options.onDestroyScope();\n  }\n\n  // Add identifier name to the current scope if it doesnt already exist.\n  function scopeIdentifierName(name) {\n    if (-1 !== indexOf(scopes[scopeDepth], name)) return;\n    scopes[scopeDepth].push(name);\n  }\n\n  // Add identifier to the current scope\n  function scopeIdentifier(node) {\n    scopeIdentifierName(node.name);\n    attachScope(node, true);\n  }\n\n  // Attach scope information to node. If the node is global, store it in the\n  // globals array so we can return the information to the user.\n  function attachScope(node, isLocal) {\n    if (!isLocal && -1 === indexOfObject(globals, 'name', node.name))\n      globals.push(node);\n\n    node.isLocal = isLocal;\n  }\n\n  // Is the identifier name available in this scope.\n  function scopeHasName(name) {\n    return (-1 !== indexOf(scopes[scopeDepth], name));\n  }\n\n  // Location tracking\n  // -----------------\n  //\n  // Locations are stored in FILO-array as a `Marker` object consisting of both\n  // `loc` and `range` data. Once a `Marker` is popped off the list an end\n  // location is added and the data is attached to a syntax node.\n\n  var locations = []\n    , trackLocations;\n\n  function createLocationMarker() {\n    return new Marker(token);\n  }\n\n  function Marker(token) {\n    if (options.locations) {\n      this.loc = {\n          start: {\n            line: token.line\n          , column: token.range[0] - token.lineStart\n        }\n        , end: {\n            line: 0\n          , column: 0\n        }\n      };\n    }\n    if (options.ranges) this.range = [token.range[0], 0];\n  }\n\n  // Complete the location data stored in the `Marker` by adding the location\n  // of the *previous token* as an end location.\n  Marker.prototype.complete = function() {\n    if (options.locations) {\n      this.loc.end.line = previousToken.line;\n      this.loc.end.column = previousToken.range[1] - previousToken.lineStart;\n    }\n    if (options.ranges) {\n      this.range[1] = previousToken.range[1];\n    }\n  };\n\n  // Create a new `Marker` and add it to the FILO-array.\n  function markLocation() {\n    if (trackLocations) locations.push(createLocationMarker());\n  }\n\n  // Push an arbitrary `Marker` object onto the FILO-array.\n  function pushLocation(marker) {\n    if (trackLocations) locations.push(marker);\n  }\n\n  // Parse functions\n  // ---------------\n\n  // Chunk is the main program object. Syntactically it's the same as a block.\n  //\n  //     chunk ::= block\n\n  function parseChunk() {\n    next();\n    markLocation();\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    if (EOF !== token.type) unexpected(token);\n    // If the body is empty no previousToken exists when finishNode runs.\n    if (trackLocations && !body.length) previousToken = token;\n    return finishNode(ast.chunk(body));\n  }\n\n  // A block contains a list of statements with an optional return statement\n  // as its last statement.\n  //\n  //     block ::= {stat} [retstat]\n\n  function parseBlock(terminator) {\n    var block = []\n      , statement;\n\n    while (!isBlockFollow(token)) {\n      // Return has to be the last statement in a block.\n      if ('return' === token.value) {\n        block.push(parseStatement());\n        break;\n      }\n      statement = parseStatement();\n      // Statements are only added if they are returned, this allows us to\n      // ignore some statements, such as EmptyStatement.\n      if (statement) block.push(statement);\n    }\n\n    // Doesn't really need an ast node\n    return block;\n  }\n\n  // There are two types of statements, simple and compound.\n  //\n  //     statement ::= break | goto | do | while | repeat | return\n  //          | if | for | function | local | label | assignment\n  //          | functioncall | ';'\n\n  function parseStatement() {\n    markLocation();\n    if (Keyword === token.type) {\n      switch (token.value) {\n        case 'local':    next(); return parseLocalStatement();\n        case 'if':       next(); return parseIfStatement();\n        case 'return':   next(); return parseReturnStatement();\n        case 'function': next();\n          var name = parseFunctionName();\n          return parseFunctionDeclaration(name);\n        case 'while':    next(); return parseWhileStatement();\n        case 'for':      next(); return parseForStatement();\n        case 'repeat':   next(); return parseRepeatStatement();\n        case 'break':    next(); return parseBreakStatement();\n        case 'do':       next(); return parseDoStatement();\n        case 'goto':     next(); return parseGotoStatement();\n      }\n    }\n\n    if (Punctuator === token.type) {\n      if (consume('::')) return parseLabelStatement();\n    }\n    // Assignments memorizes the location and pushes it manually for wrapper\n    // nodes. Additionally empty `;` statements should not mark a location.\n    if (trackLocations) locations.pop();\n\n    // When a `;` is encounted, simply eat it without storing it.\n    if (consume(';')) return;\n\n    return parseAssignmentOrCallStatement();\n  }\n\n  // ## Statements\n\n  //     label ::= '::' Name '::'\n\n  function parseLabelStatement() {\n    var name = token.value\n      , label = parseIdentifier();\n\n    if (options.scope) {\n      scopeIdentifierName('::' + name + '::');\n      attachScope(label, true);\n    }\n\n    expect('::');\n    return finishNode(ast.labelStatement(label));\n  }\n\n  //     break ::= 'break'\n\n  function parseBreakStatement() {\n    return finishNode(ast.breakStatement());\n  }\n\n  //     goto ::= 'goto' Name\n\n  function parseGotoStatement() {\n    var name = token.value\n      , label = parseIdentifier();\n\n    return finishNode(ast.gotoStatement(label));\n  }\n\n  //     do ::= 'do' block 'end'\n\n  function parseDoStatement() {\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    expect('end');\n    return finishNode(ast.doStatement(body));\n  }\n\n  //     while ::= 'while' exp 'do' block 'end'\n\n  function parseWhileStatement() {\n    var condition = parseExpectedExpression();\n    expect('do');\n    if (options.scope) createScope();\n    var body = parseBlock();\n    if (options.scope) destroyScope();\n    expect('end');\n    return finishNode(ast.whileStatement(condition, body));\n  }\n\n  //     repeat ::= 'repeat' block 'until' exp\n\n  function parseRepeatStatement() {\n    if (options.scope) createScope();\n    var body = parseBlock();\n    expect('until');\n    var condition = parseExpectedExpression();\n    if (options.scope) destroyScope();\n    return finishNode(ast.repeatStatement(condition, body));\n  }\n\n  //     retstat ::= 'return' [exp {',' exp}] [';']\n\n  function parseReturnStatement() {\n    var expressions = [];\n\n    if ('end' !== token.value) {\n      var expression = parseExpression();\n      if (null != expression) expressions.push(expression);\n      while (consume(',')) {\n        expression = parseExpectedExpression();\n        expressions.push(expression);\n      }\n      consume(';'); // grammar tells us ; is optional here.\n    }\n    return finishNode(ast.returnStatement(expressions));\n  }\n\n  //     if ::= 'if' exp 'then' block {elif} ['else' block] 'end'\n  //     elif ::= 'elseif' exp 'then' block\n\n  function parseIfStatement() {\n    var clauses = []\n      , condition\n      , body\n      , marker;\n\n    // IfClauses begin at the same location as the parent IfStatement.\n    // It ends at the start of `end`, `else`, or `elseif`.\n    if (trackLocations) {\n      marker = locations[locations.length - 1];\n      locations.push(marker);\n    }\n    condition = parseExpectedExpression();\n    expect('then');\n    if (options.scope) createScope();\n    body = parseBlock();\n    if (options.scope) destroyScope();\n    clauses.push(finishNode(ast.ifClause(condition, body)));\n\n    if (trackLocations) marker = createLocationMarker();\n    while (consume('elseif')) {\n      pushLocation(marker);\n      condition = parseExpectedExpression();\n      expect('then');\n      if (options.scope) createScope();\n      body = parseBlock();\n      if (options.scope) destroyScope();\n      clauses.push(finishNode(ast.elseifClause(condition, body)));\n      if (trackLocations) marker = createLocationMarker();\n    }\n\n    if (consume('else')) {\n      // Include the `else` in the location of ElseClause.\n      if (trackLocations) {\n        marker = new Marker(previousToken);\n        locations.push(marker);\n      }\n      if (options.scope) createScope();\n      body = parseBlock();\n      if (options.scope) destroyScope();\n      clauses.push(finishNode(ast.elseClause(body)));\n    }\n\n    expect('end');\n    return finishNode(ast.ifStatement(clauses));\n  }\n\n  // There are two types of for statements, generic and numeric.\n  //\n  //     for ::= Name '=' exp ',' exp [',' exp] 'do' block 'end'\n  //     for ::= namelist 'in' explist 'do' block 'end'\n  //     namelist ::= Name {',' Name}\n  //     explist ::= exp {',' exp}\n\n  function parseForStatement() {\n    var variable = parseIdentifier()\n      , body;\n\n    // The start-identifier is local.\n\n    if (options.scope) {\n      createScope();\n      scopeIdentifier(variable);\n    }\n\n    // If the first expression is followed by a `=` punctuator, this is a\n    // Numeric For Statement.\n    if (consume('=')) {\n      // Start expression\n      var start = parseExpectedExpression();\n      expect(',');\n      // End expression\n      var end = parseExpectedExpression();\n      // Optional step expression\n      var step = consume(',') ? parseExpectedExpression() : null;\n\n      expect('do');\n      body = parseBlock();\n      expect('end');\n      if (options.scope) destroyScope();\n\n      return finishNode(ast.forNumericStatement(variable, start, end, step, body));\n    }\n    // If not, it's a Generic For Statement\n    else {\n      // The namelist can contain one or more identifiers.\n      var variables = [variable];\n      while (consume(',')) {\n        variable = parseIdentifier();\n        // Each variable in the namelist is locally scoped.\n        if (options.scope) scopeIdentifier(variable);\n        variables.push(variable);\n      }\n      expect('in');\n      var iterators = [];\n\n      // One or more expressions in the explist.\n      do {\n        var expression = parseExpectedExpression();\n        iterators.push(expression);\n      } while (consume(','));\n\n      expect('do');\n      body = parseBlock();\n      expect('end');\n      if (options.scope) destroyScope();\n\n      return finishNode(ast.forGenericStatement(variables, iterators, body));\n    }\n  }\n\n  // Local statements can either be variable assignments or function\n  // definitions. If a function definition is found, it will be delegated to\n  // `parseFunctionDeclaration()` with the isLocal flag.\n  //\n  // This AST structure might change into a local assignment with a function\n  // child.\n  //\n  //     local ::= 'local' 'function' Name funcdecl\n  //        | 'local' Name {',' Name} ['=' exp {',' exp}]\n\n  function parseLocalStatement() {\n    var name;\n\n    if (Identifier === token.type) {\n      var variables = []\n        , init = [];\n\n      do {\n        name = parseIdentifier();\n\n        variables.push(name);\n      } while (consume(','));\n\n      if (consume('=')) {\n        do {\n          var expression = parseExpectedExpression();\n          init.push(expression);\n        } while (consume(','));\n      }\n\n      // Declarations doesn't exist before the statement has been evaluated.\n      // Therefore assignments can't use their declarator. And the identifiers\n      // shouldn't be added to the scope until the statement is complete.\n      if (options.scope) {\n        for (var i = 0, l = variables.length; i < l; i++) {\n          scopeIdentifier(variables[i]);\n        }\n      }\n\n      return finishNode(ast.localStatement(variables, init));\n    }\n    if (consume('function')) {\n      name = parseIdentifier();\n\n      if (options.scope) {\n        scopeIdentifier(name);\n        createScope();\n      }\n\n      // MemberExpressions are not allowed in local function statements.\n      return parseFunctionDeclaration(name, true);\n    } else {\n      raiseUnexpectedToken('<name>', token);\n    }\n  }\n\n  function validateVar(node) {\n    // @TODO we need something not dependent on the exact AST used. see also isCallExpression()\n    if (node.inParens || (['Identifier', 'MemberExpression', 'IndexExpression'].indexOf(node.type) === -1)) {\n      raise(token, errors.invalidVar, token.value);\n    }\n  }\n\n  //     assignment ::= varlist '=' explist\n  //     var ::= Name | prefixexp '[' exp ']' | prefixexp '.' Name\n  //     varlist ::= var {',' var}\n  //     explist ::= exp {',' exp}\n  //\n  //     call ::= callexp\n  //     callexp ::= prefixexp args | prefixexp ':' Name args\n\n  function parseAssignmentOrCallStatement() {\n    // Keep a reference to the previous token for better error messages in case\n    // of invalid statement\n    var previous = token\n      , expression, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n    expression = parsePrefixExpression();\n\n    if (null == expression) return unexpected(token);\n    if (',='.indexOf(token.value) >= 0) {\n      var variables = [expression]\n        , init = []\n        , exp;\n\n      validateVar(expression);\n      while (consume(',')) {\n        exp = parsePrefixExpression();\n        if (null == exp) raiseUnexpectedToken('<expression>', token);\n        validateVar(exp);\n        variables.push(exp);\n      }\n      expect('=');\n      do {\n        exp = parseExpectedExpression();\n        init.push(exp);\n      } while (consume(','));\n\n      pushLocation(marker);\n      return finishNode(ast.assignmentStatement(variables, init));\n    }\n    if (isCallExpression(expression)) {\n      pushLocation(marker);\n      return finishNode(ast.callStatement(expression));\n    }\n    // The prefix expression was neither part of an assignment or a\n    // callstatement, however as it was valid it's been consumed, so raise\n    // the exception on the previous token to provide a helpful message.\n    return unexpected(previous);\n  }\n\n\n\n  // ### Non-statements\n\n  //     Identifier ::= Name\n\n  function parseIdentifier() {\n    markLocation();\n    var identifier = token.value;\n    if (Identifier !== token.type) raiseUnexpectedToken('<name>', token);\n    next();\n    return finishNode(ast.identifier(identifier));\n  }\n\n  // Parse the functions parameters and body block. The name should already\n  // have been parsed and passed to this declaration function. By separating\n  // this we allow for anonymous functions in expressions.\n  //\n  // For local functions there's a boolean parameter which needs to be set\n  // when parsing the declaration.\n  //\n  //     funcdecl ::= '(' [parlist] ')' block 'end'\n  //     parlist ::= Name {',' Name} | [',' '...'] | '...'\n\n  function parseFunctionDeclaration(name, isLocal) {\n    var parameters = [];\n    expect('(');\n\n    // The declaration has arguments\n    if (!consume(')')) {\n      // Arguments are a comma separated list of identifiers, optionally ending\n      // with a vararg.\n      while (true) {\n        if (Identifier === token.type) {\n          var parameter = parseIdentifier();\n          // Function parameters are local.\n          if (options.scope) scopeIdentifier(parameter);\n\n          parameters.push(parameter);\n\n          if (consume(',')) continue;\n          else if (consume(')')) break;\n        }\n        // No arguments are allowed after a vararg.\n        else if (VarargLiteral === token.type) {\n          parameters.push(parsePrimaryExpression());\n          expect(')');\n          break;\n        } else {\n          raiseUnexpectedToken('<name> or \\'...\\'', token);\n        }\n      }\n    }\n\n    var body = parseBlock();\n    expect('end');\n    if (options.scope) destroyScope();\n\n    isLocal = isLocal || false;\n    return finishNode(ast.functionStatement(name, parameters, isLocal, body));\n  }\n\n  // Parse the function name as identifiers and member expressions.\n  //\n  //     Name {'.' Name} [':' Name]\n\n  function parseFunctionName() {\n    var base, name, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n    base = parseIdentifier();\n\n    if (options.scope) {\n      attachScope(base, scopeHasName(base.name));\n      createScope();\n    }\n\n    while (consume('.')) {\n      pushLocation(marker);\n      name = parseIdentifier();\n      base = finishNode(ast.memberExpression(base, '.', name));\n    }\n\n    if (consume(':')) {\n      pushLocation(marker);\n      name = parseIdentifier();\n      base = finishNode(ast.memberExpression(base, ':', name));\n      if (options.scope) scopeIdentifierName('self');\n    }\n\n    return base;\n  }\n\n  //     tableconstructor ::= '{' [fieldlist] '}'\n  //     fieldlist ::= field {fieldsep field} fieldsep\n  //     field ::= '[' exp ']' '=' exp | Name = 'exp' | exp\n  //\n  //     fieldsep ::= ',' | ';'\n\n  function parseTableConstructor() {\n    var fields = []\n      , key, value;\n\n    while (true) {\n      markLocation();\n      if (Punctuator === token.type && consume('[')) {\n        key = parseExpectedExpression();\n        expect(']');\n        expect('=');\n        value = parseExpectedExpression();\n        fields.push(finishNode(ast.tableKey(key, value)));\n      } else if (Identifier === token.type) {\n        if ('=' === lookahead.value) {\n          key = parseIdentifier();\n          next();\n          value = parseExpectedExpression();\n          fields.push(finishNode(ast.tableKeyString(key, value)));\n        } else {\n          value = parseExpectedExpression();\n          fields.push(finishNode(ast.tableValue(value)));\n        }\n      } else {\n        if (null == (value = parseExpression())) {\n          locations.pop();\n          break;\n        }\n        fields.push(finishNode(ast.tableValue(value)));\n      }\n      if (',;'.indexOf(token.value) >= 0) {\n        next();\n        continue;\n      }\n      break;\n    }\n    expect('}');\n    return finishNode(ast.tableConstructorExpression(fields));\n  }\n\n  // Expression parser\n  // -----------------\n  //\n  // Expressions are evaluated and always return a value. If nothing is\n  // matched null will be returned.\n  //\n  //     exp ::= (unop exp | primary | prefixexp ) { binop exp }\n  //\n  //     primary ::= nil | false | true | Number | String | '...'\n  //          | functiondef | tableconstructor\n  //\n  //     prefixexp ::= (Name | '(' exp ')' ) { '[' exp ']'\n  //          | '.' Name | ':' Name args | args }\n  //\n\n  function parseExpression() {\n    var expression = parseSubExpression(0);\n    return expression;\n  }\n\n  // Parse an expression expecting it to be valid.\n\n  function parseExpectedExpression() {\n    var expression = parseExpression();\n    if (null == expression) raiseUnexpectedToken('<expression>', token);\n    else return expression;\n  }\n\n\n  // Return the precedence priority of the operator.\n  //\n  // As unary `-` can't be distinguished from binary `-`, unary precedence\n  // isn't described in this table but in `parseSubExpression()` itself.\n  //\n  // As this function gets hit on every expression it's been optimized due to\n  // the expensive CompareICStub which took ~8% of the parse time.\n\n  function binaryPrecedence(operator) {\n    var charCode = operator.charCodeAt(0)\n      , length = operator.length;\n\n    if (1 === length) {\n      switch (charCode) {\n        case 94: return 12; // ^\n        case 42: case 47: case 37: return 10; // * / %\n        case 43: case 45: return 9; // + -\n        case 38: return 6; // &\n        case 126: return 5; // ~\n        case 124: return 4; // |\n        case 60: case 62: return 3; // < >\n      }\n    } else if (2 === length) {\n      switch (charCode) {\n        case 47: return 10; // //\n        case 46: return 8; // ..\n        case 60: case 62:\n            if('<<' === operator || '>>' === operator) return 7; // << >>\n            return 3; // <= >=\n        case 61: case 126: return 3; // == ~=\n        case 111: return 1; // or\n      }\n    } else if (97 === charCode && 'and' === operator) return 2;\n    return 0;\n  }\n\n  // Implement an operator-precedence parser to handle binary operator\n  // precedence.\n  //\n  // We use this algorithm because it's compact, it's fast and Lua core uses\n  // the same so we can be sure our expressions are parsed in the same manner\n  // without excessive amounts of tests.\n  //\n  //     exp ::= (unop exp | primary | prefixexp ) { binop exp }\n\n  function parseSubExpression(minPrecedence) {\n    var operator = token.value\n    // The left-hand side in binary operations.\n      , expression, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    // UnaryExpression\n    if (isUnary(token)) {\n      markLocation();\n      next();\n      var argument = parseSubExpression(10);\n      if (argument == null) raiseUnexpectedToken('<expression>', token);\n      expression = finishNode(ast.unaryExpression(operator, argument));\n    }\n    if (null == expression) {\n      // PrimaryExpression\n      expression = parsePrimaryExpression();\n\n      // PrefixExpression\n      if (null == expression) {\n        expression = parsePrefixExpression();\n      }\n    }\n    // This is not a valid left hand expression.\n    if (null == expression) return null;\n\n    var precedence;\n    while (true) {\n      operator = token.value;\n\n      precedence = (Punctuator === token.type || Keyword === token.type) ?\n        binaryPrecedence(operator) : 0;\n\n      if (precedence === 0 || precedence <= minPrecedence) break;\n      // Right-hand precedence operators\n      if ('^' === operator || '..' === operator) precedence--;\n      next();\n      var right = parseSubExpression(precedence);\n      if (null == right) raiseUnexpectedToken('<expression>', token);\n      // Push in the marker created before the loop to wrap its entirety.\n      if (trackLocations) locations.push(marker);\n      expression = finishNode(ast.binaryExpression(operator, expression, right));\n\n    }\n    return expression;\n  }\n\n  //     prefixexp ::= prefix {suffix}\n  //     prefix ::= Name | '(' exp ')'\n  //     suffix ::= '[' exp ']' | '.' Name | ':' Name args | args\n  //\n  //     args ::= '(' [explist] ')' | tableconstructor | String\n\n  function parsePrefixExpression() {\n    var base, name, marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    // The prefix\n    if (Identifier === token.type) {\n      name = token.value;\n      base = parseIdentifier();\n      // Set the parent scope.\n      if (options.scope) attachScope(base, scopeHasName(name));\n    } else if (consume('(')) {\n      base = parseExpectedExpression();\n      expect(')');\n      base.inParens = true; // XXX: quick and dirty. needed for validateVar\n    } else {\n      return null;\n    }\n\n    // The suffix\n    var expression, identifier;\n    while (true) {\n      if (Punctuator === token.type) {\n        switch (token.value) {\n          case '[':\n            pushLocation(marker);\n            next();\n            expression = parseExpectedExpression();\n            base = finishNode(ast.indexExpression(base, expression));\n            expect(']');\n            break;\n          case '.':\n            pushLocation(marker);\n            next();\n            identifier = parseIdentifier();\n            base = finishNode(ast.memberExpression(base, '.', identifier));\n            break;\n          case ':':\n            pushLocation(marker);\n            next();\n            identifier = parseIdentifier();\n            base = finishNode(ast.memberExpression(base, ':', identifier));\n            // Once a : is found, this has to be a CallExpression, otherwise\n            // throw an error.\n            pushLocation(marker);\n            base = parseCallExpression(base);\n            break;\n          case '(': case '{': // args\n            pushLocation(marker);\n            base = parseCallExpression(base);\n            break;\n          default:\n            return base;\n        }\n      } else if (StringLiteral === token.type) {\n        pushLocation(marker);\n        base = parseCallExpression(base);\n      } else {\n        break;\n      }\n    }\n\n    return base;\n  }\n\n  //     args ::= '(' [explist] ')' | tableconstructor | String\n\n  function parseCallExpression(base) {\n    if (Punctuator === token.type) {\n      switch (token.value) {\n        case '(':\n          next();\n\n          // List of expressions\n          var expressions = [];\n          var expression = parseExpression();\n          if (null != expression) expressions.push(expression);\n          while (consume(',')) {\n            expression = parseExpectedExpression();\n            expressions.push(expression);\n          }\n\n          expect(')');\n          return finishNode(ast.callExpression(base, expressions));\n\n        case '{':\n          markLocation();\n          next();\n          var table = parseTableConstructor();\n          return finishNode(ast.tableCallExpression(base, table));\n      }\n    } else if (StringLiteral === token.type) {\n      return finishNode(ast.stringCallExpression(base, parsePrimaryExpression()));\n    }\n\n    raiseUnexpectedToken('function arguments', token);\n  }\n\n  //     primary ::= String | Numeric | nil | true | false\n  //          | functiondef | tableconstructor | '...'\n\n  function parsePrimaryExpression() {\n    var literals = StringLiteral | NumericLiteral | BooleanLiteral | NilLiteral | VarargLiteral\n      , value = token.value\n      , type = token.type\n      , marker;\n\n    if (trackLocations) marker = createLocationMarker();\n\n    if (type & literals) {\n      pushLocation(marker);\n      var raw = input.slice(token.range[0], token.range[1]);\n      next();\n      return finishNode(ast.literal(type, value, raw));\n    } else if (Keyword === type && 'function' === value) {\n      pushLocation(marker);\n      next();\n      if (options.scope) createScope();\n      return parseFunctionDeclaration(null);\n    } else if (consume('{')) {\n      pushLocation(marker);\n      return parseTableConstructor();\n    }\n  }\n\n  // Parser\n  // ------\n\n  // Export the main parser.\n  //\n  //   - `wait` Hold parsing until end() is called. Defaults to false\n  //   - `comments` Store comments. Defaults to true.\n  //   - `scope` Track identifier scope. Defaults to false.\n  //   - `locations` Store location information. Defaults to false.\n  //   - `ranges` Store the start and end character locations. Defaults to\n  //     false.\n  //   - `onCreateNode` Callback which will be invoked when a syntax node is\n  //     created.\n  //   - `onCreateScope` Callback which will be invoked when a new scope is\n  //     created.\n  //   - `onDestroyScope` Callback which will be invoked when the current scope\n  //     is destroyed.\n  //\n  // Example:\n  //\n  //     var parser = require('luaparser');\n  //     parser.parse('i = 0');\n\n  exports.parse = parse;\n\n  function parse(_input, _options) {\n    if ('undefined' === typeof _options && 'object' === typeof _input) {\n      _options = _input;\n      _input = undefined;\n    }\n    if (!_options) _options = {};\n\n    input = _input || '';\n    options = extend(defaultOptions, _options);\n\n    // Rewind the lexer\n    index = 0;\n    line = 1;\n    lineStart = 0;\n    length = input.length;\n    // When tracking identifier scope, initialize with an empty scope.\n    scopes = [[]];\n    scopeDepth = 0;\n    globals = [];\n    locations = [];\n\n    if (options.comments) comments = [];\n    if (!options.wait) return end();\n    return exports;\n  }\n\n  // Write to the source code buffer without beginning the parse.\n  exports.write = write;\n\n  function write(_input) {\n    input += String(_input);\n    length = input.length;\n    return exports;\n  }\n\n  // Send an EOF and begin parsing.\n  exports.end = end;\n\n  function end(_input) {\n    if ('undefined' !== typeof _input) write(_input);\n\n    // Ignore shebangs.\n    if (input && input.substr(0, 2) === '#!') input = input.replace(/^.*/, function (line) {\n      return line.replace(/./g, ' ');\n    });\n\n    length = input.length;\n    trackLocations = options.locations || options.ranges;\n    // Initialize with a lookahead token.\n    lookahead = lex();\n\n    var chunk = parseChunk();\n    if (options.comments) chunk.comments = comments;\n    if (options.scope) chunk.globals = globals;\n\n    if (locations.length > 0)\n      throw new Error('Location tracking failed. This is most likely a bug in luaparse');\n\n    return chunk;\n  }\n\n}));\n/* vim: set sw=2 ts=2 et tw=79 : */\n","import Vue from \"vue\";\nconst Bus = new Vue({});\nexport default Bus;\n\n// Use like\n// Bus.$emit(事件名,数据);\n// Bus.$on(事件名,data => {});\n","const { isNull, isBoolean, isNumber, isString, isArray, isObject, isEmpty, fromPairs, keys, map, repeat } = require('lodash')\nconst { parse: parseLua } = require('luaparse')\n\nconst formatLuaString = (string, singleQuote) => (singleQuote ? `'${string.replace(/'/g, \"\\\\'\")}'` : `\"${string.replace(/\"/g, '\\\\\"')}\"`)\n\nconst formatLuaKey = (string, singleQuote) => (string.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/) ? string : `[${formatLuaString(string, singleQuote)}]`)\n\nconst format = (value, options = { eol: '\\n', singleQuote: true, spaces: 2 }) => {\n  options = options || {}\n  const eol = (options.eol = isString(options.eol) ? options.eol : '\\n')\n  options.singleQuote = isBoolean(options.singleQuote) ? options.singleQuote : true\n  options.spaces = isNull(options.spaces) || isNumber(options.spaces) || isString(options.spaces) ? options.spaces : 2\n\n  const rec = (value, i = 0) => {\n    if (isNull(value)) {\n      return 'nil'\n    }\n    if (isBoolean(value) || isNumber(value)) {\n      return value.toString()\n    }\n    if (isString(value)) {\n      return formatLuaString(value, options.singleQuote)\n    }\n    if (isArray(value)) {\n      if (isEmpty(value)) {\n        return '{}'\n      }\n      if (options.spaces) {\n        const spaces = isNumber(options.spaces) ? repeat(' ', options.spaces * (i + 1)) : repeat(options.spaces, i + 1)\n        const spacesEnd = isNumber(options.spaces) ? repeat(' ', options.spaces * i) : repeat(options.spaces, i)\n        return `{${eol}${value.map(e => `${spaces}${rec(e, i + 1)},`).join(eol)}${eol}${spacesEnd}}`\n      }\n      return `{${value.map(e => `${rec(e, i + 1)},`).join('')}}`\n    }\n    if (isObject(value)) {\n      if (isEmpty(value)) {\n        return '{}'\n      }\n      if (options.spaces) {\n        const spaces = isNumber(options.spaces) ? repeat(' ', options.spaces * (i + 1)) : repeat(options.spaces, i + 1)\n        const spacesEnd = isNumber(options.spaces) ? repeat(' ', options.spaces * i) : repeat(options.spaces, i)\n        return `{${eol}${keys(value)\n          .map(key => `${spaces}${formatLuaKey(key, options.singleQuote)} = ${rec(value[key], i + 1)},`)\n          .join(eol)}${eol}${spacesEnd}}`\n      }\n      return `{${keys(value)\n        .map(key => `${formatLuaKey(key, options.singleQuote)}=${rec(value[key], i + 1)},`)\n        .join('')}}`\n    }\n    throw new Error(`can't format ${typeof value}`)\n  }\n\n  return `return${options.spaces ? ' ' : ''}${rec(value)}`\n}\n\nconst luaAstToJson = ast => {\n  // literals\n  if (['NilLiteral', 'BooleanLiteral', 'NumericLiteral', 'StringLiteral'].includes(ast.type)) {\n    return ast.value\n  }\n  // basic expressions\n  if (ast.type === 'UnaryExpression' && ast.operator === '-') {\n    return -luaAstToJson(ast.argument)\n  }\n  if (ast.type === 'Identifier') {\n    return ast.name\n  }\n  // tables\n  if (['TableKey', 'TableKeyString'].includes(ast.type)) {\n    return { __internal_table_key: true, key: luaAstToJson(ast.key), value: luaAstToJson(ast.value) }\n  }\n  if (ast.type === 'TableValue') {\n    return luaAstToJson(ast.value)\n  }\n  if (ast.type === 'TableConstructorExpression') {\n    if (ast.fields[0] && ast.fields[0].key) {\n      const object = fromPairs(\n        map(ast.fields, field => {\n          const { key, value } = luaAstToJson(field)\n          return [key, value]\n        }),\n      )\n      return isEmpty(object) ? [] : object\n    }\n    return map(ast.fields, field => {\n      const value = luaAstToJson(field)\n      return value.__internal_table_key ? [value.key, value.value] : value\n    })\n  }\n  // top-level statements, only looking at the first statement, either return or local\n  // todo: filter until return or local?\n  if (ast.type === 'LocalStatement') {\n    const values = ast.init.map(luaAstToJson)\n    return values.length === 1 ? values[0] : values\n  }\n  if (ast.type === 'ReturnStatement') {\n    const values = ast.arguments.map(luaAstToJson)\n    return values.length === 1 ? values[0] : values\n  }\n  if (ast.type === 'Chunk') {\n    return luaAstToJson(ast.body[0])\n  }\n  throw new Error(`can't parse ${ast.type}`)\n}\n\nconst parse = value => luaAstToJson(parseLua(value, { comments: false }))\n\nmodule.exports = {\n  format,\n  parse,\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.ready)?_c('div',{staticClass:\"c-facedat\"},[_c('el-tabs',{staticClass:\"c-facedat-preivew\",attrs:{\"type\":\"card\"},model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},[_c('el-tab-pane',{attrs:{\"label\":\"眼部轮廓\",\"name\":\"eye\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['eye']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"嘴部轮廓\",\"name\":\"mouth\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['mouth']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"鼻子轮廓\",\"name\":\"nose\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['nose']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"脸部轮廓\",\"name\":\"face\"}},[_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-list\"},_vm._l((_vm.group['face']),function(key,i){return _c('li',{key:key + i},[_c('label',[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('span',[_vm._v(_vm._s(_vm.facedata[\"tBone\"][key]))]),_c('el-slider',{staticClass:\"u-range\",attrs:{\"min\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['min'],\"max\":_vm.bone_range[_vm.body_type][_vm.dict[key]['type']]['max'],\"disabled\":_vm.lock},model:{value:(_vm.facedata['tBone'][key]),callback:function ($$v) {_vm.$set(_vm.facedata['tBone'], key, $$v)},expression:\"facedata['tBone'][key]\"}})],1)}),0)])]),_c('el-tab-pane',{attrs:{\"label\":\"贴花\",\"name\":\"decal\"}},[_c('div',{staticClass:\"m-facedat-decals\",attrs:{\"id\":\"decals\"}},[_vm._l((_vm.group['decal']),function(key,i){return _c('div',{key:key + i,staticClass:\"c-facedat-group\"},[(_vm.cleandata['tDecal'][key])?[_c('ul',{staticClass:\"u-decals\"},[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.clean || _vm.checkdecal_prop(key)),expression:\"!clean || checkdecal_prop(key)\"}]},[_c('div',{staticClass:\"u-title\"},[_vm._v(_vm._s(_vm.dict[key][\"desc\"]))]),_c('img',{staticClass:\"u-pic\",attrs:{\"src\":_vm.getDecalIcon(key, _vm.cleandata['tDecal'][key]['nShowID'])}}),_c('span',{staticClass:\"u-dname\"},[_vm._v(_vm._s(_vm.getDecalName(key, _vm.cleandata[\"tDecal\"][key][\"nShowID\"])))]),_c('span',{staticClass:\"u-dcolor\"},[_vm._v(\"(颜色:\"+_vm._s(_vm.cleandata[\"tDecal\"][key][\"nColorID\"])+\")\")]),(_vm.showDecalFree(key, _vm.cleandata['tDecal'][key]['nShowID']))?_c('span',{staticClass:\"u-free\"},[_c('i',{staticClass:\"el-icon-success\"}),_vm._v(\" 新建角色可用 \")]):_vm._e(),(_vm.showDecalPrice(key, _vm.cleandata['tDecal'][key]['nShowID']))?_c('span',{staticClass:\"u-price\"},[_c('i',{staticClass:\"el-icon-coin\"}),_vm._v(\" \"+_vm._s(_vm.showDecalPrice(key, _vm.cleandata[\"tDecal\"][key][\"nShowID\"]))+\" 通宝 \")]):_vm._e()])])]:_vm._e()],2)}),_c('div',{staticClass:\"c-facedat-group\"},[_c('ul',{staticClass:\"u-decals\"},[_c('div',{staticClass:\"u-title\"},[_vm._v(\"总计\")]),_c('span',{staticClass:\"u-total u-price\"},[_c('i',{staticClass:\"el-icon-coin\"}),_vm._v(\" \"),_c('b',[_vm._v(_vm._s(_vm.total_coin))]),_vm._v(\" 通宝\")])])])],2)])],1),_c('div',{staticClass:\"c-facedat-setting\"},[_c('el-form',{ref:\"form\",staticClass:\"c-facedat-setting-form\",attrs:{\"label-width\":\"80px\",\"label-position\":\"left\"}},[_c('el-form-item',{attrs:{\"label\":\"高级\"}},[_c('el-checkbox',{model:{value:(_vm.clean),callback:function ($$v) {_vm.clean=$$v},expression:\"clean\"}},[_vm._v(\"清洗模式\")]),_c('span',{staticClass:\"u-warning\"},[_c('i',{staticClass:\"el-icon-warning-outline\"}),_vm._v(\" 仅保留创建新角色时可用项，如提示非法数据也请尝试开启该模式 \")])],1)],1)],1),_c('div',{staticClass:\"c-facedata-btns\"},[_c('el-button',{staticClass:\"u-btn\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-receiving\"},on:{\"click\":function($event){return _vm.buildData('std')}}},[_vm._v(\"导出正式服\")]),_c('el-button',{staticClass:\"u-btn\",attrs:{\"type\":\"warning\",\"icon\":\"el-icon-receiving\"},on:{\"click\":function($event){return _vm.buildData('origin')}}},[_vm._v(\"导出怀旧服\")])],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--13-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--1-0!../../../vue-loader/lib/index.js??vue-loader-options!../../../vue-svg-inline-loader/dist/index.min.js!./Facedat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Facedat.vue?vue&type=template&id=c7a424b0&\"\nimport script from \"./Facedat.vue?vue&type=script&lang=js&\"\nexport * from \"./Facedat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Facedat.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}